{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}},"post_list":[{"title":"网络管理工具 NetworkManager","uid":"80d29f01d39b07c6bd5a27520f206740","slug":"Linux/NetworkManager","date":"2023-06-17T04:51:00.000Z","updated":"2023-06-17T12:59:22.674Z","comments":true,"path":"api/articles/Linux/NetworkManager.json","keywords":null,"cover":"/img/bg/Linux.png","text":"NetworkManager 是一个系统网络服务，它可以管理网络设备和网络连接，在可用的情况下保持网络连接的通畅。它管理以太网、WiFi、移动宽带和PPPoE设备，同时还提供各种不同VPN服务的VPN集成。 默认情况下，Ubuntu Core 的网络管理由 systemd 的 n...","link":"","photos":[],"count_time":{"symbolsCount":"9.8k","symbolsTime":"9 mins."},"categories":[{"name":"Linux","slug":"Linux","count":3,"path":"api/categories/Linux.json"}],"tags":[{"name":"网络管理工具","slug":"网络管理工具","count":1,"path":"api/tags/网络管理工具.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"FreeRTOS 的定时器 (Timer)","uid":"0de178335a5288a6c84f26e77dfbea47","slug":"FreeRTOS/Timer","date":"2023-05-07T09:24:00.000Z","updated":"2023-05-07T09:36:40.877Z","comments":true,"path":"api/articles/FreeRTOS/Timer.json","keywords":null,"cover":"/img/FreeRTOS/logo.jpg","text":"软件定时器用于在将来一个设定的时间或以固定频率定期的执行函数。软件定时器所执行的函数被称为软件定时器的回调函数。 软件定时器由 FreeRTOS 内核实现，并受其控制。它不需要硬件支持，也与硬件定时器或硬件计数器无关。软件计时器不使用任何处理时间，除非软件计时器回调函数正在实际执...","link":"","photos":[],"count_time":{"symbolsCount":"8.4k","symbolsTime":"8 mins."},"categories":[{"name":"嵌入式","slug":"嵌入式","count":3,"path":"api/categories/嵌入式.json"}],"tags":[{"name":"FreeRTOS","slug":"FreeRTOS","count":3,"path":"api/tags/FreeRTOS.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"FreeRTOS 的队列 (Queue)","uid":"b5bbb50a4ed24d8a8d9fcbeb2df5e6ea","slug":"FreeRTOS/Queue","date":"2023-05-05T12:57:00.000Z","updated":"2023-05-06T11:27:20.463Z","comments":true,"path":"api/articles/FreeRTOS/Queue.json","keywords":null,"cover":"/img/FreeRTOS/logo.jpg","text":"队列提供一种任务到任务、任务到中断和中断到任务之间的通信机制。 队列的特点 数据存储 队列可保存有限数量的固定大小的数据项。一个队列可以容纳的最大数据量称为它的长度。在创建队列时需要指定每个数据项的长度和大小。队列通常使用先进先出(FIFO)缓冲区，数据在队列末尾被被写入并仓队列...","link":"","photos":[],"count_time":{"symbolsCount":"19k","symbolsTime":"17 mins."},"categories":[{"name":"嵌入式","slug":"嵌入式","count":3,"path":"api/categories/嵌入式.json"}],"tags":[{"name":"FreeRTOS","slug":"FreeRTOS","count":3,"path":"api/tags/FreeRTOS.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"FreeRTOS 的任务 (Task)","uid":"01ed63026d9bc8723f828c17bac96fdf","slug":"FreeRTOS/Task","date":"2023-04-23T09:13:00.000Z","updated":"2023-05-06T11:23:21.557Z","comments":true,"path":"api/articles/FreeRTOS/Task.json","keywords":null,"cover":"/img/FreeRTOS/logo.jpg","text":" FreeRTOS 是由 Real Time Engineers 公司独家拥有、开发和维护的。Real Time Engineers 公司已经与世界领先的芯片公司密切合作了十多年，为您提供屡获殊荣的商业级和完全免费的高质量软件。 FreeRTOS 非常适合使用微控制器或小型微处理...","link":"","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"18 mins."},"categories":[{"name":"嵌入式","slug":"嵌入式","count":3,"path":"api/categories/嵌入式.json"}],"tags":[{"name":"FreeRTOS","slug":"FreeRTOS","count":3,"path":"api/tags/FreeRTOS.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"链表 linked list","uid":"0d8865dd6f5b4fb80b5a9df16b916aeb","slug":"DSAA/链表","date":"2023-04-14T12:00:00.000Z","updated":"2023-04-15T02:49:14.057Z","comments":true,"path":"api/articles/DSAA/链表.json","keywords":null,"cover":"/img/DSAA/linked list 1.png","text":"链表 linked list 什么是链表 链表是数据元素的线性集合，其顺序不是由它们在内存中的物理位置给出的。每个元素都指向下一个元素。它是一种数据结构，由一组节点组成，这些节点共同表示一个序列。在其最基本的形式中，每个节点都包含：数据和指向序列中下一个节点的指针（链接）。这种结...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":1,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"计算机","slug":"计算机","count":1,"path":"api/tags/计算机.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CAN 总线协议","uid":"386d227c4f88ed4186d8b0b65da86630","slug":"Communication Protocol/CAN 总线","date":"2023-04-01T09:02:00.000Z","updated":"2023-05-05T08:19:03.253Z","comments":true,"path":"api/articles/Communication Protocol/CAN 总线.json","keywords":null,"cover":"/img/CAN/CAN.jpg","text":"CAN 总线协议 Controller Area Network (CAN bus) 是一种车辆总线标准，允许为控制器和设备在没有主机的情况下与彼此的应用程序进行通信（没有主从关系）。它是一种基于消息的协议，最初设计用于汽车内的多路复用电线以节省铜线，但它也可以许多其他情况。对于...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"通信协议","slug":"通信协议","count":2,"path":"api/categories/通信协议.json"}],"tags":[{"name":"CAN 总线","slug":"CAN-总线","count":1,"path":"api/tags/CAN-总线.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"E96 系列电阻标称阻值","uid":"5446d073459d8b66ad572b884caef029","slug":"Electronic/E96系列电阻标称阻值","date":"2023-03-21T03:10:00.000Z","updated":"2023-04-15T04:54:49.027Z","comments":true,"path":"api/articles/Electronic/E96系列电阻标称阻值.json","keywords":null,"cover":"/img/bg/bg2.jpg","text":"E96系列电阻标称阻值 ","link":"","photos":[],"count_time":{"symbolsCount":18,"symbolsTime":"1 mins."},"categories":[{"name":"电子技术","slug":"电子技术","count":3,"path":"api/categories/电子技术.json"}],"tags":[{"name":"阻值表","slug":"阻值表","count":1,"path":"api/tags/阻值表.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"STM32 定时器产生 PWM 波","uid":"f2d866e3599035768285c02ebfff1255","slug":"MCU/STM32-PWM","date":"2023-02-13T10:57:00.000Z","updated":"2023-05-05T08:04:28.293Z","comments":true,"path":"api/articles/MCU/STM32-PWM.json","keywords":null,"cover":"/img/STM32-GPIO/STM32-logo.jpg","text":"STM32 定时器产生 PWM 波 对于 PWM 波来说最重要的两个参数就是频率和占空比。频率是周期的倒数，占空比是指脉宽时间占周期的比例。微控制器产生 PWM 波的原理是，定时器重复的从 0 计数到 ARR，设定比较值 CCRx。当定时器的计数值向上计数到与 CCRx 的值相等...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"单片机","slug":"单片机","count":4,"path":"api/categories/单片机.json"}],"tags":[{"name":"STM32","slug":"STM32","count":4,"path":"api/tags/STM32.json"},{"name":"PWM","slug":"PWM","count":2,"path":"api/tags/PWM.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"脉冲宽度调制 PWM","uid":"927bf395dd3f4c1ed23a8c2f2923f289","slug":"Control/脉冲宽度调制 PWM","date":"2023-02-12T07:48:00.000Z","updated":"2023-04-15T03:25:53.567Z","comments":true,"path":"api/articles/Control/脉冲宽度调制 PWM.json","keywords":null,"cover":"/img/bg/bg2.jpg","text":"脉冲宽度调制 PWM 脉宽调制(PWM) 或脉冲持续时间调制(PDM)是一种通过有效地将电信号分成离散部分来降低电信号传输的平均功率的方法。馈送到负载的电压（和电流）的平均值通过快速打开和关闭电源与负载之间的开关来控制。同关断周期相比，开关开启的时间越长，提供给负载的总功率就越高...","link":"","photos":[],"count_time":{"symbolsCount":867,"symbolsTime":"1 mins."},"categories":[{"name":"自动控制","slug":"自动控制","count":1,"path":"api/categories/自动控制.json"}],"tags":[{"name":"PWM","slug":"PWM","count":2,"path":"api/tags/PWM.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"矩阵的导数运算(1)","uid":"d97c1a68285e6aac869410b1223c6673","slug":"Math/矩阵的导数运算1","date":"2023-02-10T08:37:00.000Z","updated":"2023-04-17T07:50:26.463Z","comments":true,"path":"api/articles/Math/矩阵的导数运算1.json","keywords":null,"cover":"/img/bg/math.jpg","text":"矩阵的导数运算 (1) 标量方程对向量的导数： 定义： - 标量 [] - 向量 [] 求导结果的行数与分母相同，称为分母布局(Denominator Layout) 行数和分子相同，称为分子布局(Numerator Layout) 例 ， 分母布局 分子布局 向量方程对向量的导...","link":"","photos":[],"count_time":{"symbolsCount":241,"symbolsTime":"1 mins."},"categories":[{"name":"数学","slug":"数学","count":3,"path":"api/categories/数学.json"}],"tags":[{"name":"矩阵求导","slug":"矩阵求导","count":1,"path":"api/tags/矩阵求导.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"STM32 DMA","uid":"da1a2b22445c6e9d06b74da423642c5e","slug":"MCU/STM32-DMA","date":"2022-10-14T16:00:00.000Z","updated":"2023-05-11T12:11:10.447Z","comments":true,"path":"api/articles/MCU/STM32-DMA.json","keywords":null,"cover":"/img/STM32-GPIO/STM32-logo.jpg","text":"DMA 的介绍 直接内存访问(Direct memory accesss，DMA) 用于在外设和内存之间以及内存到内存之间提供高速的数据传输。数据可以通过 DMA 快速传输，不需要任何 CPU 操作。这样可以节约 CPU 资源。 两个 DMA 控制器总共有 12 个通道（7 个用...","link":"","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[{"name":"单片机","slug":"单片机","count":4,"path":"api/categories/单片机.json"}],"tags":[{"name":"STM32","slug":"STM32","count":4,"path":"api/tags/STM32.json"},{"name":"DMA","slug":"DMA","count":1,"path":"api/tags/DMA.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"STM32 中断和事件","uid":"123422951594fa2cdc8f869cafbfa775","slug":"MCU/STM32-IAE","date":"2022-10-12T09:36:00.000Z","updated":"2023-05-06T11:34:51.397Z","comments":true,"path":"api/articles/MCU/STM32-IAE.json","keywords":null,"cover":"/img/STM32-GPIO/STM32-logo.jpg","text":"嵌套向量中断控制器 (NVIC) 特点 68条 (不包括 16 条 Cortex®-M3 中断线) 16 个可编程优先级 (使用 4 位中断优先级) 低延迟异常和中断处理 系统控制寄存器的实现 NVIC 和处理器核心接口紧密耦合，使得低延迟中断处理和高效处理延迟到达的中断成为可能...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"单片机","slug":"单片机","count":4,"path":"api/categories/单片机.json"}],"tags":[{"name":"STM32","slug":"STM32","count":4,"path":"api/tags/STM32.json"},{"name":"中断和事件","slug":"中断和事件","count":1,"path":"api/tags/中断和事件.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"STM32 GPIO","uid":"c3a5445bafc67228b7830b43d89f077b","slug":"MCU/STM32-GPIO","date":"2022-10-11T07:47:00.000Z","updated":"2023-05-05T08:06:19.527Z","comments":true,"path":"api/articles/MCU/STM32-GPIO.json","keywords":null,"cover":"/img/STM32-GPIO/STM32-logo.jpg","text":"STM32 GPIO GPIO 功能描述 GPIO 的寄存器包括： 2 个 32-bit 配置寄存器 GPIOx_CRL GPIO_CRH 2 个 32-bit 数据寄存器 GPIOx_IDR GPIOx_ODR 1 个 32-bit 置位/复位寄存器 GPIOx_BSRR 1 ...","link":"","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[{"name":"单片机","slug":"单片机","count":4,"path":"api/categories/单片机.json"}],"tags":[{"name":"STM32","slug":"STM32","count":4,"path":"api/tags/STM32.json"},{"name":"GPIO","slug":"GPIO","count":1,"path":"api/tags/GPIO.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Amesim 与 Simulink 的联合仿真","uid":"51d61b1e82665e319117cf3815ca2bc7","slug":"Amesim/Amesim与Simulink联合仿真","date":"2022-09-28T07:12:00.000Z","updated":"2023-04-15T03:27:40.237Z","comments":true,"path":"api/articles/Amesim/Amesim与Simulink联合仿真.json","keywords":null,"cover":"/img/Amesim/AMESim.png","text":"Amesim 与 Simulink 的联合仿真 环境配置 软件版本为：Matlab 2020b 和 Amesim 2021.1，编译器使用 MinGW-w64 附件安装： 首先需要在 Matlab 中安装附件 MATLAB Support for MinGW-w64 C/C++ ...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"Amesim","slug":"Amesim","count":1,"path":"api/categories/Amesim.json"}],"tags":[{"name":"Amesim","slug":"Amesim","count":1,"path":"api/tags/Amesim.json"},{"name":"Simulink","slug":"Simulink","count":1,"path":"api/tags/Simulink.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Python 的深拷贝和浅拷贝","uid":"5badb916fa8f30fce64229fc7b4b0982","slug":"Pyhon/深拷贝与浅拷贝","date":"2022-09-27T11:01:00.000Z","updated":"2023-05-05T08:22:12.120Z","comments":true,"path":"api/articles/Pyhon/深拷贝与浅拷贝.json","keywords":null,"cover":"/img/python/logo.png","text":"Python 的深拷贝和浅拷贝 a &#x3D; [1, 2, 3, [1, 2, 3, [4, 5]]] b &#x3D; a 当使用赋值运算符 =，a 和 b 两个变量指向的同一个地址： a &#x3D; [1, 2, 3, [1, 2, 3, [4, 5]]] c &#x3...","link":"","photos":[],"count_time":{"symbolsCount":431,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":1,"path":"api/categories/Python.json"}],"tags":[{"name":"Python tips","slug":"Python-tips","count":1,"path":"api/tags/Python-tips.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"AD20 使用笔记","uid":"c1235f99efb341252757b2cde16e8265","slug":"Altium-Designer/AD20使用笔记","date":"2022-09-19T06:48:00.000Z","updated":"2023-04-15T05:03:15.450Z","comments":true,"path":"api/articles/Altium-Designer/AD20使用笔记.json","keywords":null,"cover":"/img/EDA2AD/AD logo.jpg","text":"AD20 使用笔记 网格设置 Altium Designer 20 一共有 3 种栅格：Grids、Gudies 和 Axes。 Grids 是最常用的普通栅格。 Grids 栅格的设置有： G 键设置栅格大小 Ctrl + G 设置栅格属性 自定义区域栅格 栅格捕捉开关： Gu...","link":"","photos":[],"count_time":{"symbolsCount":761,"symbolsTime":"1 mins."},"categories":[{"name":"电子技术","slug":"电子技术","count":3,"path":"api/categories/电子技术.json"}],"tags":[{"name":"Altium Designer","slug":"Altium-Designer","count":2,"path":"api/tags/Altium-Designer.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"立创 EAD 导出 AD 封装","uid":"0eaae2e7a8b8a57479711ca2360e5962","slug":"Altium-Designer/立创EAD导出AD封装","date":"2022-09-08T08:43:00.000Z","updated":"2023-04-15T05:05:02.767Z","comments":true,"path":"api/articles/Altium-Designer/立创EAD导出AD封装.json","keywords":null,"cover":"/img/EDA2AD/AD logo.jpg","text":"立创 EDA 导出 AD 封装 导出 AD 库 确认导出 得到 AD 的 pcb 文件 生成的是 pcb 文件，需要再 AD 中生成元件封装库 生成元件封装库 得到元件封装库 导出 3D 模型文件 导出 3D 模型 选择导出 使用 FreeCAD 打开文件，并删除 PCB 底板 ...","link":"","photos":[],"count_time":{"symbolsCount":208,"symbolsTime":"1 mins."},"categories":[{"name":"电子技术","slug":"电子技术","count":3,"path":"api/categories/电子技术.json"}],"tags":[{"name":"Altium Designer","slug":"Altium-Designer","count":2,"path":"api/tags/Altium-Designer.json"},{"name":"立创EDA","slug":"立创EDA","count":1,"path":"api/tags/立创EDA.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"侧风引起的车辆运动","uid":"89d442f48e0b4ccbd2aa5cc42a297c7d","slug":"Vehicle Dynamics/侧风引起的车辆运动","date":"2022-08-10T14:16:00.000Z","updated":"2023-05-14T13:30:14.000Z","comments":true,"path":"api/articles/Vehicle Dynamics/侧风引起的车辆运动.json","keywords":null,"cover":"/img/bg/vehicle.jpg","text":" 高速行驶的车辆在受到侧向风力作用时，将会产生侧向运动。 侧风干扰力 设以速度 直线行驶的车辆，受到速度为 的侧向风的作用，则作用于车辆的侧向力 和横摆力矩 表达为 侧风引起的干扰力和横摆力矩 - 侧向力系数 - 横摆力矩系数 - 空气密度 - 表示车辆尺寸，通常取为轴距 和 均...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"车辆动力学","slug":"车辆动力学","count":6,"path":"api/categories/车辆动力学.json"}],"tags":[{"name":"《车辆操纵动力学理论与应用》","slug":"《车辆操纵动力学理论与应用》","count":6,"path":"api/tags/《车辆操纵动力学理论与应用》.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"质心侧向力所引起的车辆运动","uid":"7c9364c1fe52fd3e1a8da24093d3f563","slug":"Vehicle Dynamics/质心侧向力所引起的车辆运动","date":"2022-08-07T07:20:00.000Z","updated":"2023-05-14T13:30:36.000Z","comments":true,"path":"api/articles/Vehicle Dynamics/质心侧向力所引起的车辆运动.json","keywords":null,"cover":"/img/bg/vehicle.jpg","text":" 当车辆行驶在侧向倾斜的路面上时，其重力的侧向分量即为作用于车辆质心的侧向力。 施加于车辆质心 CG 的侧向力 阶跃侧向力作用下车辆的运动 设前轮转角为零，持续作用于质心的侧向力为 ，根据车辆的运动方程(车辆运动方程 - 固定于车辆坐标系下的运动方程)： 假设车辆运动的过程中 的...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"车辆动力学","slug":"车辆动力学","count":6,"path":"api/categories/车辆动力学.json"}],"tags":[{"name":"《车辆操纵动力学理论与应用》","slug":"《车辆操纵动力学理论与应用》","count":6,"path":"api/tags/《车辆操纵动力学理论与应用》.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"车辆的动态特性","uid":"1f8b736ff94c1eb5090dfe6a571c51cd","slug":"Vehicle Dynamics/车辆的动态特性","date":"2022-07-25T08:58:00.000Z","updated":"2023-05-14T13:30:51.000Z","comments":true,"path":"api/articles/Vehicle Dynamics/车辆的动态特性.json","keywords":null,"cover":"/img/bg/vehicle.jpg","text":"车辆对转向输入的瞬态响应 瞬态响应和方向稳定性 描述车辆运动的基本方程为： 其特性方程为： 或 其中， 且车辆的横摆转动惯量可写为： - 横摆力矩半径 代入上式得： 由特征方程所表示的系统，其响应可由 表示，其中 和 为方程的根： 车辆瞬态响应特性及其稳定性可按 和 的情况作如下...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"车辆动力学","slug":"车辆动力学","count":6,"path":"api/categories/车辆动力学.json"}],"tags":[{"name":"《车辆操纵动力学理论与应用》","slug":"《车辆操纵动力学理论与应用》","count":6,"path":"api/tags/《车辆操纵动力学理论与应用》.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"车辆的稳态转向","uid":"9ab12d58e32b064120d052ffccea039c","slug":"Vehicle Dynamics/车辆的稳态转向","date":"2022-07-22T03:55:00.000Z","updated":"2023-05-14T13:24:03.650Z","comments":true,"path":"api/articles/Vehicle Dynamics/车辆的稳态转向.json","keywords":null,"cover":"/img/bg/vehicle.jpg","text":" 现有可用的几种方法，可以不通过直接求解运动方程来理解其基本运动特性。 通过分析这个力学系统的稳态条件来了解其静态特性 通过考虑该力学系统的特征方程的特征根以及对周期性外界干扰的响应，以研究其力学特性 稳态转向运动的描述 车辆在作稳态转向运动时，其质心侧偏角和横摆角速度不变。因此...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"车辆动力学","slug":"车辆动力学","count":6,"path":"api/categories/车辆动力学.json"}],"tags":[{"name":"《车辆操纵动力学理论与应用》","slug":"《车辆操纵动力学理论与应用》","count":6,"path":"api/tags/《车辆操纵动力学理论与应用》.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"车辆运动方程","uid":"f9c4292fa4fe978142ad10f6e4c2b397","slug":"Vehicle Dynamics/车辆运动方程","date":"2022-07-21T05:50:00.000Z","updated":"2023-05-14T13:31:05.000Z","comments":true,"path":"api/articles/Vehicle Dynamics/车辆运动方程.json","keywords":null,"cover":"/img/bg/vehicle.jpg","text":" 考虑的只是车辆的侧向运动和横摆运动 固定于车辆坐标系下的运动方程 车辆坐标系： 表示车辆的纵向， 表示车辆的侧向，其中坐标系的原点位于车辆的质心 点。 描述车辆平面运动的坐标轴 对于 坐标系，质心 的位置矢量记为 ，则其速度矢量 可表示为： - 表示 方向 - 表示 方向 对速...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"车辆动力学","slug":"车辆动力学","count":6,"path":"api/categories/车辆动力学.json"}],"tags":[{"name":"《车辆操纵动力学理论与应用》","slug":"《车辆操纵动力学理论与应用》","count":6,"path":"api/tags/《车辆操纵动力学理论与应用》.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"轮胎力学","uid":"d9cd67d7ebad7fb89d409e84b17a6add","slug":"Vehicle Dynamics/轮胎力学","date":"2022-07-19T05:50:00.000Z","updated":"2023-05-14T13:19:34.987Z","comments":true,"path":"api/articles/Vehicle Dynamics/轮胎力学.json","keywords":null,"cover":"/img/bg/vehicle.jpg","text":"侧向力 当侧偏角较小时，它与侧向力几乎呈线性关系。当侧偏角超过某一值后，侧向力的增加变得缓慢，并最终在 出达到饱和。 不同垂直载荷下轮胎侧向力与侧偏角的关系 对于一辆普通的轿车而言，其侧向运动通常是在线性区域范围内发生的。上图中线性部分的斜率就是轮胎的侧偏刚度，它表示单位侧偏角产...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"车辆动力学","slug":"车辆动力学","count":6,"path":"api/categories/车辆动力学.json"}],"tags":[{"name":"《车辆操纵动力学理论与应用》","slug":"《车辆操纵动力学理论与应用》","count":6,"path":"api/tags/《车辆操纵动力学理论与应用》.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Docker实战案例","uid":"7d5686ce3c9c17768b418785872c4c2b","slug":"Linux/Docker实战案例","date":"2022-06-30T07:13:00.000Z","updated":"2023-04-15T05:06:37.553Z","comments":true,"path":"api/articles/Linux/Docker实战案例.json","keywords":null,"cover":"/img/docker/DockerLogo.png","text":"操作系统 BusyBox BusyBox 是一个集成了一百多个最常用 Linux 命令和工具（如cat、echo、grep、mount、telnet等）的精简工具箱，它只有几MB的大小，很方便进行各种快速验证，被誉为“Linux系统的瑞士军刀”。BusyBox 可运行于多款 PO...","link":"","photos":[],"count_time":{"symbolsCount":"21k","symbolsTime":"19 mins."},"categories":[{"name":"Docker","slug":"Docker","count":3,"path":"api/categories/Docker.json"}],"tags":[{"name":"《Docker技术入门与实践》","slug":"《Docker技术入门与实践》","count":2,"path":"api/tags/《Docker技术入门与实践》.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"棋盘格角点检测","uid":"1eaff4e22fb5fa029043d1942e6ee81c","slug":"Digital-Image/X-Corner","date":"2022-06-29T07:11:00.000Z","updated":"2023-04-15T05:07:30.420Z","comments":true,"path":"api/articles/Digital-Image/X-Corner.json","keywords":null,"cover":"/img/X-Corners/checkerboard.png","text":"A New Sub-Pixel Detector for X-Corners in Camera Calibration Targets 基于海塞矩阵的方法 一个标准的 X-Corners 如下图所示： 其表达式为： 由于实际的图像中存在噪点，所以需要对图像进行低通滤波，这里使用...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"图像处理","slug":"图像处理","count":1,"path":"api/categories/图像处理.json"}],"tags":[{"name":"相机标定","slug":"相机标定","count":1,"path":"api/tags/相机标定.json"},{"name":"角点检测","slug":"角点检测","count":1,"path":"api/tags/角点检测.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Docker 基础入门","uid":"e8df40174e1c8fdb0eda4ca741803291","slug":"Linux/Docker基础入门","date":"2022-06-24T06:44:00.000Z","updated":"2023-04-15T05:18:04.613Z","comments":true,"path":"api/articles/Linux/Docker基础入门.json","keywords":null,"cover":"/img/docker/DockerLogo.png","text":"核心概念与安装配置 Docker 的三大核心概念： 镜像(Image) 容器(Container) 仓库(Repository) 核心概念 Docker 镜像 Docker 镜像可以将其理解为一个只读的模板。它是 docker 容器的基础。用户可以从网络上下载已经配置好的镜像，并...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"Docker","slug":"Docker","count":3,"path":"api/categories/Docker.json"}],"tags":[{"name":"《Docker技术入门与实践》","slug":"《Docker技术入门与实践》","count":2,"path":"api/tags/《Docker技术入门与实践》.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"拉普拉斯变换","uid":"f7bc0ebd3befb631a0f9a8db60b72936","slug":"Math/Laplace Transform","date":"2022-06-23T03:18:00.000Z","updated":"2023-04-17T08:18:55.283Z","comments":true,"path":"api/articles/Math/Laplace Transform.json","keywords":null,"cover":"/img/bg/math.jpg","text":"拉普拉斯变换 拉普拉斯变换简表 序号 原函数 象函数 1 单位阶跃函数 2 单位脉冲函数 3 常数 4 单位斜坡函数 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 拉普拉斯变换的定义 设有时间函数,当时，；在时定义函数的拉普拉斯变换为： ​ 拉普...","link":"","photos":[],"count_time":{"symbolsCount":548,"symbolsTime":"1 mins."},"categories":[{"name":"数学","slug":"数学","count":3,"path":"api/categories/数学.json"}],"tags":[{"name":"拉普拉斯变换","slug":"拉普拉斯变换","count":1,"path":"api/tags/拉普拉斯变换.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Latex数学公式","uid":"409671003844af96bee509bb7a2097ee","slug":"Math/Latex_formula","date":"2022-06-20T02:24:00.000Z","updated":"2023-04-17T07:51:59.163Z","comments":true,"path":"api/articles/Math/Latex_formula.json","keywords":null,"cover":"/img/bg/math.jpg","text":"数学公式的插入 类型 环境名称 行内公式 $...$ 独行公式 $$...$$ 希腊字母 命令 大写 小写 alpha gamma epsilon eta iota lambda nu xi rho tau phi psi beta delta zeta theta kappa ...","link":"","photos":[],"count_time":{"symbolsCount":"6.8k","symbolsTime":"6 mins."},"categories":[{"name":"数学","slug":"数学","count":3,"path":"api/categories/数学.json"}],"tags":[{"name":"Latex 公式","slug":"Latex-公式","count":1,"path":"api/tags/Latex-公式.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"MQTT V3.1","uid":"a903464ea5b37de55ddd5756ddfafbfa","slug":"IOT/Mqtt","date":"2022-06-18T12:30:03.000Z","updated":"2023-04-15T05:21:05.900Z","comments":true,"path":"api/articles/IOT/Mqtt.json","keywords":null,"cover":"/img/bg/bg1.jpg","text":"消息格式 每个 MQTT 消息可能包含三个部分： Fixed header(全部消息类型) Variable header(部分消息类型) Payload(部分消息类型) Fixed header 每个 MQTT 消息类型都必须包含 fixed header. fixed hea...","link":"","photos":[],"count_time":{"symbolsCount":"8.8k","symbolsTime":"8 mins."},"categories":[{"name":"通信协议","slug":"通信协议","count":2,"path":"api/categories/通信协议.json"}],"tags":[{"name":"MQTT","slug":"MQTT","count":1,"path":"api/tags/MQTT.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Linux 服务","uid":"d8ed3ff70bac5529479cf8a31499ebd5","slug":"Linux/service","date":"2022-05-04T04:05:00.000Z","updated":"2023-06-17T13:02:22.172Z","comments":true,"path":"api/articles/Linux/service.json","keywords":null,"cover":"/img/bg/Linux.png","text":"Linux 服务 daemon与服务 系统为了某些功能必须要提供一些服务（系统本身或者网络方面），这个服务就称为service。service 的提供需要程序来运行，完成这个 service 的程序就称之为 daemon。 服务的名称被建立之后，在 Linux 中使用时，通常在服...","link":"","photos":[],"count_time":{"symbolsCount":"8k","symbolsTime":"7 mins."},"categories":[{"name":"Linux","slug":"Linux","count":3,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux 服务","slug":"Linux-服务","count":1,"path":"api/tags/Linux-服务.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"路径规划算法","uid":"2b59eb5778e5da9b12f5210e8d61016e","slug":"Self-Driving/PathPlan","date":"2022-05-03T16:00:00.000Z","updated":"2023-04-15T05:23:56.570Z","comments":true,"path":"api/articles/Self-Driving/PathPlan.json","keywords":null,"cover":"/img/PathPlaning/A-Star-1.png","text":"1. 自动驾驶汽车定位-感知-规划-决策-控制概述 定位 定位，即通过GPS、惯导、激光雷达等传感器，获取车辆的位置和航向信息。 绝对定位是指通过GPS实现，采用双天线，通过卫星获得车辆在地球上的绝对位置和航向信息。 相对定位是指根据车辆的初始位姿，通过惯导、里程计等传感器获得加...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"自动驾驶","slug":"自动驾驶","count":1,"path":"api/categories/自动驾驶.json"}],"tags":[{"name":"路径规划","slug":"路径规划","count":1,"path":"api/tags/路径规划.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"pacman 文档","uid":"b64cd93b72faed23ef520531eb71c1e8","slug":"Linux/pacman","date":"2022-04-28T07:42:04.000Z","updated":"2023-04-15T05:25:45.930Z","comments":true,"path":"api/articles/Linux/pacman.json","keywords":null,"cover":"/img/pacman/arch_logo.png","text":"pacman - Arch Linux 软件管理器 SYNOPSIS pacman &lt;operation&gt; [options] [targets] DESCRIPTION Pacman 是一个包管理的使用程序，用于跟踪 Linux 系统上以安装的包。它具有依赖性支持、...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"Linux","slug":"Linux","count":3,"path":"api/categories/Linux.json"}],"tags":[{"name":"Pacman 命令","slug":"Pacman-命令","count":1,"path":"api/tags/Pacman-命令.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Docker","uid":"a48e6dda0c21e40880cba7e763278b04","slug":"Linux/Docker","date":"2022-04-24T16:00:00.000Z","updated":"2023-04-15T05:27:17.837Z","comments":true,"path":"api/articles/Linux/Docker.json","keywords":null,"cover":"/img/docker/docker_logo.jpg","text":"Docker 官方文档地址 中文参考手册 1.什么是Docker 1.1 官方定义 官方介绍 We have a vomplete container solution for you - no matter who you are where you are on your c...","link":"","photos":[],"count_time":{"symbolsCount":"9.3k","symbolsTime":"8 mins."},"categories":[{"name":"Docker","slug":"Docker","count":3,"path":"api/categories/Docker.json"}],"tags":[{"name":"Docker 入门","slug":"Docker-入门","count":1,"path":"api/tags/Docker-入门.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Hello World","uid":"b9663f58f18133b35bfe243f3e916a80","slug":"hello-world","date":"2022-03-29T16:00:00.000Z","updated":"2022-06-30T07:28:32.383Z","comments":true,"path":"api/articles/hello-world.json","keywords":null,"cover":null,"text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the ...","link":"","photos":[],"count_time":{"symbolsCount":512,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}],"categories":14,"tags":40,"word_count":"210k","post_count":34}