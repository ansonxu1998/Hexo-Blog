{"total":20,"pageSize":13,"pageCount":2,"data":[{"title":"链表 linked list","uid":"0d8865dd6f5b4fb80b5a9df16b916aeb","slug":"DSAA/链表","date":"2023-04-14T12:00:00.000Z","updated":"2023-04-14T12:17:15.577Z","comments":true,"path":"api/articles/DSAA/链表.json","cover":null,"text":"链表 linked list 什么是链表 链表是数据元素的线性集合，其顺序不是由它们在内存中的物理位置给出的。每个元素都指向下一个元素。它是一种数据结构，由一组节点组成，这些节点共同表示一个序列。在其最基本的形式中，每个节点都包含：数据和指向序列中下一个节点的指针（链接）。这种结...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":1,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"计算机","slug":"计算机","count":1,"path":"api/tags/计算机.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CAN 总线协议","uid":"386d227c4f88ed4186d8b0b65da86630","slug":"Communication Protocol/CAN 总线","date":"2023-04-01T09:02:00.000Z","updated":"2023-04-14T12:31:54.140Z","comments":true,"path":"api/articles/Communication Protocol/CAN 总线.json","cover":[],"text":"CAN 总线协议 Controller Area Network (CAN bus) 是一种车辆总线标准，允许为控制器和设备在没有主机的情况下与彼此的应用程序进行通信（没有主从关系）。它是一种基于消息的协议，最初设计用于汽车内的多路复用电线以节省铜线，但它也可以许多其他情况。对于...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"11 mins."},"categories":[{"name":"通信协议","slug":"通信协议","count":1,"path":"api/categories/通信协议.json"}],"tags":[{"name":"CAN 总线","slug":"CAN-总线","count":1,"path":"api/tags/CAN-总线.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"E96 系列电阻标称阻值","uid":"5446d073459d8b66ad572b884caef029","slug":"Electronic/E96系列电阻标称阻值","date":"2023-03-21T03:10:00.000Z","updated":"2023-04-14T12:30:22.567Z","comments":true,"path":"api/articles/Electronic/E96系列电阻标称阻值.json","cover":null,"text":"E96系列电阻标称阻值 ","link":"","photos":[],"count_time":{"symbolsCount":18,"symbolsTime":"1 mins."},"categories":[{"name":"阻值表","slug":"阻值表","count":1,"path":"api/categories/阻值表.json"}],"tags":[{"name":"电子技术","slug":"电子技术","count":1,"path":"api/tags/电子技术.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"STM32 定时器产生 PWM 波","uid":"f2d866e3599035768285c02ebfff1255","slug":"Control/STM32-PWM","date":"2023-02-13T10:57:00.000Z","updated":"2023-02-13T11:17:12.680Z","comments":true,"path":"api/articles/Control/STM32-PWM.json","cover":[],"text":"STM32 定时器产生 PWM 波 对于 PWM 波来说最重要的两个参数就是频率和占空比。频率是周期的倒数，占空比是指脉宽时间占周期的比例。微控制器产生 PWM 波的原理是，定时器重复的从 0 计数到 ARR，设定比较值 CCRx。当定时器的计数值向上计数到与 CCRx 的值相等...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"自动控制","slug":"自动控制","count":2,"path":"api/categories/自动控制.json"}],"tags":[{"name":"STM32","slug":"STM32","count":1,"path":"api/tags/STM32.json"},{"name":"PWM","slug":"PWM","count":2,"path":"api/tags/PWM.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"脉冲宽度调制 PWM","uid":"927bf395dd3f4c1ed23a8c2f2923f289","slug":"Control/脉冲宽度调制 PWM","date":"2023-02-12T07:48:00.000Z","updated":"2023-02-12T07:57:37.390Z","comments":true,"path":"api/articles/Control/脉冲宽度调制 PWM.json","cover":[],"text":"脉冲宽度调制 PWM 脉宽调制(PWM) 或脉冲持续时间调制(PDM)是一种通过有效地将电信号分成离散部分来降低电信号传输的平均功率的方法。馈送到负载的电压（和电流）的平均值通过快速打开和关闭电源与负载之间的开关来控制。同关断周期相比，开关开启的时间越长，提供给负载的总功率就越高...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"自动控制","slug":"自动控制","count":2,"path":"api/categories/自动控制.json"}],"tags":[{"name":"PWM","slug":"PWM","count":2,"path":"api/tags/PWM.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"矩阵的导数运算(1)","uid":"d97c1a68285e6aac869410b1223c6673","slug":"Math/矩阵的导数运算1","date":"2023-02-10T08:37:00.000Z","updated":"2023-04-15T02:31:18.360Z","comments":true,"path":"api/articles/Math/矩阵的导数运算1.json","cover":null,"text":"矩阵的导数运算 (1) 标量方程对向量的导数： 定义： \\[ \\frac{\\partial f(\\vec{y})}{\\partial \\vec{y}}=\\begin{bmatrix}\\frac{\\partial f(\\vec{y})}{\\partial y_1}\\\\\\frac{\\...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"数学","slug":"数学","count":2,"path":"api/categories/数学.json"}],"tags":[{"name":"矩阵求导","slug":"矩阵求导","count":1,"path":"api/tags/矩阵求导.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Amesim 与 Simulink 的联合仿真","uid":"51d61b1e82665e319117cf3815ca2bc7","slug":"Amesim/Amesim与Simulink联合仿真","date":"2022-09-28T07:12:00.000Z","updated":"2023-02-10T09:13:34.660Z","comments":true,"path":"api/articles/Amesim/Amesim与Simulink联合仿真.json","cover":[],"text":"Amesim 与 Simulink 的联合仿真 环境配置 软件版本为：Matlab 2020b 和 Amesim 2021.1，编译器使用 MinGW-w64 附件安装： 首先需要在 Matlab 中安装附件 MATLAB Support for MinGW-w64 C/C++ ...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"Amesim","slug":"Amesim","count":1,"path":"api/categories/Amesim.json"}],"tags":[{"name":"Amesim","slug":"Amesim","count":1,"path":"api/tags/Amesim.json"},{"name":"Simulink","slug":"Simulink","count":1,"path":"api/tags/Simulink.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Python 的深拷贝和浅拷贝","uid":"5badb916fa8f30fce64229fc7b4b0982","slug":"Pyhon/深拷贝与浅拷贝","date":"2022-09-27T11:01:00.000Z","updated":"2022-09-27T11:39:49.340Z","comments":true,"path":"api/articles/Pyhon/深拷贝与浅拷贝.json","cover":[],"text":"Python 的深拷贝和浅拷贝 12a = [1, 2, 3, [1, 2, 3, [4, 5]]]b = a 当使用赋值运算符 =，a 和 b 两个变量指向的同一个地址： 12a = [1, 2, 3, [1, 2, 3, [4, 5]]]c = a.cope() 当列表具有多...","link":"","photos":[],"count_time":{"symbolsCount":398,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":1,"path":"api/categories/Python.json"}],"tags":[{"name":"Python tips","slug":"Python-tips","count":1,"path":"api/tags/Python-tips.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"AD20 使用笔记","uid":"c1235f99efb341252757b2cde16e8265","slug":"Altium-Designer/AD20使用笔记","date":"2022-09-19T06:48:00.000Z","updated":"2022-09-27T12:25:24.280Z","comments":true,"path":"api/articles/Altium-Designer/AD20使用笔记.json","cover":[],"text":"AD20 使用笔记 网格设置 Altium Designer 20 一共有 3 种栅格：Grids、Gudies 和 Axes。 Grids 是最常用的普通栅格。 Grids 栅格的设置有： G 键设置栅格大小 Ctrl + G 设置栅格属性 自定义区域栅格 栅格捕捉开关： Gu...","link":"","photos":[],"count_time":{"symbolsCount":807,"symbolsTime":"1 mins."},"categories":[{"name":"Altium Designer","slug":"Altium-Designer","count":2,"path":"api/categories/Altium-Designer.json"}],"tags":[{"name":"Note","slug":"Note","count":2,"path":"api/tags/Note.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"立创 EAD 导出 AD 封装","uid":"0eaae2e7a8b8a57479711ca2360e5962","slug":"Altium-Designer/立创EAD导出AD封装","date":"2022-09-08T08:43:00.000Z","updated":"2022-09-08T08:48:04.563Z","comments":true,"path":"api/articles/Altium-Designer/立创EAD导出AD封装.json","cover":[],"text":"立创 EDA 导出 AD 封装 导出 AD 库 确认导出 得到 AD 的 pcb 文件 生成的是 pcb 文件，需要再 AD 中生成元件封装库 生成元件封装库 得到元件封装库 导出 3D 模型文件 导出 3D 模型 选择导出 使用 FreeCAD 打开文件，并删除 PCB 底板 ...","link":"","photos":[],"count_time":{"symbolsCount":201,"symbolsTime":"1 mins."},"categories":[{"name":"Altium Designer","slug":"Altium-Designer","count":2,"path":"api/categories/Altium-Designer.json"}],"tags":[{"name":"Note","slug":"Note","count":2,"path":"api/tags/Note.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Docker实战案例","uid":"7d5686ce3c9c17768b418785872c4c2b","slug":"Linux/Docker实战案例","date":"2022-06-30T07:13:00.000Z","updated":"2022-06-30T07:26:16.697Z","comments":true,"path":"api/articles/Linux/Docker实战案例.json","cover":null,"text":"操作系统 BusyBox BusyBox 是一个集成了一百多个最常用 Linux 命令和工具（如cat、echo、grep、mount、telnet等）的精简工具箱，它只有几MB的大小，很方便进行各种快速验证，被誉为“Linux系统的瑞士军刀”。BusyBox 可运行于多款 PO...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"15 mins."},"categories":[{"name":"《Docker技术入门与实践》","slug":"《Docker技术入门与实践》","count":2,"path":"api/categories/《Docker技术入门与实践》.json"}],"tags":[{"name":"Docker","slug":"Docker","count":2,"path":"api/tags/Docker.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"棋盘格角点检测","uid":"1eaff4e22fb5fa029043d1942e6ee81c","slug":"Digital-Image/X-Corner","date":"2022-06-29T07:11:00.000Z","updated":"2022-06-29T07:41:49.503Z","comments":true,"path":"api/articles/Digital-Image/X-Corner.json","cover":[],"text":"A New Sub-Pixel Detector for X-Corners in Camera Calibration Targets 基于海塞矩阵的方法 一个标准的 X-Corners 如下图所示： 其表达式为： \\[ f(x,y)=\\begin{cases} 0,&amp;...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"图像处理","slug":"图像处理","count":1,"path":"api/categories/图像处理.json"}],"tags":[{"name":"相机标定","slug":"相机标定","count":1,"path":"api/tags/相机标定.json"},{"name":"角点检测","slug":"角点检测","count":1,"path":"api/tags/角点检测.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Docker 基础入门","uid":"e8df40174e1c8fdb0eda4ca741803291","slug":"Linux/Docker基础入门","date":"2022-06-24T06:44:00.000Z","updated":"2022-06-30T07:27:59.663Z","comments":true,"path":"api/articles/Linux/Docker基础入门.json","cover":null,"text":"核心概念与安装配置 Docker 的三大核心概念： 镜像(Image) 容器(Container) 仓库(Repository) 核心概念 Docker 镜像 Docker 镜像可以将其理解为一个只读的模板。它是 docker 容器的基础。用户可以从网络上下载已经配置好的镜像，并...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"14 mins."},"categories":[{"name":"《Docker技术入门与实践》","slug":"《Docker技术入门与实践》","count":2,"path":"api/categories/《Docker技术入门与实践》.json"}],"tags":[{"name":"Docker","slug":"Docker","count":2,"path":"api/tags/Docker.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}