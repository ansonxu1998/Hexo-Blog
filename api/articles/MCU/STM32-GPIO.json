{"title":"STM32 GPIO","uid":"c3a5445bafc67228b7830b43d89f077b","slug":"MCU/STM32-GPIO","date":"2022-10-11T07:47:00.000Z","updated":"2023-05-05T07:58:57.863Z","comments":true,"path":"api/articles/MCU/STM32-GPIO.json","keywords":null,"cover":"/img/STM32-GPIO/STM32-logo.jpg","content":"<h1 id=\"stm32-gpio\">STM32 GPIO</h1>\n<h2 id=\"gpio-功能描述\">GPIO 功能描述</h2>\n<p>GPIO 的寄存器包括：</p>\n<ul>\n<li>2 个 32-bit 配置寄存器 GPIOx_CRL GPIO_CRH</li>\n<li>2 个 32-bit 数据寄存器 GPIOx_IDR GPIOx_ODR</li>\n<li>1 个 32-bit 置位/复位寄存器 GPIOx_BSRR</li>\n<li>1 个 16-bit 复位寄存器 GPIOx_BRR</li>\n<li>1 个 32-bit 锁定寄存器 GPIOx_LCKR</li>\n</ul>\n<p>GPIO 的每个端口可以通过软件配置以下几种模式：</p>\n<ul>\n<li>Input floating</li>\n<li>Input pull-up</li>\n<li>Input-pull-down</li>\n<li>Analog</li>\n<li>Output open-drain</li>\n<li>Output push-pull</li>\n<li>Alternate function push-pull</li>\n<li>Alternate function open-drain</li>\n</ul>\n<p>I/O 端口位的基本结构：</p>\n<p><img src=\"/img/STM32-GPIO/Basic structure.png\" style=\"zoom:60%;\"></p>\n<p>模式配置：</p>\n<p><img src=\"/img/STM32-GPIO/Configuration mode.png\" style=\"zoom:67%;\"></p>\n<table>\n<thead>\n<tr class=\"header\">\n<th style=\"text-align: center;\">MODE[1:0]</th>\n<th style=\"text-align: center;\">Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">00</td>\n<td style=\"text-align: center;\">Reserved</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\">01</td>\n<td style=\"text-align: center;\">Maximum output speed 10 MHz</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">10</td>\n<td style=\"text-align: center;\">Maximum output speed 2 MHz</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\">11</td>\n<td style=\"text-align: center;\">Maximum output speed 50 MHz</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"通用-io\">通用 I/O</h3>\n<p>在复位期间和复位后，复用功能不激活，I/O\n端口配置位浮动输入模式(CNFx[1:0] = 01b，MODEx[1:0] = 00b)。</p>\n<p>当配置为输出时，写入输出数据寄存器(GPIOx_ODR)的值在 I/O\n引脚上输出。可以在推挽模式或开漏模式(N-MOS 被激活)下使用输出驱动器。</p>\n<p>输入数据寄存器(GPIOx_IDR)在每个 APB2 时钟周期时捕获每个 I/O\n引脚上的数据。</p>\n<p>所有的 GPIO\n引脚都有一个内部弱上拉或弱下拉，当配置为输入模式时，可以选择激活或不激活。</p>\n<h3 id=\"原子位置位或重置\">原子位置位或重置</h3>\n<p>在对 GPIOx_ODR 进行按位操作时，软件不需要禁用中断：可以在单原子 APB2\n写访问中只修改一个或几个位。这是通过将置位/复位寄存器(GPIOx_BSRR)的位置\n1，来选择要选择要修改的位来实现。未选择的位不会修改。</p>\n<h3 id=\"复用功能af\">复用功能(AF)</h3>\n<p>在使用默认的复用功能之前，有必要对端口位配置寄存器进行编程。</p>\n<ul>\n<li>对于复用功能输入，端口必须配置为输入模式（浮动、上拉或下拉），输入引脚必须外部驱动。</li>\n<li>对于复用功能输出，端口必须配置为复用功能输出模式（推挽或开漏）。</li>\n<li>对于双向复用功能，端口必须配置为复用功能输出模式（推挽或开漏）。在这种情况下，输入驱动程序配置浮动输入模式。</li>\n</ul>\n<p>如果端口位配置为复用功能输出，则断开输出寄存器并将引脚连接到片上外设的输出信号。</p>\n<p>如果软件将 GPIO\n引脚配置为复用功能输出，但是外设未激活，则不指定其输出。</p>\n<h3 id=\"io-复用功能的软件重映射\">I/O 复用功能的软件重映射</h3>\n<p>为了优化不同设备包的外设 I/O\n功能数量，可以将一些复用功能映射到其它的引脚上。这是通过软件实现的，通过编程相应的寄存器(AFIO)。</p>\n<h3 id=\"gpio-锁定机制\">GPIO 锁定机制</h3>\n<p>锁定机制允许 IO 配置被冻结。当 LOCK\n序列被应用于端口时，在下一次重置前，不可能再修改端口位的值。</p>\n<h3 id=\"输入配置\">输入配置</h3>\n<p>当 I/O 口被配置为输入模式时：</p>\n<ul>\n<li>输出缓存区被禁用</li>\n<li>施密特触发器输入被激活</li>\n<li>弱上拉电阻和弱下拉电阻激活与否取决于输入模式配置（浮动、上拉或下拉）</li>\n<li>每个 ABP2 时钟周期，I/O 引脚上的数据被采样到输入数据寄存器中</li>\n<li>对输入数据寄存器进行访问以获得 I/O 状态。</li>\n</ul>\n<p><img src=\"/img/STM32-GPIO/Input configuration.png\" style=\"zoom:60%;\"></p>\n<h3 id=\"输出配置\">输出配置</h3>\n<p>当 I/O 口被配置为输出模式时：</p>\n<ul>\n<li>输出缓冲区被激活\n<ul>\n<li>开漏模式: 输出寄存器中的 “0” 激活 N-MOS，而输出寄存器中的 “1” 在\nHi-Z 中离开端口(P-MOS从未激活)</li>\n<li>推挽模式: 输出寄存器中的 “0” 激活 N-MOS，而输出寄存器中的 “1”\n激活P-MOS</li>\n</ul></li>\n<li>施密特输入触发器被激活</li>\n<li>弱上拉和下拉电阻被禁用</li>\n<li>每个 APB2 时钟周期，I/O 引脚上的数据被采样到输入数据寄存器中</li>\n<li>通过读<strong>输入寄存器</strong>以获得<strong>开漏模式</strong>下的\nI/O 状态</li>\n<li>通过读<strong>输出寄存器</strong>以获得<strong>推挽模式</strong>下最后写入的值</li>\n</ul>\n<p><img src=\"/img/STM32-GPIO/Output configuration.png\" style=\"zoom:60%;\"></p>\n<h3 id=\"复用功能配置\">复用功能配置</h3>\n<p>当 I/O 配置为复用功能时：</p>\n<ul>\n<li>输出缓存区在开漏或推挽模式下启用</li>\n<li>输出缓存区由来自外设的信号驱动</li>\n<li>施密特触发输入被激活</li>\n<li>弱上拉和下拉电阻被禁用</li>\n<li>每个 APB2 时钟周期，I/O 引脚上的数据被采样到输入数据寄存器中</li>\n<li>通过读<strong>输入寄存器</strong>以获得<strong>开漏模式</strong>下的\nI/O 状态</li>\n<li>通过读<strong>输出寄存器</strong>以获得<strong>推挽模式</strong>下最后写入的值</li>\n</ul>\n<p><img src=\"/img/STM32-GPIO/Alternate function.png\" style=\"zoom:60%;\"></p>\n<h3 id=\"模拟量配置\">模拟量配置</h3>\n<p>当 I/O 配置为模拟量时：</p>\n<ul>\n<li>输出缓冲区被禁用</li>\n<li>施密特触发输入被停用，为 I/O\n引脚的每个模拟值提供零消耗。施密特触发器的输出被强制为恒定值(0)</li>\n<li>弱上拉和下拉电阻被禁用</li>\n<li>对输入数据寄存器的读访问获得值 “0”</li>\n</ul>\n<p><img src=\"/img/STM32-GPIO/Analog configuration.png\" style=\"zoom:60%;\"></p>\n<h2 id=\"gpio-寄存器\">GPIO 寄存器</h2>\n<p>外设寄存器必须通过 words (32位)来访问。</p>\n<h3 id=\"端口配置寄存器-低-gpiox_crl\">端口配置寄存器 低 (GPIOx_CRL)</h3>\n<p>Address offset: 0x00</p>\n<p>Reset value: 0x4444 4444</p>\n<p><img src=\"/img/STM32-GPIO/CRL.png\"></p>\n<h3 id=\"端口配置寄存器-高-gpiox_crh\">端口配置寄存器 高 (GPIOx_CRH)</h3>\n<p>Address offset: 0x04</p>\n<p>Reset value: 0x4444 4444</p>\n<p><img src=\"/img/STM32-GPIO/CRH.png\"></p>\n<p><code>MODEy[1:0]</code>: Port (A..G) 配置位(y=0..15)</p>\n<ul>\n<li><code>00</code> - Input mode (reset state)</li>\n<li><code>01</code> - Output mode，max speed 10 MHz</li>\n<li><code>10</code> - Output mode，max speed 2 MHz</li>\n<li><code>11</code> - Output mode，max speed 50 MHz</li>\n</ul>\n<p><code>CNFy[1:0]</code>: Port (A..G) 配置位(y=0..15)</p>\n<p><strong>In input mode (MODE[1:0]=00):</strong></p>\n<ul>\n<li><code>00</code> - Analog mode</li>\n<li><code>01</code> - Floating inpurt (reset state)</li>\n<li><code>10</code> - Input with pull-up / pull-down</li>\n<li><code>11</code> - Reserved</li>\n</ul>\n<p><strong>In output mode (MODE[1:0]&gt;00):</strong></p>\n<ul>\n<li><code>00</code> - General purpose output push-pull</li>\n<li><code>01</code> - General purpose output Open-drain</li>\n<li><code>10</code> - Alternate function output Push-pull</li>\n<li><code>11</code> - Alternate function output Open-drain</li>\n</ul>\n<h3 id=\"端口输入寄存器-gpiox_idr\">端口输入寄存器 (GPIOx_IDR)</h3>\n<p>Address offset: 0x08h</p>\n<p>Reset value: 0x0000 XXXX</p>\n<p><img src=\"/img/STM32-GPIO/IDR.png\"></p>\n<p><code>IDRy</code>: Port (A..G) 输入数据(y=0..15)</p>\n<p>这些位是只读的，只能在 Word 模式下访问。它们包含相应 I/O\n端口的输入值。</p>\n<h3 id=\"端口输出寄存器-gpiox_odr\">端口输出寄存器 (GPIOx_ODR)</h3>\n<p>Address offset: 0x0C</p>\n<p>Reset value: 0x0000 0000</p>\n<p><img src=\"/img/STM32-GPIO/ODR.png\"></p>\n<p><code>ODRy</code>: Port (A..G) 输出数据(y=0..15)</p>\n<p>这些位可以通过软件读写，并且只能在 Word 模式下访问。</p>\n<h3 id=\"端口位置位复位寄存器-gpiox_bsrr\">端口位置位/复位寄存器\n(GPIOx_BSRR)</h3>\n<p>Address offset: 0x10</p>\n<p>Reset value: 0x0000 0000</p>\n<p><img src=\"/img/STM32-GPIO/BSRR.png\"></p>\n<p><code>BRy</code>: Port (A..G) Reset bit y (y= 0 .. 15)</p>\n<p>这些位是只写的，只能在 Word 模式下访问</p>\n<ul>\n<li><code>0</code> - 对相应的 ODRx 位没有任何操作</li>\n<li><code>1</code> - 重置相应的 ODRx 位</li>\n</ul>\n<p><code>BSy</code>: Port (A..G) Set bit y (y= 0 .. 15)</p>\n<p>这些位是只写的，只能在 Word 模式下访问</p>\n<ul>\n<li><code>0</code> - 对相应的 ODRx 位没有任何操作</li>\n<li><code>1</code> - 设置相应的 ODRx 位</li>\n</ul>\n<h3 id=\"端口位复位寄存器-gpiox_brr\">端口位复位寄存器 (GPIOx_BRR)</h3>\n<p>Address offset: 0x14</p>\n<p>Reset value: 0x0000 0000</p>\n<p><img src=\"/img/STM32-GPIO/BRR.png\"></p>\n<p><code>BRy</code>: Port (A..G) Reset bit y (y= 0 .. 15)</p>\n<p>这些位是只写的，只能在Word模式下访问。</p>\n<ul>\n<li><code>0</code> - 对相应的 ODRx 位没有任何操作</li>\n<li><code>1</code> - 重置相应的 ODRx 位</li>\n</ul>\n<h3 id=\"端口配置锁寄存器-gpiox_lckr\">端口配置锁寄存器 (GPIOx_LCKR)</h3>\n<p>当一个正确的写序列被应用到第 16\n位(LCKK)时，该寄存器用于锁定端口的配置。Bits[15:0] 用于锁定 GPIO\n的配置。在写序列期间，LCKR[15:0] 的值不能改变。如果 LOCK\n序列已经应用于端口位，则在下一次复位之前，不能再修改端口位的值。</p>\n<p>每个锁位冻结相应的 4 位控制寄存器 (CRL, CRH)。</p>\n<p>Address offset: 0x18</p>\n<p>Reset value: 0x0000 0000</p>\n<p><img src=\"/img/STM32-GPIO/LCKR.png\"></p>\n<p><code>LCKK[16]</code>: Lock key</p>\n<p>这个位可以随时读取。它只能使用 Lock Key Writing Sequence\n进行修改。</p>\n<ul>\n<li><p><code>0</code> - 端口配置锁密钥未激活</p></li>\n<li><p><code>1</code> - 端口配置锁键激活。GPIOx_LCKR\n寄存器被锁定，直到下一次复位。</p></li>\n</ul>\n<p><code>LCKy</code>: Port (A..G) Lock bit y (y= 0..15)</p>\n<p>这些位是可读写的，但只有当 LCKK 位为 0 时才能写入</p>\n<ul>\n<li><code>0</code> - 端口配置未锁定</li>\n<li><code>1</code> - 端口配置已锁定</li>\n</ul>\n<h2 id=\"afio-寄存器\">AFIO 寄存器</h2>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>要读/写 AFIO_EVCR、AFIO_MAPR 和 AFIO_EXTICRX 寄存器，必须首先使能\nAFIO 时钟。</p></blockquote>\n<h3 id=\"事件控制寄存器-afio_evcr\">事件控制寄存器 (AFIO_EVCR)</h3>\n<p>Address offset: 0x00</p>\n<p>Reset value: 0x0000 0000</p>\n<p><img src=\"/img/STM32-GPIO/EVCR.png\"></p>\n<p><code>EVOE</code>: 事件输出使能</p>\n<p>由软件设置或清除。置位时，EVENTOUT Cortex® 输出连接到由\n<code>PORT[2:0]</code> 和 <code>PIN[3:0]</code> 位选择的 I/O。</p>\n<p><code>PORT[2:0]</code>: 端口选择</p>\n<p>通过软件设置和清除。选择用于输出 Cortex® EVENTOUT 信号的端口。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>EVENTOUT信号输出能力不扩展到 PF 和 PG 端口</p></blockquote>\n<ul>\n<li><code>000</code> - PA</li>\n<li><code>001</code> - PB</li>\n<li><code>010</code> - PC</li>\n<li><code>011</code> - PD</li>\n<li><code>100</code> - PE</li>\n</ul>\n<p><code>PIN[3:0]</code>: 引脚选择 (A..E)</p>\n<p>通过软件设置和清除。选择用于输出 Cortex® EVENTOUT 信号的引脚。</p>\n<ul>\n<li><code>0000</code> - Px0</li>\n<li><code>0001</code> - Px1</li>\n<li>...</li>\n<li><code>1111</code> - Px15</li>\n</ul>\n<h3 id=\"复用功能重映射和调试-io-配置寄存器-afio_mapr\">复用功能重映射和调试\nI/O 配置寄存器 (AFIO_MAPR)</h3>\n<p>Address offset: 0x04</p>\n<p>Reset value: 0x0000 0000</p>\n<p><img src=\"/img/STM32-GPIO/MAPR.png\"></p>\n<h3 id=\"外部中断配置寄存器-1-afio_exticr1\">外部中断配置寄存器 1\n(AFIO_EXTICR1)</h3>\n<p>Address offset: 0x08</p>\n<p>Reset value: 0x0000</p>\n<p><img src=\"/img/STM32-GPIO/EXTICR1.png\"></p>\n<p><code>EXTIx[3:0]</code>: EXIT (0..3) 配置</p>\n<p>这些位由软件写入以选择 EXTIx 外部中断的输入引脚。</p>\n<ul>\n<li><code>0000</code> - PA[x] pin</li>\n<li><code>0001</code> - PB[x] pin</li>\n<li><code>0010</code> - PC[x] pin</li>\n<li><code>0011</code> - PD[x] pin</li>\n<li><code>0100</code> - PE[x] pin</li>\n<li><code>0101</code> - PF[x] pin</li>\n<li><code>0110</code> - PG[x] pin</li>\n</ul>\n<h3 id=\"外部中断配置寄存器-2-afio_exticr2\">外部中断配置寄存器 2\n(AFIO_EXTICR2)</h3>\n<p>Address offset: 0x0C</p>\n<p>Reset value: 0x0000</p>\n<p><img src=\"/img/STM32-GPIO/EXTICR2.png\"></p>\n<p><code>EXTIx[3:0]</code>: EXIT (4..7) 配置</p>\n<p>这些位由软件写入以选择 EXTIx 外部中断的输入引脚。</p>\n<ul>\n<li><code>0000</code> - PA[x] pin</li>\n<li><code>0001</code> - PB[x] pin</li>\n<li><code>0010</code> - PC[x] pin</li>\n<li><code>0011</code> - PD[x] pin</li>\n<li><code>0100</code> - PE[x] pin</li>\n<li><code>0101</code> - PF[x] pin</li>\n<li><code>0110</code> - PG[x] pin</li>\n</ul>\n<h3 id=\"外部中断配置寄存器-3-afio_exticr3\">外部中断配置寄存器 3\n(AFIO_EXTICR3)</h3>\n<p>Address offset: 0x10</p>\n<p>Reset value: 0x0000</p>\n<p><img src=\"/img/STM32-GPIO/EXTICR3.png\"></p>\n<p><code>EXTIx[3:0]</code>: EXIT (8..11) 配置</p>\n<p>这些位由软件写入以选择 EXTIx 外部中断的输入引脚。</p>\n<ul>\n<li><code>0000</code> - PA[x] pin</li>\n<li><code>0001</code> - PB[x] pin</li>\n<li><code>0010</code> - PC[x] pin</li>\n<li><code>0011</code> - PD[x] pin</li>\n<li><code>0100</code> - PE[x] pin</li>\n<li><code>0101</code> - PF[x] pin</li>\n<li><code>0110</code> - PG[x] pin</li>\n</ul>\n<h3 id=\"外部中断配置寄存器-4-afio_exticr4\">外部中断配置寄存器 4\n(AFIO_EXTICR4)</h3>\n<p>Address offset: 0x14</p>\n<p>Reset value: 0x0000</p>\n<p><img src=\"/img/STM32-GPIO/EXTICR4.png\"></p>\n<p><code>EXTIx[3:0]</code>: EXIT (12..15) 配置</p>\n<p>这些位由软件写入以选择 EXTIx 外部中断的输入引脚。</p>\n<ul>\n<li><code>0000</code> - PA[x] pin</li>\n<li><code>0001</code> - PB[x] pin</li>\n<li><code>0010</code> - PC[x] pin</li>\n<li><code>0011</code> - PD[x] pin</li>\n<li><code>0100</code> - PE[x] pin</li>\n<li><code>0101</code> - PF[x] pin</li>\n<li><code>0110</code> - PG[x] pin</li>\n</ul>\n<h3 id=\"复用功能重映射和调试-io-配置寄存器-2-afio_mapr2\">复用功能重映射和调试\nI/O 配置寄存器 2 (AFIO_MAPR2)</h3>\n<p>Address offset: 0x1C</p>\n<p>Reset value: 0x0000 0000</p>\n<p><img src=\"/img/STM32-GPIO/MAPR2.png\"></p>\n","text":"STM32 GPIO GPIO 功能描述 GPIO 的寄存器包括： 2 个 32-bit 配置寄存器 GPIOx_CRL GPIO_CRH 2 个 32-bit 数据寄存器 GPIOx_IDR GPIOx_ODR 1 个 32-bit 置位/复位寄存器 GPIOx_BSRR 1 ...","link":"","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[{"name":"单片机","slug":"单片机","count":2,"path":"api/categories/单片机.json"}],"tags":[{"name":"STM32","slug":"STM32","count":2,"path":"api/tags/STM32.json"},{"name":"GPIO","slug":"GPIO","count":1,"path":"api/tags/GPIO.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#stm32-gpio\"><span class=\"toc-text\">STM32 GPIO</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#gpio-%E5%8A%9F%E8%83%BD%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">GPIO 功能描述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%9A%E7%94%A8-io\"><span class=\"toc-text\">通用 I&#x2F;O</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E5%AD%90%E4%BD%8D%E7%BD%AE%E4%BD%8D%E6%88%96%E9%87%8D%E7%BD%AE\"><span class=\"toc-text\">原子位置位或重置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%8D%E7%94%A8%E5%8A%9F%E8%83%BDaf\"><span class=\"toc-text\">复用功能(AF)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#io-%E5%A4%8D%E7%94%A8%E5%8A%9F%E8%83%BD%E7%9A%84%E8%BD%AF%E4%BB%B6%E9%87%8D%E6%98%A0%E5%B0%84\"><span class=\"toc-text\">I&#x2F;O 复用功能的软件重映射</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#gpio-%E9%94%81%E5%AE%9A%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">GPIO 锁定机制</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">输入配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">输出配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%8D%E7%94%A8%E5%8A%9F%E8%83%BD%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">复用功能配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E6%8B%9F%E9%87%8F%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">模拟量配置</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#gpio-%E5%AF%84%E5%AD%98%E5%99%A8\"><span class=\"toc-text\">GPIO 寄存器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AB%AF%E5%8F%A3%E9%85%8D%E7%BD%AE%E5%AF%84%E5%AD%98%E5%99%A8-%E4%BD%8E-gpiox_crl\"><span class=\"toc-text\">端口配置寄存器 低 (GPIOx_CRL)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AB%AF%E5%8F%A3%E9%85%8D%E7%BD%AE%E5%AF%84%E5%AD%98%E5%99%A8-%E9%AB%98-gpiox_crh\"><span class=\"toc-text\">端口配置寄存器 高 (GPIOx_CRH)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AB%AF%E5%8F%A3%E8%BE%93%E5%85%A5%E5%AF%84%E5%AD%98%E5%99%A8-gpiox_idr\"><span class=\"toc-text\">端口输入寄存器 (GPIOx_IDR)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AB%AF%E5%8F%A3%E8%BE%93%E5%87%BA%E5%AF%84%E5%AD%98%E5%99%A8-gpiox_odr\"><span class=\"toc-text\">端口输出寄存器 (GPIOx_ODR)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AB%AF%E5%8F%A3%E4%BD%8D%E7%BD%AE%E4%BD%8D%E5%A4%8D%E4%BD%8D%E5%AF%84%E5%AD%98%E5%99%A8-gpiox_bsrr\"><span class=\"toc-text\">端口位置位&#x2F;复位寄存器\n(GPIOx_BSRR)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AB%AF%E5%8F%A3%E4%BD%8D%E5%A4%8D%E4%BD%8D%E5%AF%84%E5%AD%98%E5%99%A8-gpiox_brr\"><span class=\"toc-text\">端口位复位寄存器 (GPIOx_BRR)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AB%AF%E5%8F%A3%E9%85%8D%E7%BD%AE%E9%94%81%E5%AF%84%E5%AD%98%E5%99%A8-gpiox_lckr\"><span class=\"toc-text\">端口配置锁寄存器 (GPIOx_LCKR)</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#afio-%E5%AF%84%E5%AD%98%E5%99%A8\"><span class=\"toc-text\">AFIO 寄存器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8B%E4%BB%B6%E6%8E%A7%E5%88%B6%E5%AF%84%E5%AD%98%E5%99%A8-afio_evcr\"><span class=\"toc-text\">事件控制寄存器 (AFIO_EVCR)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%8D%E7%94%A8%E5%8A%9F%E8%83%BD%E9%87%8D%E6%98%A0%E5%B0%84%E5%92%8C%E8%B0%83%E8%AF%95-io-%E9%85%8D%E7%BD%AE%E5%AF%84%E5%AD%98%E5%99%A8-afio_mapr\"><span class=\"toc-text\">复用功能重映射和调试\nI&#x2F;O 配置寄存器 (AFIO_MAPR)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD%E9%85%8D%E7%BD%AE%E5%AF%84%E5%AD%98%E5%99%A8-1-afio_exticr1\"><span class=\"toc-text\">外部中断配置寄存器 1\n(AFIO_EXTICR1)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD%E9%85%8D%E7%BD%AE%E5%AF%84%E5%AD%98%E5%99%A8-2-afio_exticr2\"><span class=\"toc-text\">外部中断配置寄存器 2\n(AFIO_EXTICR2)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD%E9%85%8D%E7%BD%AE%E5%AF%84%E5%AD%98%E5%99%A8-3-afio_exticr3\"><span class=\"toc-text\">外部中断配置寄存器 3\n(AFIO_EXTICR3)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD%E9%85%8D%E7%BD%AE%E5%AF%84%E5%AD%98%E5%99%A8-4-afio_exticr4\"><span class=\"toc-text\">外部中断配置寄存器 4\n(AFIO_EXTICR4)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%8D%E7%94%A8%E5%8A%9F%E8%83%BD%E9%87%8D%E6%98%A0%E5%B0%84%E5%92%8C%E8%B0%83%E8%AF%95-io-%E9%85%8D%E7%BD%AE%E5%AF%84%E5%AD%98%E5%99%A8-2-afio_mapr2\"><span class=\"toc-text\">复用功能重映射和调试\nI&#x2F;O 配置寄存器 2 (AFIO_MAPR2)</span></a></li></ol></li></ol></li></ol>","author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"矩阵的导数运算(1)","uid":"d97c1a68285e6aac869410b1223c6673","slug":"Math/矩阵的导数运算1","date":"2023-02-10T08:37:00.000Z","updated":"2023-04-17T07:50:26.463Z","comments":true,"path":"api/articles/Math/矩阵的导数运算1.json","keywords":null,"cover":"/img/bg/math.jpg","text":"矩阵的导数运算 (1) 标量方程对向量的导数： 定义： - 标量 [] - 向量 [] 求导结果的行数与分母相同，称为分母布局(Denominator Layout) 行数和分子相同，称为分子布局(Numerator Layout) 例 ， 分母布局 分子布局 向量方程对向量的导...","link":"","photos":[],"count_time":{"symbolsCount":241,"symbolsTime":"1 mins."},"categories":[{"name":"数学","slug":"数学","count":3,"path":"api/categories/数学.json"}],"tags":[{"name":"矩阵求导","slug":"矩阵求导","count":1,"path":"api/tags/矩阵求导.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Amesim 与 Simulink 的联合仿真","uid":"51d61b1e82665e319117cf3815ca2bc7","slug":"Amesim/Amesim与Simulink联合仿真","date":"2022-09-28T07:12:00.000Z","updated":"2023-04-15T03:27:40.237Z","comments":true,"path":"api/articles/Amesim/Amesim与Simulink联合仿真.json","keywords":null,"cover":"/img/Amesim/AMESim.png","text":"Amesim 与 Simulink 的联合仿真 环境配置 软件版本为：Matlab 2020b 和 Amesim 2021.1，编译器使用 MinGW-w64 附件安装： 首先需要在 Matlab 中安装附件 MATLAB Support for MinGW-w64 C/C++ ...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"Amesim","slug":"Amesim","count":1,"path":"api/categories/Amesim.json"}],"tags":[{"name":"Amesim","slug":"Amesim","count":1,"path":"api/tags/Amesim.json"},{"name":"Simulink","slug":"Simulink","count":1,"path":"api/tags/Simulink.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}