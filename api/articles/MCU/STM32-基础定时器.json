{"title":"STM32-基础定时器","uid":"2ae7b4c0b172c3bdb43c36df10c5338e","slug":"MCU/STM32-基础定时器","date":"2022-10-15T02:12:00.000Z","updated":"2023-09-01T02:28:30.136Z","comments":true,"path":"api/articles/MCU/STM32-基础定时器.json","keywords":null,"cover":"/img/STM32-GPIO/STM32-logo.jpg","content":"<h2 id=\"定时器概述\">定时器概述</h2>\n<p>STM32F103ZET6 有 2 个高级定时器(Advanced-control timer)、4 个通用定时器(General-purpose timer)和 2 个基本定时器(Basic timer):</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th style=\"text-align: center;\">类型</th>\n<th style=\"text-align: center;\">定时器</th>\n<th style=\"text-align: center;\">计数器分辨率</th>\n<th style=\"text-align: center;\">计数类型</th>\n<th style=\"text-align: center;\">产生 DMA 请求</th>\n<th style=\"text-align: center;\">捕获/比较通道</th>\n<th style=\"text-align: center;\">互补输出</th>\n<th style=\"text-align: center;\">挂载总线</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">基础</td>\n<td style=\"text-align: center;\">TIM6，TIM7</td>\n<td style=\"text-align: center;\">16位</td>\n<td style=\"text-align: center;\">向上</td>\n<td style=\"text-align: center;\">有</td>\n<td style=\"text-align: center;\">0</td>\n<td style=\"text-align: center;\">无</td>\n<td style=\"text-align: center;\">APB 1</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\">通用</td>\n<td style=\"text-align: center;\">TIM2，TIM3，TIM4，TIM5</td>\n<td style=\"text-align: center;\">16位</td>\n<td style=\"text-align: center;\">向上、向下、向上/向下</td>\n<td style=\"text-align: center;\">有</td>\n<td style=\"text-align: center;\">4</td>\n<td style=\"text-align: center;\">无</td>\n<td style=\"text-align: center;\">APB 1</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">高级</td>\n<td style=\"text-align: center;\">TIM1，TIM8</td>\n<td style=\"text-align: center;\">16位</td>\n<td style=\"text-align: center;\">向上、向下、向上/向下</td>\n<td style=\"text-align: center;\">有</td>\n<td style=\"text-align: center;\">4</td>\n<td style=\"text-align: center;\">有</td>\n<td style=\"text-align: center;\">APB 2</td>\n</tr>\n</tbody>\n</table>\n<p>定时器的时钟信号来源：</p>\n<p><img src=\"/img/2023-8-30/clock.png\"></p>\n<h2 id=\"基础定时器的结构和功能\">基础定时器的结构和功能</h2>\n<p>TIM 6 和 TIM 7 是基础定时器，它们的功能相同</p>\n<ul>\n<li>只能使用内部时钟信号 <code>CK_INT</code></li>\n<li>16 位自动重装载寄存器(auto-reload register)</li>\n<li>16 位可编程预分频器，分频范围 1-65536</li>\n<li>可以用于出发 DAC 的同步电路</li>\n<li>只有一种事件引起中断——计数器上溢时产生更新事件</li>\n</ul>\n<p><img src=\"/img/2023-8-30/basic-timer-block-diagram.png\"></p>\n<p>它有 3 个 16 位的寄存器，这三个寄存器值都可以读写。其中，预分频寄存器和自动重装载寄存器有影子寄存器用于底层工作。</p>\n<ul>\n<li><strong>预分频寄存器</strong>(TIMx_PSC)</li>\n<li><strong>计数寄存器</strong>(TIMx_CNT) - 计数溢出时产生更新事件(Update Event, UEV) 中断</li>\n<li><strong>自动重装载寄存器</strong>(TIMx_ARR) - 存储的值用于与计数器的值比较，当计数器的值等于 ARR 的值时产生 UEV 事件，计数的周期个数等于 (1 + ARR)</li>\n</ul>\n<p>假设 <code>CK_INT</code> 的频率位 50 MHZ，预分频系数设置位 50000，则计数器时钟频率为 <span class=\"math display\"><mjx-container class=\"MathJax\" jax=\"SVG\" display=\"true\"><svg style=\"vertical-align: -1.602ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"31.296ex\" height=\"4.726ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1381 13832.9 2089\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(760,0)\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1649,0)\"><path data-c=\"5F\" d=\"M0 -62V-25H499V-62H0Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2149,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2909,0)\"><path data-c=\"1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3797,0)\"><path data-c=\"1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></g></g></g><g data-mml-node=\"mo\" transform=\"translate(4033.5,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mfrac\" transform=\"translate(5089.2,0)\"><g data-mml-node=\"msub\" transform=\"translate(220,676)\"><g data-mml-node=\"mi\"><path data-c=\"1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(760,0)\"><path data-c=\"1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(1649,0)\"><path data-c=\"5F\" d=\"M0 -62V-25H499V-62H0Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2149,0)\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(2900,0)\"><path data-c=\"1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(3545,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g></g></g><g data-mml-node=\"mn\" transform=\"translate(778.5,-686)\"><path data-c=\"35\" d=\"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1000,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1500,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(2000,0)\"></path></g><rect width=\"3817.1\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(9424.1,0)\"><path data-c=\"3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></g><g data-mml-node=\"mn\" transform=\"translate(10479.9,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1000,0)\"></path><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1500,0)\"></path></g><g data-mml-node=\"mi\" transform=\"translate(12479.9,0)\"><path data-c=\"1D43B\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></g><g data-mml-node=\"mi\" transform=\"translate(13367.9,0)\"><path data-c=\"1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></g></g></g></svg></mjx-container></span> <img src=\"/img/2023-8-30/counter-timing-diagram.png\"></p>\n<p>若自动重装载寄存器的值为 999，则定时器周期为 1000 ms，计数溢出时产生 UEV 事件。</p>\n<h2 id=\"基础定时器-hal-驱动程序\">基础定时器 HAL 驱动程序</h2>\n<p>基础定时器相关函数：</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th>函数名</th>\n<th>功能描述</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td><code>HAL_TIM_Base_Init()</code></td>\n<td>定时器初始化，设置各种参数和连续定时模式</td>\n</tr>\n<tr class=\"even\">\n<td><code>HAL_TIM_Base_MspInit()</code></td>\n<td>弱函数，在 HAL_TIM_Base_Init() 中被调用，需要重新实现</td>\n</tr>\n<tr class=\"odd\">\n<td><code>HAL_TIM_OnePulse_Init()</code></td>\n<td>将定时器配置为单次定时模式，需要先执行 HAL_TIM_Base_Init()</td>\n</tr>\n<tr class=\"even\">\n<td><code>HAL_TIM_Base_Start()</code></td>\n<td>以轮询方式启动定时器，不会产生中断</td>\n</tr>\n<tr class=\"odd\">\n<td><code>HAL_TIM_Base_Stop()</code></td>\n<td>停止轮询方式的定时器</td>\n</tr>\n<tr class=\"even\">\n<td><code>HAL_TIM_Base_Start_IT()</code></td>\n<td>以中断方式启动定时器，发生 UEV 事件时产生中断</td>\n</tr>\n<tr class=\"odd\">\n<td><code>HAL_TIM_Base_Stop_IT()</code></td>\n<td>停止中断方式工作的定时器</td>\n</tr>\n<tr class=\"even\">\n<td><code>HAL_TIM_Base_Start_DMA()</code></td>\n<td>以 DMA 方式启动定时器</td>\n</tr>\n<tr class=\"odd\">\n<td><code>HAL_TIM_Base_Stop_DMA()</code></td>\n<td>停止以 DMA 方式工作的定时器</td>\n</tr>\n<tr class=\"even\">\n<td><code>HAL_TIM_Base_GetState()</code></td>\n<td>获取基础定时器的当前状态</td>\n</tr>\n</tbody>\n</table>\n<p>中断处理：</p>\n<p>每个定时器有一个中断，基础定时器只有一个 UEV 中断源，但是通用定时器和高级定时器有多个中断事件源。</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th>函数名</th>\n<th>功能描述</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td><code>__HAL_TIM_GET_FLAG()</code></td>\n<td>获取某个事件是否触发的标志，就是读取状态寄存器 TIMx_SR 中相应的中断事件位是否置 1</td>\n</tr>\n<tr class=\"even\">\n<td><code>__HAL_TIM_GET_IT_SOURCE()</code></td>\n<td>判断是否是某个事件产生的中断，返回值为 SET 或 RESET</td>\n</tr>\n<tr class=\"odd\">\n<td><code>__HAL_TIM_CLEAR_IT()</code></td>\n<td>清除某个事件的中断标志，就是将状态寄存器 TIMx_SR 中相应的中断事件位清 0</td>\n</tr>\n<tr class=\"even\">\n<td><code>__HAL_TIM_ENABLE_IT()</code></td>\n<td>启用某个事件的中断，就是将中断使能寄存器 TIMx_DIER 中相应事件位置 1</td>\n</tr>\n<tr class=\"odd\">\n<td><code>__HAL_TIM_DISABLE_IT()</code></td>\n<td>禁用某个事件的中断，就是将中断使能寄存器 TIMx_DIER 中相应事件位清 0</td>\n</tr>\n<tr class=\"even\">\n<td><code>__HAL_TIM_IRQHandler()</code></td>\n<td>定时器 ISR 函数里的通用处理函数</td>\n</tr>\n<tr class=\"odd\">\n<td><code>__HAL_TIM_PeriodElapsedCallback()</code></td>\n<td>弱函数，UEV 事件中断的回调函数</td>\n</tr>\n</tbody>\n</table>\n","text":"定时器概述 STM32F103ZET6 有 2 个高级定时器(Advanced-control timer)、4 个通用定时器(General-purpose timer)和 2 个基本定时器(Basic timer): 类型 定时器 计数器分辨率 计数类型 产生 DMA 请求 ...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"单片机","slug":"单片机","count":8,"path":"api/categories/单片机.json"}],"tags":[{"name":"STM32","slug":"STM32","count":8,"path":"api/tags/STM32.json"},{"name":"基础定时器","slug":"基础定时器","count":1,"path":"api/tags/基础定时器.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E6%97%B6%E5%99%A8%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">定时器概述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E5%AE%9A%E6%97%B6%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84%E5%92%8C%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">基础定时器的结构和功能</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E5%AE%9A%E6%97%B6%E5%99%A8-hal-%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">基础定时器 HAL 驱动程序</span></a></li></ol>","author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"STM32-通用定时器","uid":"3d33cea6f7241857ab27348fe640e83f","slug":"MCU/STM32-通用定时器","date":"2022-10-15T02:18:00.000Z","updated":"2023-09-01T02:28:30.404Z","comments":true,"path":"api/articles/MCU/STM32-通用定时器.json","keywords":null,"cover":"/img/STM32-GPIO/STM32-logo.jpg","text":"通用定时器功能概述 通用定时器功能 输入捕获(Input Capture) 输出比较(Output Compare) 生成 PWM 波 测量 PWM 周期和占空比 定时器同步 定时器串联 结构框图 时序： 预分频系数由 1 修改到 2 时，并不会立即生效，而是要等到下一个 UEV...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"单片机","slug":"单片机","count":8,"path":"api/categories/单片机.json"}],"tags":[{"name":"STM32","slug":"STM32","count":8,"path":"api/tags/STM32.json"},{"name":"通用定时器","slug":"通用定时器","count":1,"path":"api/tags/通用定时器.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"STM32 DMA","uid":"da1a2b22445c6e9d06b74da423642c5e","slug":"MCU/STM32-DMA","date":"2022-10-14T16:00:00.000Z","updated":"2023-05-11T12:11:10.447Z","comments":true,"path":"api/articles/MCU/STM32-DMA.json","keywords":null,"cover":"/img/STM32-GPIO/STM32-logo.jpg","text":"DMA 的介绍 直接内存访问(Direct memory accesss，DMA) 用于在外设和内存之间以及内存到内存之间提供高速的数据传输。数据可以通过 DMA 快速传输，不需要任何 CPU 操作。这样可以节约 CPU 资源。 两个 DMA 控制器总共有 12 个通道（7 个用...","link":"","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[{"name":"单片机","slug":"单片机","count":8,"path":"api/categories/单片机.json"}],"tags":[{"name":"STM32","slug":"STM32","count":8,"path":"api/tags/STM32.json"},{"name":"DMA","slug":"DMA","count":1,"path":"api/tags/DMA.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}