{"title":"STM32 I2C 通信","uid":"736e2225b7c206e1f84f77a4e032b64a","slug":"MCU/STM32-I2C","date":"2022-10-18T02:21:00.000Z","updated":"2023-09-01T02:40:45.548Z","comments":true,"path":"api/articles/MCU/STM32-I2C.json","keywords":null,"cover":"/img/STM32-GPIO/STM32-logo.jpg","content":"<h2 id=\"i2c-总线介绍\">I2C 总线介绍</h2>\n<h3 id=\"i2c-的定义\">I2C 的定义</h3>\n<p>Inter-intergrated Circuit 的缩写，最初由 PHILIPS 公司推出。用于短距离设备之间的低速串行通信，如处理器和外围器件的通线。只需要 2 根信号线，具有总线时钟同步和仲裁机制，允许多主机通信。传输速率在标准模式下可达 100 kbit/s，快速模式下 400 kbit/s，高速模式下可达 3.4 Mbit/s。设备通过协议层中的地址区分，可选择 7 位或 10 位地址，连接到总线的 IC 数量仅受到最大负载电容 400 pF 的限制。</p>\n<p><img src=\"/img/2023-8-31/I2C-1.png\" /></p>\n<h2 id=\"i2c-总线规约\">I2C 总线规约</h2>\n<h3 id=\"起始和停止条件\">起始和停止条件</h3>\n<p><img src=\"/img/2023-8-31/I2C-2.png\" /></p>\n<p>总线空闲时，总线上的电平都是<strong>高电平</strong>。</p>\n<ul>\n<li>起始信号：SCL 总线为<strong>高电平</strong>，SDA 总线由<strong>高电平</strong>变为<strong>低电平</strong></li>\n<li>停止信号：SCL 总线为<strong>高电平</strong>，SDA 总线由<strong>低电平</strong>变为<strong>高电平</strong></li>\n</ul>\n<h3 id=\"数据传输\">数据传输</h3>\n<p><img src=\"/img/2023-8-31/I2C-3.png\" /></p>\n<p>SCL 为高电平时为数据的有效窗口期，这段时间需要 SDA 线保持其电平状态，达到数据传输的效果。SCL为低电平的时期为数据准备期，这段时间需要 SDA 尽快调整电平至下一位待传数据位。</p>\n<p>所有的串行总线都以 bit为 单位传输数据，I2C 总线按照<strong>高位（MSB）在前</strong>的方式，每次传输 1 个字节（1Byte = 8bit），然后必须跟一个响应位，当这一位是低电平时，才算有效响应（ACK）。完成这一轮完整的传输后，才能继续传输后续字节数据。</p>\n<h3 id=\"总线时钟同步\">总线时钟同步</h3>\n<p><img src=\"/img/2023-8-31/I2C-4.png\" /></p>\n<p>I2C 硬件使用<strong>开漏模式</strong>，所以总线上的电平以低电平优先。2 个 Master 设备发起通讯，2 号 Master 的时钟 CLK2 比 CLK1 要晚一点。当 2号 Master 发现自己的 CLK 为 “1” 时，总线SCL上已经是“0”了，它就会<strong>提前调整自己的时序</strong>，马上拉低 CLK，<strong>赶上大部队的节奏</strong>。当 1 号 Master 发现自己的 CLK 已经为 “1” 时，总线SCL上还是 “0”，它就会<strong>放慢自己的脚步</strong>，一直等待总线变为 “1”，<strong>接着跟大家一起走</strong>。</p>\n<h3 id=\"总线仲裁\">总线仲裁</h3>\n<p><img src=\"/img/2023-8-31/I2C-5.png\" /></p>\n<p>2 个 Master 的 CLK 已经完成了时钟同步后，如果在某一时刻同时发出起始信号，准备通信，I2C 总线是通过 SDA 的仲裁机制来实现调解的。1 号和 2 号 Master 都发送了数据 “0”，接着1号 Master 发送了数据 “1”。而此时 2 号 Master 仍然保持数据 “0”。这种情况下，SDA 总线上的数据与发送 “0” 的 2 号 Master 保持一致。1 号 Master 监测到了总线数据与自己的数据冲突，它便自动退出通信过程，将使用权让出。</p>\n<h2 id=\"stm32-i2c-总线功能\">STM32 I2C 总线功能</h2>\n<ul>\n<li>速率\n<ul>\n<li>标准模式：100 kbit/s</li>\n<li>快速模式：400 kbit/s</li>\n</ul></li>\n<li>模式\n<ul>\n<li>主机模式</li>\n<li>从机模式：支持 2 个从机地址</li>\n</ul></li>\n<li>中断\n<ul>\n<li>通讯过程的各阶段中断</li>\n<li>错误标志</li>\n</ul></li>\n<li>滤波\n<ul>\n<li>模拟噪声滤波器</li>\n<li>可编程数字滤波器</li>\n</ul></li>\n</ul>\n<p><img src=\"/img/2023-8-31/I2C-6.png\" /></p>\n<ul>\n<li>数据寄存器 - DR</li>\n<li>地址寄存器 - OAR1</li>\n<li>第二地址寄存器 - OAR2</li>\n<li>校验寄存器 - PEC</li>\n<li>控制寄存器 - CR1/2</li>\n<li>状态寄存器 - SR1/2</li>\n<li>时钟控制寄存器 - CCR</li>\n</ul>\n<h3 id=\"cubemx-配置\">CubeMx 配置</h3>\n<ul>\n<li>RCC - 选择外部晶振、PLL、主频</li>\n<li>调试口 - 选择调试模式，占用调试 IO 口</li>\n<li>IO 分配 - 打开相应外设开关，默认 IO 或手动选择</li>\n<li>速率、地址、主从、时序</li>\n</ul>\n<p><img src=\"/img/2023-8-31/I2C-7.png\" /></p>\n<p><img src=\"/img/2023-8-31/I2C-8.png\" /></p>\n","text":"I2C 总线介绍 I2C 的定义 Inter-intergrated Circuit 的缩写，最初由 PHILIPS 公司推出。用于短距离设备之间的低速串行通信，如处理器和外围器件的通线。只需要 2 根信号线，具有总线时钟同步和仲裁机制，允许多主机通信。传输速率在标准模式下可达 ...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"单片机","slug":"单片机","count":8,"path":"api/categories/单片机.json"}],"tags":[{"name":"STM32","slug":"STM32","count":8,"path":"api/tags/STM32.json"},{"name":"I2C","slug":"I2C","count":1,"path":"api/tags/I2C.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#i2c-%E6%80%BB%E7%BA%BF%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">I2C 总线介绍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#i2c-%E7%9A%84%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">I2C 的定义</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#i2c-%E6%80%BB%E7%BA%BF%E8%A7%84%E7%BA%A6\"><span class=\"toc-text\">I2C 总线规约</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B5%B7%E5%A7%8B%E5%92%8C%E5%81%9C%E6%AD%A2%E6%9D%A1%E4%BB%B6\"><span class=\"toc-text\">起始和停止条件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93\"><span class=\"toc-text\">数据传输</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BA%BF%E6%97%B6%E9%92%9F%E5%90%8C%E6%AD%A5\"><span class=\"toc-text\">总线时钟同步</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BA%BF%E4%BB%B2%E8%A3%81\"><span class=\"toc-text\">总线仲裁</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#stm32-i2c-%E6%80%BB%E7%BA%BF%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">STM32 I2C 总线功能</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#cubemx-%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">CubeMx 配置</span></a></li></ol></li></ol>","author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Python MongoDB","uid":"eb44103d9200dfa14741693bcd11c4b0","slug":"Pyhon/PythonMongodb","date":"2022-10-20T07:00:00.000Z","updated":"2023-08-19T06:41:45.374Z","comments":true,"path":"api/articles/Pyhon/PythonMongodb.json","keywords":null,"cover":"/img/python/logo.png","text":"PyMongo Python 要连接 MongoDB 需要MongoDB 驱动，这里使用 PyMongo 驱动连接。 pip 安装 $ pip install pymongo 安装指定版本： $ pip install pymongo==3.5.1 测试PyMongo impor...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"Python","slug":"Python","count":5,"path":"api/categories/Python.json"}],"tags":[{"name":"Python tips","slug":"Python-tips","count":5,"path":"api/tags/Python-tips.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"STM32 SPI 通信","uid":"f421a58a89600265fb1eeb9a03b677f4","slug":"MCU/STM32 SPI","date":"2022-10-16T02:19:00.000Z","updated":"2023-09-01T02:28:29.548Z","comments":true,"path":"api/articles/MCU/STM32 SPI.json","keywords":null,"cover":"/img/STM32-GPIO/STM32-logo.jpg","text":"SPI 通信原理及特点 SPI，Serial Peripheral interface，串行外围设备接口。是 Motorola 首先在其 MC68HCXX 系列处理器上定义的。SPI 接口主要应用在 EEPROM、FLASH、实时时钟、AD 转换器，还有数字信号处理器和数字信号解...","link":"","photos":[],"count_time":{"symbolsCount":"7.9k","symbolsTime":"7 mins."},"categories":[{"name":"单片机","slug":"单片机","count":8,"path":"api/categories/单片机.json"}],"tags":[{"name":"STM32","slug":"STM32","count":8,"path":"api/tags/STM32.json"},{"name":"SPI","slug":"SPI","count":1,"path":"api/tags/SPI.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}