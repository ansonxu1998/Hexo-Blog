{"title":"OBD2 协议","uid":"6196392442c97458b57996bc517db85e","slug":"Automotive-Electronic/OBD2","date":"2023-06-28T02:36:00.000Z","updated":"2023-06-28T07:33:13.506Z","comments":true,"path":"api/articles/Automotive-Electronic/OBD2.json","keywords":null,"cover":"/img/OBD/OBD interface.svg","content":"<p>Ref: <a href=\"https://www.csselectronics.com/pages/obd2-explained-simple-intro\">OBD2 Explained - A Simple Intro [2023]</a></p>\n<h2 id=\"obd2-原始数据帧\">OBD2 原始数据帧</h2>\n<p>OBD2 消息由标识符和数据组成。数据由于 Mode、PID 和 数据字节(A,B,C,D)组成。</p>\n<p><img src=\"/img/OBD/OBD%20frame.svg\" /></p>\n<ul>\n<li><strong>Identifier</strong> - OBD 消息的标识符是标准的 11 位的，用于区分 \"request messages\" (ID 7DF) 和 \"response messages\" (ID 7E8 to 7EF)。7E8 通常是主发动机或 ECU 响应的地方。</li>\n<li><strong>Length</strong> - 剩余数据(03-06)的字节长度。以车速为例，请求值是 02 (包含 01 和 0D)，而响应是 03 (包含 41、0D 和 32)。</li>\n<li><strong>Mode</strong> - 请求是 01-0A 之间，如果是响应则将 0 替换位 4 (41-4A 之间)。SAE J1979 标准中描述了 10 中模式。模式 1 位显示当前数据，车速、RPM 等。其它模式用于显示或清除存储的诊断故障代码和显示冻结帧数据。</li>\n<li><strong>PID</strong> - 对于每一种模式，都有一系列标准的 OBD2 PIDs。例如，在模式 0 中，PID 0D 代表车速。每个 PID 都有描述，有些还有最大/最小值以及转换公式。</li>\n<li><strong>A, B, C, D</strong> - HEX 格式的数据字节，用于 PID 公式计算之前需要先转换为十进制形式。最后一个字节未被使用。</li>\n</ul>\n<h2 id=\"obd2-的请求与响应\">OBD2 的请求与响应</h2>\n<p>如图所示，PID 'Vehicle Speed' 的请求/响应 CAN 消息的值为 50 km/h:</p>\n<p><img src=\"/img/OBD/OBD request.svg\" style=\"zoom:20%;\" /></p>\n<p><img src=\"/img/OBD/OBD response.svg\" style=\"zoom:25%;\" /></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在某些车辆中，原始的 CAN 数据使用的是扩展的 29 位标识符。在这种情况下，需要修改 OBD2 的 PID 请求，使用的 CAN ID 是 18DB33F1 而不是 7DF。数据结构与标准帧相同。响应的 CAN ID 为 18DAF100 - 18DAF1FF。</p></blockquote>\n<h2 id=\"种-obd2-服务\">10 种 OBD2 服务</h2>\n<p>SAE J1979 OBD2 标准中描述了10 种 OBD2 诊断服务(或模式)。模式 1 显示当前数据，用于查看实时参数，如车速，RPM，油门位置等。其他模式例如用于显示/清除诊断故障代码 (DTCs) 和显示冻结帧数据。制造商不必支持所有的诊断服务，他们可以支持这10种服务之外的模式(即制造商特定的OBD2服务)。</p>\n<p><img src=\"/img/OBD/OBD server.svg\" style=\"zoom:25%;\" /></p>\n<h2 id=\"记录-obd2-数据\">记录 OBD2 数据</h2>\n<ul>\n<li>将 OBD2 记录器连接到 OBD2 连接器</li>\n<li>使用该工具通过 CAN 发送 \"request frames\"</li>\n<li>相关的 ECU 通过 CAN 发送 \"response frames\"</li>\n<li>解析原始的 OBD2 响应，如 DBC 文件</li>\n</ul>\n<h2 id=\"种-obd2-协议\">5 种 OBD2 协议</h2>\n<p>今天，通过 ISO-15765, CAN 总线作为绝大多数汽车中 OBD2 通信的基础。对于较旧的汽车(2008年以前)，可能使用其他四种协议。还要注意引脚，它可以用来确定汽车可能使用哪种协议。</p>\n<p><img src=\"/img/OBD/OBD protocols.svg\" style=\"zoom:25%;\" /></p>\n<ul>\n<li><strong>ISO 15765 (CAN bus)</strong> - 绝大多数汽车都在使用</li>\n<li><strong>ISO14230-4 (KWP2000)</strong> - Keyword Protocol 2000 是 2003+ 汽车的通用协议，例如亚洲</li>\n<li><strong>ISO9141-2</strong> - 2000-04 用于欧盟，克莱斯勒和亚洲汽车</li>\n<li><strong>SAE J1850 (VPW)</strong> - 主要用于老款通用汽车</li>\n<li><strong>SAE J1850 (PWM)</strong> - 主要用于老款福特汽车</li>\n</ul>\n<p>OBD 2 相关协议标准：</p>\n<ul>\n<li><strong><a href=\"https://www.sae.org/standards/content/j1962_201607/\">SAE J1962</a></strong> - 该标准定义了用于 OBD2 接口的物理连接器，即 OBD2 连接器。该标准描述了车载 OBD2 连接器和外部测试设备(例如OBD2 扫描仪或 OBD2 数据记录器) 使用的连接器。特别是，该标准规定了 OBD2 连接器的位置和访问权限。</li>\n<li><strong><a href=\"https://www.sae.org/standards/content/j1979_201702/\">SAE J1979</a></strong> - 该标准描述了通过 OBD2 协议请求诊断信息的方法。它还包括 OEM 可能在汽车中实现的标准化公共 OBD2 parameter IDs (OBD2 PIDs)列表。除了 SAE J1979 标准所规定的之外，OEM 也可能使用额外的专有 OBD2 PIDs。</li>\n<li><strong><a href=\"https://www.csselectronics.com/pages/j1939-explained-simple-intro-tutorial\">SAE J1939</a></strong> - 该标准描述了用于重型车辆通信的数据协议。虽然 OBD2 PID 信息仅在 OBD2 测试设备请求时可用，但 J1939 协议用于大多数重型车辆，作为通信 CAN 流量的基本手段-这意味着数据连续广播。</li>\n<li><strong><a href=\"https://www.csselectronics.com/pages/can-bus-simple-intro-tutorial\">ISO 11898</a>:</strong> - 该标准描述了 CAN 总线数据链路层和物理层，作为当今大多数汽车中 OBD2 通信的基础。</li>\n<li><strong><a href=\"https://www.csselectronics.com/pages/uds-protocol-tutorial-unified-diagnostic-services#can-iso-tp\">ISO 15765-2</a></strong> - ISO-TP 标准描述了 'Transport Layer'，即如何通过 CAN 总线发送超过 8 字节的数据包。该标准非常重要，因为它构成了UDS (Unified Diagnostic Services) 通信的基础，UDS 依赖于发送多帧 CAN 数据包。</li>\n<li><strong><a href=\"https://www.csselectronics.com/pages/uds-protocol-tutorial-unified-diagnostic-services\">ISO 14229</a></strong> - UDS 通信的详细介绍</li>\n</ul>\n<p><img src=\"/img/OBD/OBD%20interface.svg\" /></p>\n","text":"Ref: OBD2 Explained - A Simple Intro [2023] OBD2 原始数据帧 OBD2 消息由标识符和数据组成。数据由于 Mode、PID 和 数据字节(A,B,C,D)组成。 Identifier - OBD 消息的标识符是标准的 11 位的，用...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"汽车电子","slug":"汽车电子","count":2,"path":"api/categories/汽车电子.json"}],"tags":[{"name":"汽车诊断协议","slug":"汽车诊断协议","count":1,"path":"api/tags/汽车诊断协议.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#obd2-%E5%8E%9F%E5%A7%8B%E6%95%B0%E6%8D%AE%E5%B8%A7\"><span class=\"toc-text\">OBD2 原始数据帧</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#obd2-%E7%9A%84%E8%AF%B7%E6%B1%82%E4%B8%8E%E5%93%8D%E5%BA%94\"><span class=\"toc-text\">OBD2 的请求与响应</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A7%8D-obd2-%E6%9C%8D%E5%8A%A1\"><span class=\"toc-text\">10 种 OBD2 服务</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%B0%E5%BD%95-obd2-%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">记录 OBD2 数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A7%8D-obd2-%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">5 种 OBD2 协议</span></a></li></ol>","author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"MCU Bootloader","uid":"406f35918def0d366ae46a92ad742516","slug":"MCU/MCU_Bootloader","date":"2023-06-30T03:01:00.000Z","updated":"2023-10-08T03:36:21.308Z","comments":true,"path":"api/articles/MCU/MCU_Bootloader.json","keywords":null,"cover":"/img/STM32-GPIO/STM32-logo.jpg","text":"中断向量地址偏移 ① 重新设置 _vector 地址 ② 从 new vector 取出第 1 个值赋给 SP ③ 从 new vector 取出第 2 个值赋给 PC start_app PROC EXPORT start_app ; 设置异常向量地址为 0x08040000 ...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"15 mins."},"categories":[{"name":"STM32","slug":"STM32","count":2,"path":"api/categories/STM32.json"}],"tags":[{"name":"Bootloader","slug":"Bootloader","count":1,"path":"api/tags/Bootloader.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"网络管理工具 NetworkManager","uid":"80d29f01d39b07c6bd5a27520f206740","slug":"Linux/NetworkManager","date":"2023-06-17T04:51:00.000Z","updated":"2023-06-17T12:59:22.674Z","comments":true,"path":"api/articles/Linux/NetworkManager.json","keywords":null,"cover":"/img/bg/Linux.png","text":"NetworkManager 是一个系统网络服务，它可以管理网络设备和网络连接，在可用的情况下保持网络连接的通畅。它管理以太网、WiFi、移动宽带和PPPoE设备，同时还提供各种不同VPN服务的VPN集成。 默认情况下，Ubuntu Core 的网络管理由 systemd 的 n...","link":"","photos":[],"count_time":{"symbolsCount":"9.8k","symbolsTime":"9 mins."},"categories":[{"name":"Linux","slug":"Linux","count":5,"path":"api/categories/Linux.json"}],"tags":[{"name":"网络管理工具","slug":"网络管理工具","count":1,"path":"api/tags/网络管理工具.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}