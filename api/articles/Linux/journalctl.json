{"title":"日志管理 journalctl","uid":"5de91de1b3c23479ddb38340c9771a7c","slug":"Linux/journalctl","date":"2023-06-16T08:46:00.000Z","updated":"2023-06-23T09:49:40.066Z","comments":true,"path":"api/articles/Linux/journalctl.json","keywords":null,"cover":"/img/bg/Linux.png","content":"<p>Journald 是 systemd 的守护进程，用于从各种日志源(如syslog)收集日志。Journalctl 是一个命令行工具，可以使用该命令行对日志进行管理和分析。通过 journalctl，可以读取日志，实时监控日志，根据时间，服务，严重程度和其他参数过滤日志。</p>\n<p>Journald 日志的默认存储位置：<code>/var/log/journal/</code></p>\n<p>在 <code>/etc/systemd/journal .conf</code> 文件中，确保 Storage 的值被设置为 auto 或 persistent。</p>\n<h2 id=\"journalctl-命令的使用\">Journalctl 命令的使用</h2>\n<h3 id=\"使用-journalctl-读取日志\">使用 journalctl 读取日志</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ journalctl</code></pre>\n<p><img src=\"/img/Linux/journal-1.png\" /></p>\n<p>以上日志是按时间顺序显示的。<code>Journalctl</code>使用 <code>less</code> 来显示日志。使用与使用 <code>less</code> 命令相同的键来移动日志。</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th>Key</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>Arrow</td>\n<td>Move by one line</td>\n</tr>\n<tr class=\"even\">\n<td>Space</td>\n<td>Move down one page</td>\n</tr>\n<tr class=\"odd\">\n<td>b</td>\n<td>Move up one page</td>\n</tr>\n<tr class=\"even\">\n<td>g</td>\n<td>Go to the first line</td>\n</tr>\n<tr class=\"odd\">\n<td>G</td>\n<td>Go to the last line</td>\n</tr>\n<tr class=\"even\">\n<td>100g</td>\n<td>Go to the 100th line</td>\n</tr>\n<tr class=\"odd\">\n<td>/string</td>\n<td>Search for the string from current position</td>\n</tr>\n<tr class=\"even\">\n<td>n/N</td>\n<td>Go to the next or previous search match</td>\n</tr>\n<tr class=\"odd\">\n<td>q</td>\n<td>Exit the logs</td>\n</tr>\n</tbody>\n</table>\n<p>如果不希望日志以 less-like 查看模式显示，可以使用 <code>--no-pager</code> 参数。这将直接在屏幕上显示整个日志：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ journalctl --no-pager</code></pre>\n<h3 id=\"按时间倒序显示日志\">按时间倒序显示日志</h3>\n<p>如果想要查看最近的日志，你可以使用 <code>-r</code> 选项以相反的顺序显示日志：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ journalctl -r</code></pre>\n<p>按 <code>q</code> 退出日志。</p>\n<h3 id=\"只显示-n-行最近的日志\">只显示 N 行最近的日志</h3>\n<p>使用 <code>-n</code> 选项选择只显示日志中的特定行数，而不是显示所有日志。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ journalctl -n 25</code></pre>\n<h3 id=\"实时显示日志\">实时显示日志</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ journalctl -f</code></pre>\n<h3 id=\"以utc时间显示日志\">以UTC时间显示日志</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ journalctl --utc</code></pre>\n<h3 id=\"只显示内核信息\">只显示内核信息</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ journalctl -k</code></pre>\n<p><img src=\"/img/Linux/journal-2.png\" /></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>使用 <code>sudo</code> 查看所有日志</p></blockquote>\n<h3 id=\"显示来自特定-boot-会话的消息\">显示来自特定 boot 会话的消息</h3>\n<p><code>Journalctl</code> 命令使用选项 <code>-b</code> 访问属于特定 boot 会话的日志。</p>\n<p>可以使用 <code>--list-boots</code> 参数列出所有 boot 会话:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ journalctl --list-boots\n0 de0eb89fb7f243a89fe27c180ad1cec9 Tue 2023-06-20 14:46:52 CST—Fri 2023-06-23 17:05:56 CST</code></pre>\n<p>Boot 会话 0 是当前启动会话。Boot 会话 -1 是最后启动的会话，依此类推。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ journalctl -b -2</code></pre>\n<h3 id=\"筛选特定系统服务的日志\">筛选特定系统服务的日志</h3>\n<p>可以根据 systemd 服务对日志进行过滤。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ journalctl -u service_name</code></pre>\n<h3 id=\"过滤一定时间间隔的日志\">过滤一定时间间隔的日志</h3>\n<p>您可以使用自然语言对日志进行过滤。 yesterday, today 和 tomorrow 这样的术语是可用的：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ journalctl --since&#x3D;yesterday --until&#x3D;now</code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ journalctl --since &quot;2020-07-10 15:10:00&quot; --until &quot;2020-07-12&quot;</code></pre>\n<h3 id=\"根据-uidgid-和-pid-对日志进行过滤\">根据 UID、GID 和 PID 对日志进行过滤</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ journalctl _PID&#x3D;1234</code></pre>\n<h3 id=\"仅显示错误日志\">仅显示错误日志</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ journalctl -p 3 -xb</code></pre>\n<ul>\n<li><code>-p 3</code>: 过滤优先级为3的日志</li>\n<li><code>-x</code>: 提供关于日志的其他信息</li>\n<li><code>-b</code>: 自上次启动以来(即当前会话)</li>\n</ul>\n<p>还可以使用其他优先级来获取调试、警告甚至关键级别的日志。</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th>Priority</th>\n<th>Code</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>0</td>\n<td>emerg</td>\n</tr>\n<tr class=\"even\">\n<td>1</td>\n<td>alert</td>\n</tr>\n<tr class=\"odd\">\n<td>2</td>\n<td>crit</td>\n</tr>\n<tr class=\"even\">\n<td>3</td>\n<td>err</td>\n</tr>\n<tr class=\"odd\">\n<td>4</td>\n<td>warning</td>\n</tr>\n<tr class=\"even\">\n<td>5</td>\n<td>notice</td>\n</tr>\n<tr class=\"odd\">\n<td>6</td>\n<td>info</td>\n</tr>\n<tr class=\"even\">\n<td>7</td>\n<td>debug</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"检查日志的磁盘占用\">检查日志的磁盘占用</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ journalctl --disk-usage</code></pre>\n<h3 id=\"日志清理\">日志清理</h3>\n<p>在清理日志之前的第一件事是调换日志文件。就是将当前活动的日志标记为存档，并创建新的日志。这是可选的，但这是有必要的。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ sudo journalctl --rotate</code></pre>\n<h4 id=\"清理过去-x-天的日志\">1. 清理过去 x 天的日志</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ sudo journalctl --vacuum-time&#x3D;2d</code></pre>\n<h4 id=\"限制日志的空间大小\">2. 限制日志的空间大小</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ sudo journalctl --vacuum-size&#x3D;100M</code></pre>\n<h4 id=\"限制日志文件的数量\">3. 限制日志文件的数量</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ journalctl --vacuum-files&#x3D;5</code></pre>\n<h4 id=\"自动日志清理\">自动日志清理</h4>\n<p><code>Journalctl</code> 的配置文件位于 <code>/etc/systemd/journald.conf</code>。有些设置被注释掉了。注释行基本上表示这些设置参数的默认值(即使它们被注释掉了)。可以更改其中一些默认设置以自动清除日志文件。</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th>Setting</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>SystemMaxUse</td>\n<td>Max disk space logs can take</td>\n</tr>\n<tr class=\"even\">\n<td>SystemMaxFileSize</td>\n<td>Max size of an INDIVIDUAL log file</td>\n</tr>\n<tr class=\"odd\">\n<td>SystemMaxFiles</td>\n<td>Max number of log files</td>\n</tr>\n</tbody>\n</table>\n<p>修改配置文件之后，重启服务。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ sudo systemctl restart systemd-journald</code></pre>\n","text":"Journald 是 systemd 的守护进程，用于从各种日志源(如syslog)收集日志。Journalctl 是一个命令行工具，可以使用该命令行对日志进行管理和分析。通过 journalctl，可以读取日志，实时监控日志，根据时间，服务，严重程度和其他参数过滤日志。 Jou...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"Linux","slug":"Linux","count":5,"path":"api/categories/Linux.json"}],"tags":[{"name":"日志管理","slug":"日志管理","count":1,"path":"api/tags/日志管理.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#journalctl-%E5%91%BD%E4%BB%A4%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">Journalctl 命令的使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-journalctl-%E8%AF%BB%E5%8F%96%E6%97%A5%E5%BF%97\"><span class=\"toc-text\">使用 journalctl 读取日志</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8C%89%E6%97%B6%E9%97%B4%E5%80%92%E5%BA%8F%E6%98%BE%E7%A4%BA%E6%97%A5%E5%BF%97\"><span class=\"toc-text\">按时间倒序显示日志</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%AA%E6%98%BE%E7%A4%BA-n-%E8%A1%8C%E6%9C%80%E8%BF%91%E7%9A%84%E6%97%A5%E5%BF%97\"><span class=\"toc-text\">只显示 N 行最近的日志</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E6%97%B6%E6%98%BE%E7%A4%BA%E6%97%A5%E5%BF%97\"><span class=\"toc-text\">实时显示日志</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A5utc%E6%97%B6%E9%97%B4%E6%98%BE%E7%A4%BA%E6%97%A5%E5%BF%97\"><span class=\"toc-text\">以UTC时间显示日志</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%AA%E6%98%BE%E7%A4%BA%E5%86%85%E6%A0%B8%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">只显示内核信息</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%98%BE%E7%A4%BA%E6%9D%A5%E8%87%AA%E7%89%B9%E5%AE%9A-boot-%E4%BC%9A%E8%AF%9D%E7%9A%84%E6%B6%88%E6%81%AF\"><span class=\"toc-text\">显示来自特定 boot 会话的消息</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AD%9B%E9%80%89%E7%89%B9%E5%AE%9A%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%97%A5%E5%BF%97\"><span class=\"toc-text\">筛选特定系统服务的日志</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%87%E6%BB%A4%E4%B8%80%E5%AE%9A%E6%97%B6%E9%97%B4%E9%97%B4%E9%9A%94%E7%9A%84%E6%97%A5%E5%BF%97\"><span class=\"toc-text\">过滤一定时间间隔的日志</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A0%B9%E6%8D%AE-uidgid-%E5%92%8C-pid-%E5%AF%B9%E6%97%A5%E5%BF%97%E8%BF%9B%E8%A1%8C%E8%BF%87%E6%BB%A4\"><span class=\"toc-text\">根据 UID、GID 和 PID 对日志进行过滤</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%85%E6%98%BE%E7%A4%BA%E9%94%99%E8%AF%AF%E6%97%A5%E5%BF%97\"><span class=\"toc-text\">仅显示错误日志</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A3%80%E6%9F%A5%E6%97%A5%E5%BF%97%E7%9A%84%E7%A3%81%E7%9B%98%E5%8D%A0%E7%94%A8\"><span class=\"toc-text\">检查日志的磁盘占用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%97%A5%E5%BF%97%E6%B8%85%E7%90%86\"><span class=\"toc-text\">日志清理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B8%85%E7%90%86%E8%BF%87%E5%8E%BB-x-%E5%A4%A9%E7%9A%84%E6%97%A5%E5%BF%97\"><span class=\"toc-text\">1. 清理过去 x 天的日志</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%99%90%E5%88%B6%E6%97%A5%E5%BF%97%E7%9A%84%E7%A9%BA%E9%97%B4%E5%A4%A7%E5%B0%8F\"><span class=\"toc-text\">2. 限制日志的空间大小</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%99%90%E5%88%B6%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E7%9A%84%E6%95%B0%E9%87%8F\"><span class=\"toc-text\">3. 限制日志文件的数量</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%8A%A8%E6%97%A5%E5%BF%97%E6%B8%85%E7%90%86\"><span class=\"toc-text\">自动日志清理</span></a></li></ol></li></ol></li></ol>","author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"cron 计划任务","uid":"15a22b4df3f9daa5f948365cdbe57588","slug":"Linux/crond","date":"2023-06-16T15:07:00.000Z","updated":"2023-06-20T09:41:08.416Z","comments":true,"path":"api/articles/Linux/crond.json","keywords":null,"cover":"/img/bg/Linux.png","text":" 守护进程执行调度命令：安排任务在特定时间自动运行 熟练的系统管理员知道何时以及如何以编程方式安排任务以特定的间隔执行，无论是重复执行还是执行一定次数。可以在许多场景中应用此技能，例如调度备份、定期收集系统日志或自动化基本和重复的任务 cron 使用一个守护进程（crond) 来...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"Linux","slug":"Linux","count":5,"path":"api/categories/Linux.json"}],"tags":[{"name":"计划任务","slug":"计划任务","count":1,"path":"api/tags/计划任务.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"CubeMX 添加 DSP 库","uid":"bf8918495fd2885b956948d83a291295","slug":"MCU/CubeMX-DSP","date":"2023-06-08T02:30:00.000Z","updated":"2023-08-30T02:42:09.978Z","comments":true,"path":"api/articles/MCU/CubeMX-DSP.json","keywords":null,"cover":"/img/STM32-GPIO/STM32-logo.jpg","text":" 添加宏定义： 在 keil 中添加宏定义： 调用 arm_math.h ","link":"","photos":[],"count_time":{"symbolsCount":42,"symbolsTime":"1 mins."},"categories":[{"name":"STM32","slug":"STM32","count":2,"path":"api/categories/STM32.json"}],"tags":[{"name":"DSP 库","slug":"DSP-库","count":1,"path":"api/tags/DSP-库.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}