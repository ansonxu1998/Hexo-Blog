{"title":"cron 计划任务","uid":"15a22b4df3f9daa5f948365cdbe57588","slug":"Linux/crond","date":"2023-06-16T15:07:00.000Z","updated":"2023-06-20T09:41:08.416Z","comments":true,"path":"api/articles/Linux/crond.json","keywords":null,"cover":"/img/bg/Linux.png","content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>守护进程执行调度命令：安排任务在特定时间自动运行</p>\n<p>熟练的系统管理员知道何时以及如何以编程方式安排任务以特定的间隔执行，无论是重复执行还是执行一定次数。可以在许多场景中应用此技能，例如调度备份、定期收集系统日志或自动化基本和重复的任务</p></blockquote>\n<p><code>cron</code> 使用一个守护进程（<code>crond</code>) 来读取不同的配置文件。在 <code>/etc/cron.d</code> 文件夹中存放着每个用户的 cron 文件，<code>/etc/crontab</code> 文件是全系统的。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ sudo systemctl status cron.service\n● cron.service - Regular background program processing daemon\n     Loaded: loaded (&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;cron.service; enabled; vendor preset: enabled)\n     Active: active (running) since Tue 2023-06-20 10:48:16 CST; 51min ago\n       Docs: man:cron(8)\n   Main PID: 404783 (cron)\n      Tasks: 1 (limit: 4474)\n     Memory: 516.0K\n        CPU: 446ms\n     CGroup: &#x2F;system.slice&#x2F;cron.service\n             └─404783 &#x2F;usr&#x2F;sbin&#x2F;cron -f -P\n\nJun 20 10:48:16 ansonserver systemd[1]: Started Regular background program processing daemon.\nJun 20 10:48:16 ansonserver cron[404783]: (CRON) INFO (pidfile fd &#x3D; 3)\nJun 20 10:48:16 ansonserver cron[404783]: (CRON) INFO (Skipping @reboot jobs -- not system startup)\nJun 20 10:50:01 ansonserver CRON[405459]: (anson) CMD (python3 &#x2F;home&#x2F;anson&#x2F;NetworkLogin&#x2F;NetworkLogin.py)\n\n$ ll &#x2F;etc&#x2F;crontab\n-rw-r--r-- 1 root root 1136 Mar 23  2022 &#x2F;etc&#x2F;crontab\n\n$ ll &#x2F;etc&#x2F;cron.d&#x2F;\ntotal 16\ndrwxr-xr-x   2 root root 4096 Feb 18 01:24 .&#x2F;\ndrwxr-xr-x 112 root root 4096 Jun 20 10:33 ..&#x2F;\n-rw-r--r--   1 root root  201 Jan  9  2022 e2scrub_all\n-rw-r--r--   1 root root  102 Mar 23  2022 .placeholder</code></pre>\n<p>通过编辑 <code>crontab</code> 文件来操作 <code>cron</code> 的任务调度，或者在用户的 <code>cron.d</code> 目录中创建包含相关参数的文件。</p>\n<p>最常用的 <code>crontab</code> 参数包括：</p>\n<ul>\n<li><code>-l</code>: 显示当前 <code>crontab</code> (当前用户的计划任务)</li>\n<li><code>-r</code>: 删除当前 <code>crontab</code></li>\n<li><code>-e</code>: 编辑当前 <code>crontab</code>，使用环境变量指定的编辑器。退出编辑器后，将自动安装修改后的 <code>crontab</code>。</li>\n</ul>\n<p><code>crontab</code> 文件的语法:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ cat &#x2F;etc&#x2F;crontab\n# &#x2F;etc&#x2F;crontab: system-wide crontab\n# Unlike any other crontab you don&#39;t have to run the &#96;crontab&#39;\n# command to install the new version when you edit this file\n# and files in &#x2F;etc&#x2F;cron.d. These files also have username fields,\n# that none of the other crontabs do.\n\nSHELL&#x3D;&#x2F;bin&#x2F;sh\n# You can also override PATH, but by default, newer versions inherit it from the environment\n#PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;sbin:&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin\n\n# Example of job definition:\n# .---------------- minute (0 - 59)\n# |  .------------- hour (0 - 23)\n# |  |  .---------- day of month (1 - 31)\n# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...\n# |  |  |  |  .---- day of week (0 - 6) (Sunday&#x3D;0 or 7) OR sun,mon,tue,wed,thu,fri,sat\n# |  |  |  |  |\n# *  *  *  *  * user-name command to be executed</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>其它用法：</p>\n<ul>\n<li>使用 x-y 表示范围：例如，在 \"Days\" 列中输入 <code>1-5</code>，表示任务从周一运行到周五。</li>\n<li>使用 x,y 表示列表：例如，在 \"Minutes\" 列中设置 <code>5,10-13,17</code>，任务将在整点过5、10、11、12、13和17分时运行。</li>\n<li>使用 */x 表示间隔 x：例如，在 \"Minutes\" 列中输入 */7 表示每 7 分钟运行一次任务。</li>\n</ul></blockquote>\n<p>将日志信息发送到指定的邮箱：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># file: crontab\nMAILTO&#x3D;aosonxu_vip@163.com</code></pre>\n","text":" 守护进程执行调度命令：安排任务在特定时间自动运行 熟练的系统管理员知道何时以及如何以编程方式安排任务以特定的间隔执行，无论是重复执行还是执行一定次数。可以在许多场景中应用此技能，例如调度备份、定期收集系统日志或自动化基本和重复的任务 cron 使用一个守护进程（crond) 来...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"Linux","slug":"Linux","count":4,"path":"api/categories/Linux.json"}],"tags":[{"name":"计划任务","slug":"计划任务","count":1,"path":"api/tags/计划任务.json"}],"toc":"","author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"网络管理工具 NetworkManager","uid":"80d29f01d39b07c6bd5a27520f206740","slug":"Linux/NetworkManager","date":"2023-06-17T04:51:00.000Z","updated":"2023-06-17T12:59:22.674Z","comments":true,"path":"api/articles/Linux/NetworkManager.json","keywords":null,"cover":"/img/bg/Linux.png","text":"NetworkManager 是一个系统网络服务，它可以管理网络设备和网络连接，在可用的情况下保持网络连接的通畅。它管理以太网、WiFi、移动宽带和PPPoE设备，同时还提供各种不同VPN服务的VPN集成。 默认情况下，Ubuntu Core 的网络管理由 systemd 的 n...","link":"","photos":[],"count_time":{"symbolsCount":"9.8k","symbolsTime":"9 mins."},"categories":[{"name":"Linux","slug":"Linux","count":4,"path":"api/categories/Linux.json"}],"tags":[{"name":"网络管理工具","slug":"网络管理工具","count":1,"path":"api/tags/网络管理工具.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"FreeRTOS 的定时器 (Timer)","uid":"0de178335a5288a6c84f26e77dfbea47","slug":"FreeRTOS/Timer","date":"2023-05-07T09:24:00.000Z","updated":"2023-05-07T09:36:40.877Z","comments":true,"path":"api/articles/FreeRTOS/Timer.json","keywords":null,"cover":"/img/FreeRTOS/logo.jpg","text":"软件定时器用于在将来一个设定的时间或以固定频率定期的执行函数。软件定时器所执行的函数被称为软件定时器的回调函数。 软件定时器由 FreeRTOS 内核实现，并受其控制。它不需要硬件支持，也与硬件定时器或硬件计数器无关。软件计时器不使用任何处理时间，除非软件计时器回调函数正在实际执...","link":"","photos":[],"count_time":{"symbolsCount":"8.4k","symbolsTime":"8 mins."},"categories":[{"name":"嵌入式","slug":"嵌入式","count":3,"path":"api/categories/嵌入式.json"}],"tags":[{"name":"FreeRTOS","slug":"FreeRTOS","count":3,"path":"api/tags/FreeRTOS.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}