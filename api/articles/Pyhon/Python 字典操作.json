{"title":"Python 字典操作","uid":"042597e1033e319d05b0a52bf84695b9","slug":"Pyhon/Python 字典操作","date":"2022-08-25T07:00:00.000Z","updated":"2023-08-19T06:41:45.338Z","comments":true,"path":"api/articles/Pyhon/Python 字典操作.json","keywords":null,"cover":"/img/python/logo.png","content":"<h2 id=\"字典介绍\">1. 字典介绍</h2>\n<p>字典是一种可变容器模型，且可存储任意类型对象。</p>\n<p>字典的每个键值对 key : value 用冒号 : 分割，每个对之间用逗号 \",\" 分割，整个字典包括在花括号{}中，格式如下：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">d &#x3D; &#123;key1 : value1, key2 : value2, key3 : value3&#125;</code></pre>\n<h2 id=\"字典的增删改查\">2. 字典的增、删、改、查</h2>\n<p><strong>添加：</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">info_dict &#x3D; &#123;&#39;姓名&#39;:&#39;张三&#39;, &#39;性别&#39;:&#39;男&#39;, &#39;年龄&#39;:22&#125;\nprint(&#39;原始字典： &#39;, info_dict)\n# 原始字典： &#123;&#39;姓名&#39;:&#39;张三&#39;, &#39;性别&#39;:&#39;男&#39;, &#39;年龄&#39;:22&#125;\n\n# 添加1，key不相同则添加\ninfo_dict[&#39;住址&#39;] &#x3D; &#39;北京&#39;\nprint(&#39;添加1: &#39;, info_dict)\n# 添加1: &#123;&#39;姓名&#39;:&#39;张三&#39;, &#39;性别&#39;:&#39;男&#39;, &#39;年龄&#39;:22, &#39;住址&#39;:&#39;北京&#39;&#125;\n\n# 添加2， key相同则替换\ninfo_dict[&#39;姓名&#39;:&#39;张三丰&#39;]\nprint(&#39;添加2: &#39;, info_dict)\n# 添加2: &#123;&#39;姓名&#39;:&#39;张三丰&#39;, &#39;性别&#39;:&#39;男&#39;, &#39;年龄&#39;:22&#125;</code></pre>\n<p><strong>删除:</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">info_dict &#x3D; &#123;&#39;姓名&#39;:&#39;张三&#39;, &#39;性别&#39;:&#39;男&#39;, &#39;年龄&#39;:22&#125;\nprint(&#39;原始字典： &#39;, info_dict)\n# 原始字典： &#123;&#39;姓名&#39;:&#39;张三&#39;, &#39;性别&#39;:&#39;男&#39;, &#39;年龄&#39;:22&#125;\n\n# 删除1， 根据key删除\ninfo_dict.pop(&#39;性别&#39;)\nprint(&#39;删除1: &#39;， info_dict)\n# 删除1: &#123;&#39;姓名&#39;:&#39;张三&#39;, &#39;年龄&#39;:22&#125;\n\n# 删除2，随机删除\ninfo_dict.popitem()\nprint(&#39;删除2&#39;, info_dict)\n# &#123;&#39;姓名&#39;:&#39;张三&#39;&#125;\n\n# 删除3：清空字典\ninfo_dict.clear()\nprint(&#39;清空: &#39;, info_dict())\n# 清空：&#123;&#125;\n\n# 删除字典\ndel info_dict</code></pre>\n<p><strong>修改：</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">info_dict &#x3D; &#123;&#39;姓名&#39;:&#39;张三&#39;, &#39;性别&#39;:&#39;男&#39;, &#39;年龄&#39;:22&#125;\nprint(&#39;原始字典： &#39;, info_dict)\n# 原始字典： &#123;&#39;姓名&#39;:&#39;张三&#39;, &#39;性别&#39;:&#39;男&#39;, &#39;年龄&#39;:22&#125;\n\n# 修改\ninfo_dict[&#39;姓名&#39;] &#x3D; &#39;张三丰&#39;\nprint(info_dict)\n# &#123;&#39;姓名&#39;:&#39;张三丰&#39;, &#39;性别&#39;:&#39;男&#39;, &#39;年龄&#39;:22&#125;</code></pre>\n<p><strong>查询：</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">info_dict &#x3D; &#123;&#39;姓名&#39;:&#39;张三&#39;, &#39;性别&#39;:&#39;男&#39;, &#39;年龄&#39;:22&#125;\nprint(&#39;原始字典： &#39;, info_dict)\n# 原始字典： &#123;&#39;姓名&#39;:&#39;张三&#39;, &#39;性别&#39;:&#39;男&#39;, &#39;年龄&#39;:22&#125;\n\n# 咨询\n# 咨询1，使用key\nname &#x3D; info_dict[&#39;姓名&#39;]\nprint(&#39;key查询: &#39;, name)\n# 张三\n\n# 咨询2，使用get()\nage &#x3D; info_dict.get(&#39;年龄&#39;)\nprint(&#39;get查询: &#39;, age)\n# 22</code></pre>\n<h2 id=\"keysvaluesitem\">3. keys()、values()、item()</h2>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">info_dict &#x3D; &#123;&#39;姓名&#39;:&#39;张三&#39;, &#39;性别&#39;:&#39;男&#39;, &#39;年龄&#39;:22&#125;\nprint(&#39;原始字典：&#39;,info_dict)\n# 原始字典： &#123;&#39;姓名&#39;: &#39;张三&#39;, &#39;性别&#39;: &#39;男&#39;, &#39;年龄&#39;: 22&#125;\n\nprint(&#39;key:&#39;, info_dict.keys())\nprint(&#39;value:&#39;, info_dict.values())\nprint(&#39;item:&#39;, info_dict.items())\n&#39;&#39;&#39;\nkey: dict_keys([&#39;姓名&#39;, &#39;性别&#39;, &#39;年龄&#39;])\nvalue: dict_values([&#39;张三&#39;, &#39;男&#39;, 22])\nitem: dict_items([(&#39;姓名&#39;, &#39;张三&#39;), (&#39;性别&#39;, &#39;男&#39;), (&#39;年龄&#39;, 22)])\n&#39;&#39;&#39;</code></pre>\n<p><strong>通过key获取所有的键：</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">info_dict &#x3D; &#123;&#39;姓名&#39;:&#39;张三&#39;, &#39;性别&#39;:&#39;男&#39;, &#39;年龄&#39;:22&#125;\nprint(&#39;原始字典：&#39;,info_dict)\n# 原始字典： &#123;&#39;姓名&#39;: &#39;张三&#39;, &#39;性别&#39;: &#39;男&#39;, &#39;年龄&#39;: 22&#125;\n\nfor key in info_dict:\n    print(&#39;key值为：&#39;, key)\n\n&#39;&#39;&#39;\nkey值为： 姓名\nvalue值为： 张三\nkey值为： 性别\n&#39;&#39;&#39;</code></pre>\n<p><strong>通过values获取所有的值：</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">info_dict &#x3D; &#123;&#39;姓名&#39;:&#39;张三&#39;, &#39;性别&#39;:&#39;男&#39;, &#39;年龄&#39;:22&#125;\nprint(&#39;原始字典：&#39;,info_dict)\n# 原始字典： &#123;&#39;姓名&#39;: &#39;张三&#39;, &#39;性别&#39;: &#39;男&#39;, &#39;年龄&#39;: 22&#125;\n\nfor value in info_dict.values():\n    print(value)\n    \n&#39;&#39;&#39;\n张三\n男\n22\n&#39;&#39;&#39;</code></pre>\n<h2 id=\"合并字典\">4. 合并字典</h2>\n<p><strong>使用update()方法合并：</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">dict1 &#x3D; &#123;&#39;姓名&#39;: &#39;张三&#39;, &#39;性别&#39;: &#39;男&#39;, &#39;年龄&#39;: 22&#125;\ndict2 &#x3D; &#123;&#39;刘备&#39;: &#39;玄德&#39;, &#39;张飞&#39;: &#39;翼德&#39;, &#39;曹操&#39;: &#39;孟德&#39;&#125;\n# print(&#39;字典1：&#39;, dict1)\n# print(&#39;字典2：&#39;, dict2)\n&#39;&#39;&#39;\n字典1： &#123;&#39;姓名&#39;: &#39;张三&#39;, &#39;性别&#39;: &#39;男&#39;, &#39;年龄&#39;: 22&#125;\n字典2： &#123;&#39;刘备&#39;: &#39;玄德&#39;, &#39;张飞&#39;: &#39;翼德&#39;, &#39;曹操&#39;: &#39;孟德&#39;&#125;\n&#39;&#39;&#39;\n\n# 使用update()合并\ndict1.update(dict2)\nprint(dict1)\n# &#123;&#39;姓名&#39;: &#39;张三&#39;, &#39;性别&#39;: &#39;男&#39;, &#39;年龄&#39;: 22, &#39;刘备&#39;: &#39;玄德&#39;, &#39;张飞&#39;: &#39;翼德&#39;, &#39;曹操&#39;: &#39;孟德&#39;&#125;\n\ndict2.update(dict1)\nprint(dict2)\n# &#123;&#39;刘备&#39;: &#39;玄德&#39;, &#39;张飞&#39;: &#39;翼德&#39;, &#39;曹操&#39;: &#39;孟德&#39;, &#39;姓名&#39;: &#39;张三&#39;, &#39;性别&#39;: &#39;男&#39;, &#39;年龄&#39;: 22&#125;</code></pre>\n<p>**使用**合并：**</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">dict1 &#x3D; &#123;&#39;姓名&#39;: &#39;张三&#39;, &#39;性别&#39;: &#39;男&#39;, &#39;年龄&#39;: 22&#125;\ndict2 &#x3D; &#123;&#39;刘备&#39;: &#39;玄德&#39;, &#39;张飞&#39;: &#39;翼德&#39;, &#39;曹操&#39;: &#39;孟德&#39;&#125;\n# print(&#39;字典1：&#39;, dict1)\n# print(&#39;字典2：&#39;, dict2)\n&#39;&#39;&#39;\n字典1： &#123;&#39;姓名&#39;: &#39;张三&#39;, &#39;性别&#39;: &#39;男&#39;, &#39;年龄&#39;: 22&#125;\n字典2： &#123;&#39;刘备&#39;: &#39;玄德&#39;, &#39;张飞&#39;: &#39;翼德&#39;, &#39;曹操&#39;: &#39;孟德&#39;&#125;\n&#39;&#39;&#39;\n\n# 使用**合并\ndict3 &#x3D; dict(dict1, **dict2)\nprint(dict3)\n# &#123;&#39;姓名&#39;: &#39;张三&#39;, &#39;性别&#39;: &#39;男&#39;, &#39;年龄&#39;: 22, &#39;刘备&#39;: &#39;玄德&#39;, &#39;张飞&#39;: &#39;翼德&#39;, &#39;曹操&#39;: &#39;孟德&#39;&#125;</code></pre>\n<p><strong>使用|合并：</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">dict1 &#x3D; &#123;&#39;姓名&#39;: &#39;张三&#39;, &#39;性别&#39;: &#39;男&#39;, &#39;年龄&#39;: 22&#125;\ndict2 &#x3D; &#123;&#39;刘备&#39;: &#39;玄德&#39;, &#39;张飞&#39;: &#39;翼德&#39;, &#39;曹操&#39;: &#39;孟德&#39;&#125;\n\ndict3 &#x3D; dict1|dict2\nprint(dict3)\n&#39;&#39;&#39;\n&#123;&#39;姓名&#39;: &#39;张三&#39;, &#39;性别&#39;: &#39;男&#39;, &#39;年龄&#39;: 22, &#39;刘备&#39;: &#39;玄德&#39;, &#39;张飞&#39;: &#39;翼德&#39;, &#39;曹操&#39;: &#39;孟德&#39;&#125;\n&#39;&#39;&#39;</code></pre>\n<h2 id=\"检查键是否在于字典中\">5. 检查键是否在于字典中</h2>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">dict &#x3D; &#123;&#39;刘备&#39;: &#39;玄德&#39;, &#39;张飞&#39;: &#39;翼德&#39;, &#39;曹操&#39;: &#39;孟德&#39;&#125;\n\ndef key_in_dict(dict, key):\n    return key in dict\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    print(key_in_dict(dict, &#39;刘备&#39;))\n    print(key_in_dict(dict, &#39;关羽&#39;))\n\n&#39;&#39;&#39;\nTrue\nFalse\n&#39;&#39;&#39;</code></pre>\n<h2 id=\"获取字典中所有键组成的列表\">6. 获取字典中所有键组成的列表</h2>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">dict &#x3D; &#123;&#39;刘备&#39;: &#39;玄德&#39;, &#39;张飞&#39;: &#39;翼德&#39;, &#39;曹操&#39;: &#39;孟德&#39;&#125;\n\ndef get_keys(dict):\n    return list(dict.keys())\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    print(get_keys(dict))\n\n&#39;&#39;&#39;\n[&#39;刘备&#39;, &#39;张飞&#39;, &#39;曹操&#39;]\n&#39;&#39;&#39;</code></pre>\n<h2 id=\"获取字典中所有值组成的列表\">7. 获取字典中所有值组成的列表</h2>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">dict &#x3D; &#123;&#39;刘备&#39;: &#39;玄德&#39;, &#39;张飞&#39;: &#39;翼德&#39;, &#39;曹操&#39;: &#39;孟德&#39;&#125;\n\ndef get_keys(dict):\n    return list(dict.values())\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    print(get_keys(dict))\n\n&#39;&#39;&#39;\n[&#39;玄德&#39;, &#39;翼德&#39;, &#39;孟德&#39;]\n&#39;&#39;&#39;</code></pre>\n<h2 id=\"将字典所有键值对转换为元组列表\">8. 将字典所有键值对转换为元组列表</h2>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">dict &#x3D; &#123;&#39;刘备&#39;: &#39;玄德&#39;, &#39;张飞&#39;: &#39;翼德&#39;, &#39;曹操&#39;: &#39;孟德&#39;&#125;\n\ndef dict_to_list(dict):\n    return list(dict.items())\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    print(dict_to_list(dict))\n&#39;&#39;&#39;\n[(&#39;刘备&#39;, &#39;玄德&#39;), (&#39;张飞&#39;, &#39;翼德&#39;), (&#39;曹操&#39;, &#39;孟德&#39;)]\n&#39;&#39;&#39;</code></pre>\n<h2 id=\"将两个列表组合为一个字典\">9. 将两个列表组合为一个字典</h2>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">list1 &#x3D; [&#39;姓名&#39;, &#39;性别&#39;, &#39;年龄&#39;]\nlist2 &#x3D; [&#39;张三&#39;, &#39;男&#39;, 22]\n\ndef list_to_dict(keys, values):\n    return dict(zip(keys, values))\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    print(list_to_dict(list1, list2))\n    \n&#39;&#39;&#39;\n&#123;&#39;姓名&#39;: &#39;张三&#39;, &#39;性别&#39;: &#39;男&#39;, &#39;年龄&#39;: 22&#125;\n&#39;&#39;&#39;</code></pre>\n<h2 id=\"计算字典长度\">10. 计算字典长度</h2>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">dict &#x3D; &#123;&#39;刘备&#39;: &#39;玄德&#39;, &#39;张飞&#39;: &#39;翼德&#39;, &#39;曹操&#39;: &#39;孟德&#39;&#125;\n\nprint(len(dict))\n&#39;&#39;&#39;\n3\n&#39;&#39;&#39;</code></pre>\n","text":"1. 字典介绍 字典是一种可变容器模型，且可存储任意类型对象。 字典的每个键值对 key : value 用冒号 : 分割，每个对之间用逗号 \",\" 分割，整个字典包括在花括号{}中，格式如下： d &#x3D; &#123;key1 : value1, key2 : value...","link":"","photos":[],"count_time":{"symbolsCount":"7.5k","symbolsTime":"7 mins."},"categories":[{"name":"Python","slug":"Python","count":5,"path":"api/categories/Python.json"}],"tags":[{"name":"Python tips","slug":"Python-tips","count":5,"path":"api/tags/Python-tips.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%97%E5%85%B8%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">1. 字典介绍</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%97%E5%85%B8%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5\"><span class=\"toc-text\">2. 字典的增、删、改、查</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#keysvaluesitem\"><span class=\"toc-text\">3. keys()、values()、item()</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%90%88%E5%B9%B6%E5%AD%97%E5%85%B8\"><span class=\"toc-text\">4. 合并字典</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A3%80%E6%9F%A5%E9%94%AE%E6%98%AF%E5%90%A6%E5%9C%A8%E4%BA%8E%E5%AD%97%E5%85%B8%E4%B8%AD\"><span class=\"toc-text\">5. 检查键是否在于字典中</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E5%AD%97%E5%85%B8%E4%B8%AD%E6%89%80%E6%9C%89%E9%94%AE%E7%BB%84%E6%88%90%E7%9A%84%E5%88%97%E8%A1%A8\"><span class=\"toc-text\">6. 获取字典中所有键组成的列表</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E5%AD%97%E5%85%B8%E4%B8%AD%E6%89%80%E6%9C%89%E5%80%BC%E7%BB%84%E6%88%90%E7%9A%84%E5%88%97%E8%A1%A8\"><span class=\"toc-text\">7. 获取字典中所有值组成的列表</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B0%86%E5%AD%97%E5%85%B8%E6%89%80%E6%9C%89%E9%94%AE%E5%80%BC%E5%AF%B9%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%85%83%E7%BB%84%E5%88%97%E8%A1%A8\"><span class=\"toc-text\">8. 将字典所有键值对转换为元组列表</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B0%86%E4%B8%A4%E4%B8%AA%E5%88%97%E8%A1%A8%E7%BB%84%E5%90%88%E4%B8%BA%E4%B8%80%E4%B8%AA%E5%AD%97%E5%85%B8\"><span class=\"toc-text\">9. 将两个列表组合为一个字典</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E5%AD%97%E5%85%B8%E9%95%BF%E5%BA%A6\"><span class=\"toc-text\">10. 计算字典长度</span></a></li></ol>","author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"立创 EAD 导出 AD 封装","uid":"0eaae2e7a8b8a57479711ca2360e5962","slug":"Altium-Designer/立创EAD导出AD封装","date":"2022-09-08T08:43:00.000Z","updated":"2023-04-15T05:05:02.767Z","comments":true,"path":"api/articles/Altium-Designer/立创EAD导出AD封装.json","keywords":null,"cover":"/img/EDA2AD/AD logo.jpg","text":"立创 EDA 导出 AD 封装 导出 AD 库 确认导出 得到 AD 的 pcb 文件 生成的是 pcb 文件，需要再 AD 中生成元件封装库 生成元件封装库 得到元件封装库 导出 3D 模型文件 导出 3D 模型 选择导出 使用 FreeCAD 打开文件，并删除 PCB 底板 ...","link":"","photos":[],"count_time":{"symbolsCount":208,"symbolsTime":"1 mins."},"categories":[{"name":"电子技术","slug":"电子技术","count":3,"path":"api/categories/电子技术.json"}],"tags":[{"name":"Altium Designer","slug":"Altium-Designer","count":2,"path":"api/tags/Altium-Designer.json"},{"name":"立创EDA","slug":"立创EDA","count":1,"path":"api/tags/立创EDA.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Python 字符串操作","uid":"a6cc85e12f76b1f87c9f343cdd3617c3","slug":"Pyhon/Python 字符串操作","date":"2022-08-15T07:00:00.000Z","updated":"2023-08-19T06:41:45.350Z","comments":true,"path":"api/articles/Pyhon/Python 字符串操作.json","keywords":null,"cover":"/img/python/logo.png","text":"1. 字符串的创建 var1 &#x3D; &#39;hello&#39; var2 &#x3D; &#39;world&#39; 2. Python 访问字符串中的值 python中使用切片来截取字符串其中一段内容，切片截取的内容不包含结束下标对应的数据 [起始下标 : 结束下...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"Python","slug":"Python","count":5,"path":"api/categories/Python.json"}],"tags":[{"name":"Python tips","slug":"Python-tips","count":5,"path":"api/tags/Python-tips.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}