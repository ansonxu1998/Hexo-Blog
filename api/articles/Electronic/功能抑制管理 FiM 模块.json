{"title":"功能抑制管理 FiM 模块","uid":"5af98a3dea0ccd1a1ddd7da3e7c8bdbc","slug":"Electronic/功能抑制管理 FiM 模块","date":"2023-09-22T07:00:00.000Z","updated":"2023-09-30T01:51:13.556Z","comments":true,"path":"api/articles/Electronic/功能抑制管理 FiM 模块.json","keywords":null,"cover":[],"content":"<p>Ref: <a href=\"https://www.bilibili.com/video/BV11k4y1F7nz/?spm_id_from=333.880.my_history.page.click&amp;vd_source=79fab02420a4272bfbeb90caeb1f0f0b\">功能抑制管理 FiM 模块</a></p>\n<h2 id=\"一fim-模块总体介绍\">一、FiM 模块总体介绍</h2>\n<h3 id=\"autosar-架构-fim-模块层级关系\">1.1 Autosar 架构 FiM 模块层级关系</h3>\n<p><img src=\"/img/Autosar/2023-09-26-1.png\" /></p>\n<ul>\n<li>AUTOSAR 采用<strong>分层软件架构模式</strong>，总体划分为六大层级：\n<ul>\n<li>MCAL 层</li>\n<li>ECU 硬件抽象层</li>\n<li>系统服务层</li>\n<li>复杂驱动层</li>\n<li>RTE 层</li>\n<li>应用层</li>\n</ul></li>\n<li>FiM 模块属于<strong>系统服务层</strong></li>\n<li>FiM 模块与硬件完全解耦</li>\n</ul>\n<h3 id=\"fim-模块依赖关系\">1.2 FiM 模块依赖关系</h3>\n<ul>\n<li><code>Dem -&gt; FiM</code>: Dem 模块上报故障状态至 FiM 模块</li>\n<li><code>FiM -&gt; SW-C</code>: FiM 模块提供 SW-C 模块函数接口获取功能降级状态</li>\n<li><code>FiM -&gt; EcuM</code>: FiM 模块提供 EcuM 初始化函数用于初始化和去初始化</li>\n<li><code>FiM -&gt; BSW</code>: FiM 模块提供 BSW 模块函数接口用于获取功能降级状态</li>\n<li><code>FiM -&gt; RTE</code>: FiM 模块提供相关主函数用于在 RTE 中系统调度</li>\n</ul>\n<p><img src=\"/img/Autosar/2023-09-26-2.svg\" /></p>\n<h3 id=\"主体功能与应用场景\">1.3 主体功能与应用场景</h3>\n<p><img src=\"/img/Autosar/2023-09-26-3.svg\" /></p>\n<ul>\n<li>FiM 模块提供了一种基于抑制场景的功能降级策略，同时该抑制场景可配置</li>\n<li>可通过特定的 Function Identifier(FID) 来实现相应的抑制场景</li>\n<li>抑制场景可基于 Dem 模块的 Event 在 FiM 模块中根据降级需求完成映射</li>\n<li>FiM 模块为 BSW 以及 SW-C 各模块的抑制场景提供了一种有效的降级手段</li>\n</ul>\n<h2 id=\"二fim-模块基本参数\">二、FiM 模块基本参数</h2>\n<h3 id=\"diagnostic-event-status\">2.1 Diagnostic Event Status</h3>\n<table>\n<colgroup>\n<col style=\"width: 31%\" />\n<col style=\"width: 3%\" />\n<col style=\"width: 8%\" />\n<col style=\"width: 56%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th style=\"text-align: center;\">statusOfDTC: bit field name</th>\n<th style=\"text-align: center;\">Bit#</th>\n<th style=\"text-align: center;\">Bit state</th>\n<th style=\"text-align: center;\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">testFailed</td>\n<td style=\"text-align: center;\">0</td>\n<td style=\"text-align: center;\">0</td>\n<td style=\"text-align: center;\">DTC is not failed at the time of the request</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\">testFailedThisOperationCycle</td>\n<td style=\"text-align: center;\">1</td>\n<td style=\"text-align: center;\">0</td>\n<td style=\"text-align: center;\">DTC failed during the current operation cycle</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">pendingDTC</td>\n<td style=\"text-align: center;\">2</td>\n<td style=\"text-align: center;\">0</td>\n<td style=\"text-align: center;\">DTC was not failed on the current or previous operation cycle</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\">confirmedDTC</td>\n<td style=\"text-align: center;\">3</td>\n<td style=\"text-align: center;\">0</td>\n<td style=\"text-align: center;\">DTC is not confiremed at the time of the request</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">testNotCompletedSinceLastClear</td>\n<td style=\"text-align: center;\">4</td>\n<td style=\"text-align: center;\">0</td>\n<td style=\"text-align: center;\">DTC test was completed since the last code clear</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\">testFailedSinceLastClear</td>\n<td style=\"text-align: center;\">5</td>\n<td style=\"text-align: center;\">0</td>\n<td style=\"text-align: center;\">DTC test never failed since last code clear</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">testNotCompletedThisOperationCycle</td>\n<td style=\"text-align: center;\">6</td>\n<td style=\"text-align: center;\">0</td>\n<td style=\"text-align: center;\">DTC test completed this operation cycle</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\">warningIndicatorRequested</td>\n<td style=\"text-align: center;\">7</td>\n<td style=\"text-align: center;\">0</td>\n<td style=\"text-align: center;\">Server is not requesting warningIndicator to be active</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>每个在 Dem 模块中定义的 Event 均有唯一的 Event ID 与之对应、</li>\n<li>每个 Event Status 均有与之对应的 Event Status 定义，如上表所示</li>\n<li>Event Status 如何变化取决于应用层或者 BSW 如何触发</li>\n<li>调用 Dem 模块标准接口来实现故障事件 Event 的上报（<strong>PASS/FAIL/PREFAIL/PREPASS</strong>)</li>\n</ul>\n<h3 id=\"functino-identifier\">2.2 Functino Identifier</h3>\n<p><img src=\"/img/Autosar/2023-09-29-1.jpg\" /></p>\n<ul>\n<li>每一个功能抑制场景可以唯一的 Function Identifier(FID)进行标识</li>\n<li>不同的功能抑制场景不能使用相同的 FID</li>\n<li>多个 Event ID 可以 Map 到同一个 FID</li>\n<li>每个 FID 的允许状态仅由 Map 到 该 FID 的所有 EventID 的 Event Status 共同决定（或运算）</li>\n</ul>\n<h3 id=\"inhibition-mask-fid-perimission-state\">2.3 Inhibition Mask &amp; FID Perimission State</h3>\n<p><img src=\"/img/Autosar/2023-09-29-2.png\" /></p>\n<p><strong>Ihibition Mask:</strong></p>\n<ul>\n<li>每个 Event 的 Event Status 存在对应的 Inhibition Mask，两者之间采用与运算</li>\n<li>一个或多个 Eevent ID 可以 Map 至同一 FID</li>\n<li>Inhibition Mask 可以理解为 FID 的使能条件，即对 Map 该 FID 的 Event Status 中的哪个 Bit 为进行关联</li>\n</ul>\n<p><strong>FID Permission State</strong>：</p>\n<ul>\n<li>FID 是否置位的结果用来表示 FID Permission State</li>\n<li>若 <code>FID Permission State == TRUE</code>，则该 FID 对应的功能可以被使能</li>\n<li>若 <code>FID Permission State == FALSE</code>，则该 FID 对应的功能不可以被使能</li>\n</ul>\n<h2 id=\"三fim-模块间交互关系\">三、FiM 模块间交互关系</h2>\n<h3 id=\"fim-与-dem-模块交互关系\">3.1 FiM 与 Dem 模块交互关系</h3>\n<p><img src=\"/img/Autosar/2023-09-29-3.svg\" /></p>\n<ul>\n<li>Event Status：即 Dem 模块中的 Event status，每一个 Bit 代表相应的含义</li>\n<li>Inhibition Mask：用于决定什么样的 Event Status 会触发上述 FID 置位，有以下三种取值：\n<ul>\n<li>Inhibit if Failed：当 Event Status Bit0 = 1 时，该位为 1，否则为 0</li>\n<li>Inhibit if Tested：当 Event Status Bit6 = 0 时，该值为 1，否则为 0</li>\n<li>Inhibit if Not Tested：当 Event Status Bit6 = 1时，该值为 1，否则为 0</li>\n</ul></li>\n<li>FID：Function Identifier，Bool 类型\n<ul>\n<li><code>FID_1</code> == TRUE：即抑制场景不激活，功能不降级</li>\n<li><code>FID_1</code>== FALSE：即抑制场景激活，功能降级</li>\n</ul></li>\n<li>FID Counter：用于表征当前存在几个 Event 同时发生导致了该类型的抑制场景激活，进而功能降级</li>\n</ul>\n<p><img src=\"/img/Autosar/2023-09-29-4.svg\" /></p>\n<ul>\n<li>Event ID 的状态与 Inhibition MASK 是位与的关系，若位与的结果为1，对应 Mapping 的 FID Counter 就会加 1</li>\n<li>每个 FID 仅能选择其中一种类型 Inhibition MASK，该参数仅支持工具中静态配置，不支持动态更改</li>\n<li>假设 Event A，Event B，Event C 均 Map 了 FID_A，也就意味着当这三个 Event 中任意一个或多个发生时，FID_A 就会置位，即 FID_A == FALSE。每个 FID Counter 初始值均为 0 且值永远大于等于 0</li>\n<li>系统降级算法规则：当 FID_A Counter &gt; 0，FID_A 就会置位，即为 FALSE，相应的系统降级行为就会发生。</li>\n</ul>\n<table>\n<thead>\n<tr class=\"header\">\n<th style=\"text-align: center;\">Event Status &amp; Inhibition MASK</th>\n<th style=\"text-align: center;\">FID_ACounter</th>\n<th style=\"text-align: center;\">系统功能</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">TRUE</td>\n<td style=\"text-align: center;\">1</td>\n<td style=\"text-align: center;\">降级</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\">TRUE</td>\n<td style=\"text-align: center;\">2</td>\n<td style=\"text-align: center;\">降级</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">TRUE</td>\n<td style=\"text-align: center;\">3</td>\n<td style=\"text-align: center;\">降级</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\">FALSE</td>\n<td style=\"text-align: center;\">2</td>\n<td style=\"text-align: center;\">降级</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">FALSE</td>\n<td style=\"text-align: center;\">1</td>\n<td style=\"text-align: center;\">降级</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\">FALSE</td>\n<td style=\"text-align: center;\">0</td>\n<td style=\"text-align: center;\">不降级</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>根据位与的结果，只要 FID_A Counter 不等于 0，FID_A 就会等于 FALSE，系统就会降级</li>\n<li>虽然知道系统降级，但根据 FID 无法判断是哪个 Event 导致的降级，需要通过诊断服务读取内部的 Event 且该 Event 也确实 Map 了该 FID</li>\n</ul>\n<h3 id=\"fim-与-sw-c-模块交互关系\">3.2 FiM 与 SW-C 模块交互关系</h3>\n<p><img src=\"/img/Autosar/2023-09-29-5.bmp\" /></p>\n<ul>\n<li>Front-Left Anti-pinch SW-C 上报 anti_pinch 故障到 DEM 模块</li>\n<li>DEM 模块会识别为 Event anti_Pinch 故障，并调用 DEM 模块接口通知该 Event Status 发生变化</li>\n<li>DEM 模块会调用 FIM 模块相应的函数接口来通知 FIM 中该 Event Status 对相应 FID 的影响</li>\n<li>Front-left Window-lifter SW-C 模块会调用 FIM 模块函数接口 FiM_GetFunctionPermission 轮询相应的 FID 状态，然后做出相应的系统降级行为</li>\n</ul>\n<h2 id=\"四fim-模块调度时序\">四、FiM 模块调度时序</h2>\n<h3 id=\"fim-模块函数调用接口\">4.1 FiM 模块函数调用接口</h3>\n<table>\n<colgroup>\n<col style=\"width: 34%\" />\n<col style=\"width: 65%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>主要函数接口</th>\n<th>基本功能</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>FiM_Init</td>\n<td>完成 FiM 模块相关变量的初始化工作</td>\n</tr>\n<tr class=\"even\">\n<td>FiM_DemTriggerOnMonitorStatus</td>\n<td>提供 DEM 模块当 Event Status 发生变化时通知 FIM 的函数接口，属于 Trigger Action 行为；其中 FIM 获取 Event Status 状态变化，还有一种方法就是 Polling，但是 Polling 方式的缺点是，当 Event 数目较大时，有时候就无法及时察觉某些 Event Status 的快速变化，所以一般而言，都优先选择 Trigger 方式来完成对 FIM 模块的 Event Status 通知。</td>\n</tr>\n<tr class=\"odd\">\n<td>FiM_DemTriggerOnComponentStatus</td>\n<td>当 DEM 模块中的 Component 状态为 FAILED 时就会触发该函数调用通知 FIM 模块</td>\n</tr>\n<tr class=\"even\">\n<td>FiM_GetFunctionPermission</td>\n<td>提供给 BSW 或 SWC 模块来获取 FID 状态的函数接口</td>\n</tr>\n<tr class=\"odd\">\n<td>FiM_SetFunctionAvailable</td>\n<td>用于 BSW 或者 SWC 模块来主动设置某功能是否可用，若输入参数为 FALSE，该功能不可用</td>\n</tr>\n<tr class=\"even\">\n<td>FiM_MainFunction</td>\n<td>实现对 Event Status 与 Inhibition MASK 的计算，此处有两种方式，一种就是 Polling 方式，另外一种就是 Event Trigger 方式，这两种方式的使能通过工具选项 FiMEventUpdateTriggeredByDem 是否为 TRUE 决定</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"fim-模块初始化时序\">4.2 FiM 模块初始化时序</h3>\n<p><img src=\"/img/Autosar/2023-09-29-6.png\" /></p>\n<p>① EcuM 模块首先调用 Dem_Preinit 接口</p>\n<p>② 通过 NVM_ReadAll 函数来获取最近存储的所有 Event 的状态</p>\n<p>③ EcuM 模块调用 FiM_Init 函数来完成内部变量的初始化；调用结束之后，并不能立即被使用</p>\n<p>④ EcuM 模块调用 Dem_Init 完成 Dem 内部变量的初始化，然后在其内部调用 FiM_DemInit 来最终完成 FiM 模块的初始化</p>\n<p>⑤ 从 S4 开始 Dem 模块与 FiM 模块就最终完成了初始化，其他相关函数接口才能够被正常使用</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>若在 Dem_Init 之前就调用 FiM_GetFunctionPermission 的函数接口，那么就会直接返回 E_NOT_OK</p></blockquote>\n<h3 id=\"fim-模块功能作用时序\">4.3 FiM 模块功能作用时序</h3>\n<p><img src=\"/img/Autosar/2023-09-29-7.png\" /></p>\n<p>① Dem 模块调用 FiM_DemTriggerOnMontiorStatus 来通知 FiM 模块 Event Status 发生变化</p>\n<p>② FiM 模块调用 Dem_GetMonitorStatus 来获取最新的 Event Status</p>\n<p>③ SW-C 模块则会调用 FiM 模块功能可用性接口 FiM_GetFunctionPermission 来轮询当前功能是否可用</p>\n<h2 id=\"五基于-etas-工具-fim-模块配置\">五、基于 ETAS 工具 FiM 模块配置</h2>\n<h3 id=\"fim-general-配置\">5.1 FiM General 配置</h3>\n<p><img src=\"/img/Autosar/2023-09-29-8.png\" /></p>\n<table>\n<colgroup>\n<col style=\"width: 4%\" />\n<col style=\"width: 30%\" />\n<col style=\"width: 65%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th style=\"text-align: center;\">序号</th>\n<th style=\"text-align: center;\">配置参数</th>\n<th style=\"text-align: center;\">配置说明</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">1</td>\n<td style=\"text-align: center;\">FimDevErrorDetect</td>\n<td style=\"text-align: center;\">TRUE：开启 Det 模块检测，有错误上报至 Det 模块<br />FALSE：关闭 Det 模块检测，有错误不上报</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\">2</td>\n<td style=\"text-align: center;\">FiMEventUpdateTriggeredByDeM</td>\n<td style=\"text-align: center;\">TRUE：FIM 模块采用 Event Trigger 模式检测故障状态变化<br />FALSE：FIM 模块采用 Polling 方式来检测故障状态变化</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">3</td>\n<td style=\"text-align: center;\">FiMTaskTime</td>\n<td style=\"text-align: center;\">单位：s，表示 FiM_Mainfunction 的运行周期，一般为 10 ms</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\">4</td>\n<td style=\"text-align: center;\">FiMVersionInfoApi</td>\n<td style=\"text-align: center;\">TRUE：使能获取 FIM 模块 AUTOSAR 版本的函数接口<br />FALSE：关闭获取 FIM 模块 AUTOSAR 版本的函数接口</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"fimconfigset-配置\">5.2 FiMConfigSet 配置</h3>\n<h4 id=\"fimfid-配置\">5.2.1 FiMFID 配置</h4>\n<p><img src=\"/img/Autosar/2023-09-29-9.png\" /></p>\n<p>在 FiMFID container 中新建一个名为 \"FiMFID\" 的子项，便创建了一个新的 FID。</p>\n<h4 id=\"fiminhibitionconfiguration-配置创建-event-id-inhibitionmask-fid-映射关系\">5.2.2 FiMInhibitionConfiguration 配置（创建 Event ID-InhibitionMask-FID 映射关系）</h4>\n<p><img src=\"/img/Autosar/2023-09-29-10.png\" /></p>\n<table>\n<colgroup>\n<col style=\"width: 4%\" />\n<col style=\"width: 21%\" />\n<col style=\"width: 73%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th style=\"text-align: center;\">序号</th>\n<th style=\"text-align: center;\">配置参数</th>\n<th style=\"text-align: center;\">配置说明</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">1</td>\n<td style=\"text-align: center;\">FiMInhibitionMask</td>\n<td style=\"text-align: center;\"><code>FIM_LAST_FAILED</code>：识别 Eevent Status 的 bit 0 是否置位，若为 1，则表示功能抑制使能<br /><code>FIM_NOT_TESTED</code>：识别 Event Status 的 bit 6 是否置位，若为 1，则表示功能抑制使能<br /><code>FIM_TESTED</code>：识别 Event Status 的 bit 6 是否置位，若为 0，则表示功能抑制使能<br /><code>FIM_TESTED_AND_FAILED</code>：识别 Event Status 的 bit 6 == 0 与 bit 0 == 1，若为 1，则表示功能抑制使能</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\">2</td>\n<td style=\"text-align: center;\">FiMInhFunctionId</td>\n<td style=\"text-align: center;\">用于索引上述创建的 FiMFID （如 FiMFID_Test)</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">3</td>\n<td style=\"text-align: center;\">FiMInhComponentRef</td>\n<td style=\"text-align: center;\">用于索引 Dem 模块中的 Component 模块，若对应的 Component ID 为 FAIL，则表示功能抑制使能</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\">4</td>\n<td style=\"text-align: center;\">FiMInhEventRef</td>\n<td style=\"text-align: center;\">用于索引该 FID 所需 Map 的 Event，ETH 相关事件的状态与 Inhibition MASK 进行与运算，若结果非 0，则对应的 FiMFID_Test 状态则为 FALSE，即触发系统降级行为</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">5</td>\n<td style=\"text-align: center;\">FiMInhSumRef</td>\n<td style=\"text-align: center;\">用于索引相关 Event 事件的集合，便于某一类 Event 会 Map 多个不同的 FID 时，可以实现索引的复用</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"fimsummaryevent-配置\">5.2.3 FiMSummaryEvent 配置</h4>\n<p>在 FiMSummaryEvents Container 中创建一个子项 \"FimSummaryEvent_0\"，通过在该子项中 FiMInputEventRef 中索引 Dem 模块中的 Event 作为同一个 summary Event，供 FiMInhibitionConfigurations 中参数索引使用</p>\n<p><img src=\"/img/Autosar/2023-09-29-11.png\" /></p>\n","text":"Ref: 功能抑制管理 FiM 模块 一、FiM 模块总体介绍 1.1 Autosar 架构 FiM 模块层级关系 AUTOSAR 采用分层软件架构模式，总体划分为六大层级： MCAL 层 ECU 硬件抽象层 系统服务层 复杂驱动层 RTE 层 应用层 FiM 模块属于系统服务层...","link":"","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[{"name":"汽车电子","slug":"汽车电子","count":2,"path":"api/categories/汽车电子.json"}],"tags":[{"name":"Autosar","slug":"Autosar","count":1,"path":"api/tags/Autosar.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80fim-%E6%A8%A1%E5%9D%97%E6%80%BB%E4%BD%93%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">一、FiM 模块总体介绍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#autosar-%E6%9E%B6%E6%9E%84-fim-%E6%A8%A1%E5%9D%97%E5%B1%82%E7%BA%A7%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">1.1 Autosar 架构 FiM 模块层级关系</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#fim-%E6%A8%A1%E5%9D%97%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">1.2 FiM 模块依赖关系</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E4%BD%93%E5%8A%9F%E8%83%BD%E4%B8%8E%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">1.3 主体功能与应用场景</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8Cfim-%E6%A8%A1%E5%9D%97%E5%9F%BA%E6%9C%AC%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">二、FiM 模块基本参数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#diagnostic-event-status\"><span class=\"toc-text\">2.1 Diagnostic Event Status</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#functino-identifier\"><span class=\"toc-text\">2.2 Functino Identifier</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#inhibition-mask-fid-perimission-state\"><span class=\"toc-text\">2.3 Inhibition Mask &amp; FID Perimission State</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89fim-%E6%A8%A1%E5%9D%97%E9%97%B4%E4%BA%A4%E4%BA%92%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">三、FiM 模块间交互关系</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#fim-%E4%B8%8E-dem-%E6%A8%A1%E5%9D%97%E4%BA%A4%E4%BA%92%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">3.1 FiM 与 Dem 模块交互关系</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#fim-%E4%B8%8E-sw-c-%E6%A8%A1%E5%9D%97%E4%BA%A4%E4%BA%92%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">3.2 FiM 与 SW-C 模块交互关系</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9Bfim-%E6%A8%A1%E5%9D%97%E8%B0%83%E5%BA%A6%E6%97%B6%E5%BA%8F\"><span class=\"toc-text\">四、FiM 模块调度时序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#fim-%E6%A8%A1%E5%9D%97%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">4.1 FiM 模块函数调用接口</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#fim-%E6%A8%A1%E5%9D%97%E5%88%9D%E5%A7%8B%E5%8C%96%E6%97%B6%E5%BA%8F\"><span class=\"toc-text\">4.2 FiM 模块初始化时序</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#fim-%E6%A8%A1%E5%9D%97%E5%8A%9F%E8%83%BD%E4%BD%9C%E7%94%A8%E6%97%B6%E5%BA%8F\"><span class=\"toc-text\">4.3 FiM 模块功能作用时序</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%94%E5%9F%BA%E4%BA%8E-etas-%E5%B7%A5%E5%85%B7-fim-%E6%A8%A1%E5%9D%97%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">五、基于 ETAS 工具 FiM 模块配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#fim-general-%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">5.1 FiM General 配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#fimconfigset-%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">5.2 FiMConfigSet 配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#fimfid-%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">5.2.1 FiMFID 配置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#fiminhibitionconfiguration-%E9%85%8D%E7%BD%AE%E5%88%9B%E5%BB%BA-event-id-inhibitionmask-fid-%E6%98%A0%E5%B0%84%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">5.2.2 FiMInhibitionConfiguration 配置（创建 Event ID-InhibitionMask-FID 映射关系）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#fimsummaryevent-%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">5.2.3 FiMSummaryEvent 配置</span></a></li></ol></li></ol></li></ol>","author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"无感 FOC-扩展卡尔曼滤波观测器","uid":"3c1e105762b23aa3751ddcfe95ca126f","slug":"Control/无感FOC-扩展卡尔曼滤波观测器","date":"2023-07-10T07:17:00.000Z","updated":"2023-08-23T07:33:09.063Z","comments":true,"path":"api/articles/Control/无感FOC-扩展卡尔曼滤波观测器.json","keywords":null,"cover":"/img/bg/FOC.png","text":"电机状态方程 永磁同步电机在 坐标下的方程为： 其中 反电动势 为： 转速 和转子位置 的关系如下： 综上可得： 线性系统的状态观测器 确定状态观测器的状态变量为 卡尔曼观测器的输出矩阵 为： 故 矩阵为： 矩阵为： 将状态方程写成矩阵的形式： 由该系统是非线性系统，所以暂时无法...","link":"","photos":[],"count_time":{"symbolsCount":401,"symbolsTime":"1 mins."},"categories":[{"name":"自动控制","slug":"自动控制","count":2,"path":"api/categories/自动控制.json"}],"tags":[{"name":"FOC","slug":"FOC","count":1,"path":"api/tags/FOC.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}