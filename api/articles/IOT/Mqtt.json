{"title":"MQTT V3.1","uid":"a903464ea5b37de55ddd5756ddfafbfa","slug":"IOT/Mqtt","date":"2022-06-18T12:30:03.000Z","updated":"2023-04-15T05:21:05.900Z","comments":true,"path":"api/articles/IOT/Mqtt.json","keywords":null,"cover":"/img/bg/bg1.jpg","content":"<h2 id=\"消息格式\">消息格式</h2>\n<p>每个 MQTT 消息可能包含三个部分：</p>\n<ul>\n<li>Fixed header(全部消息类型)</li>\n<li>Variable header(部分消息类型)</li>\n<li>Payload(部分消息类型)</li>\n</ul>\n<h3 id=\"fixed-header\">Fixed header</h3>\n<p>每个 MQTT 消息类型都必须包含 fixed header. fixed header\n的格式如下表所示：</p>\n<p><img src=\"/img/mqtt/fixed_header.PNG\" /></p>\n<h4 id=\"message-type消息类型\">Message Type(消息类型)</h4>\n<p><strong>Position</strong>：byte1，bits 7-4</p>\n<ol start=\"0\" type=\"1\">\n<li>Reserved</li>\n<li>CONNECT</li>\n<li>CONNACK</li>\n<li>PUBLISH</li>\n<li>PUBACK</li>\n<li>PUBREC</li>\n<li>PUBREL</li>\n<li>PUBCOMP</li>\n<li>SUBSCRIBE</li>\n<li>SUBACK</li>\n<li>UNSUBSCRIBE</li>\n<li>UNSUBACK</li>\n<li>PINGREQ</li>\n<li>PINGRESP</li>\n<li>DISCONNECT</li>\n<li>Reserved</li>\n</ol>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">enum msgTypes&#123;\n    CONNECT &#x3D; 1, CONNACK, PUBLISH, PUBACK, PUBREC, PUBREL, PUBCOMP, SUBSCRIBE, UNSUBSCRIBE, UNSUBACK, PINGREQ, PINGRESP, DISCONNECT\n&#125;</code></pre>\n<h4 id=\"flags标志位\">Flags(标志位)</h4>\n<h5 id=\"dup\">DUP</h5>\n<p><strong>Position</strong>: byte1， bit 3.</p>\n<p>当客户端或服务器试图重新发送时，设置次标志。</p>\n<p>注：只能用于 QoS 值大于 0\n的消息，并且需要一个确认(acknowledgment)。当 DUP 位被设置时，variable\nheader 需要包含 Message ID。</p>\n<h5 id=\"qos\">QoS</h5>\n<p><strong>Position</strong>：byte1，bits 2-1.</p>\n<p>该标志用于指示所发送的消息的保证级别。QoS 级别如下表：</p>\n<p><img src=\"/img/mqtt/QoS_level.PNG\" /></p>\n<h5 id=\"retain\">RETAIN</h5>\n<p><strong>Position</strong>：byte1，bit 0.</p>\n<p>该标志只能用于 <code>PUBLISH</code>\n消息类型。当客户端向服务器发送一个 <code>PUBLISH</code> 消息时，如果\n<code>RETAIN</code> 标志设置为\n1，则服务器应该在将消息传递给订阅方之后，依然保存该消息。</p>\n<p>当一个 Topic 上建立了新的订阅时，且订阅方设置了 <code>RETAIN</code>\n标志位，服务器应该将最后保留的消息发送给该订阅方。若没有保留任何消息，则不发送消息。</p>\n<p>为了让客户端区分所接收到的消失是服务器保留的消息，还是服务器实时发布的消息。当原始\n<code>PUBLISH</code> 到达时已存在的订阅导致服务器向客户端发送\n<code>PUBLISH</code>时，不应使用 <code>RETAIN</code> 标志设置，不管原始\nPUBLISH 的保留标志。</p>\n<p>如果服务器接收到零长度 payload 的消息，并且在同一主题上设置了\n<code>RETAIN</code> 标志，则可以删除保留消息。</p>\n<h4 id=\"remaining-length\">Remaining Length</h4>\n<p>表示当前消息中剩余的字节数，包括 variable header 和 payload\n中的数据。</p>\n<h3 id=\"variable-header\">Variable header</h3>\n<p>某些类型的 MQTT 命令消息还包含一个 variable header。它位于 fixed\nheader 和 payload 之间。</p>\n<p><code>Remaining Length</code> 字段的字节不影响 <code>Remaining</code>\n的字节计数长度值。该值只考虑 variable header 和 payload。</p>\n<p>variable header 字段的格式如下，它们必须按照顺序出现在报头中：</p>\n<h4 id=\"protocol-name\">Protocol name</h4>\n<p>消息类型：<code>CONNECT</code></p>\n<p>该字段是一个 UTF-encoded 的字符串，表示协议名称 MQIsdp。</p>\n<h4 id=\"protocol-version\">Protocol version</h4>\n<p>消息类型：<code>CONNECT</code></p>\n<p>该字段是一个8位无符号值，表示客户端使用的协议的修订级别。V3.1\n版本的协议表示如下：</p>\n<p><img src=\"/img/mqtt/protocol_version.PNG\" /></p>\n<h4 id=\"connect-flags\">Connect flags</h4>\n<p>消息类型：<code>CONNECT</code></p>\n<p>标志位：<code>Clean session flag</code>、<code>Will</code>、<code>Will QoS</code>、<code>Retain flags</code></p>\n<p><img src=\"/img/mqtt/connect_flags.PNG\" /></p>\n<h5 id=\"clean-session-flag\">Clean session flag</h5>\n<p><strong>Position</strong>：bit 1</p>\n<p>如果没有设置(0)，那么服务器在断开连接后必须存储客户端的订阅。这包括继续存储订阅主题的\nQoS 1 和 QoS 2\n消息，以便在客户端重新连接时交付它们。服务器还必须维护在连接丢失时传递的动态消息的状态。这个信息必须保存到客户端重新连接。</p>\n<p>如果设置为(1)，那么服务器必须丢弃之前维护的关于客户端的任何信息，并将连接视为“干净的”。当客户端断开连接时，服务器也必须丢弃任何状态。</p>\n<h5 id=\"will-flag\">Will flag</h5>\n<p><strong>Position</strong>：bit 2</p>\n<p>Will message 是当服务器与客户端的连接意外发生中断(I/O错误，客户端在\nKeep Alive\n规定的时间内未能完成通信)时，由服务器代替客户端所发布的消息。</p>\n<p>如果设置了 <code>Will</code> 标志，那么 <code>Will QoS</code> 和\n<code>Will Retain</code> 标志必须出现在 <code>Connect flags</code>\n字段中。同时， <code>Will Topic</code> 和 <code>Will Message</code>\n字段也必须包含在 payload 中。</p>\n<h5 id=\"will-qos\">Will QoS</h5>\n<p><strong>Position</strong>：bit 4，3</p>\n<p>设置 Will Message 的 QoS level，QoS level 同上，分为 3 级。</p>\n<h5 id=\"will-retain\">Will Retain</h5>\n<p><strong>Position</strong>：bit 5</p>\n<p><code>Will Retain</code>\n标志表示在客户端意外断开连接的情况下，服务器是否应该保留由服务器代表客户端发布的Will消息。</p>\n<h5 id=\"user-name-and-password-flags\">User name and password flags</h5>\n<p><strong>Position</strong>：bits 6，7</p>\n<p>连接的客户端可以指定用户名和密码，设置标志位表示用户名和密码(可选)包含在\n<code>CONNECT</code> 消息的 payload。</p>\n<p>如果设置了 <code>User Name</code> 标志位，则 <code>User Name</code>\n字段为必填字段，否则其值将被忽略。 如果设置了 <code>Password</code>\n标志，则 <code>Password</code> 字段是必须的，否则其值将被忽略。\n不提供用户名而提供密码是无效的。</p>\n<h4 id=\"keep-alive-timer\">Keep Alive timer</h4>\n<p>消息类型：<code>CONNECT</code></p>\n<p>Keep\nAlive计时器(以秒为单位)定义了从客户端接收到的消息之间的最大时间间隔。它使用服务器能够检测到客户端断开连接，并且不必等待\nTCP/IP 连接超时。客户端必须在每个 Keep Alive\n时间段内发送消息。如果在该时间段内没有与数据相关的消息，则客户端发送一个\n<code>PINGREQ</code> 消息，服务器用 <code>PINGRESP</code>\n消息表示确认。</p>\n<p>Keep Alive\n定时器是一个16位的值，表示该时间周期的秒数。实际值与应用程序相关，但典型值是几分钟。最长约18小时。值为0(0)表示客户机没有断开连接。</p>\n<p>Keep Alive计时器的格式如下表所示。Keep Alive Timer 的 2 字节顺序是\nMSB，然后是 LSB (big-endian)。</p>\n<p><img src=\"/img/mqtt/keep_alive_timer.PNG\" /></p>\n<h4 id=\"connect-return-code\">Connect return code</h4>\n<p>消息类型：<code>CONNACK</code></p>\n<p>该字段定义一个 1 字节无符号返回码。返回码如下表所示：</p>\n<p><img src=\"/img/mqtt/connect_return_code.PNG\" /></p>\n<p><img src=\"/img/mqtt/return_code.PNG\" /></p>\n<h4 id=\"topic-name\">Topic name</h4>\n<p>消息类型：<code>PUBLISH</code></p>\n<p>主题名称是标识将有效负载数据发布到的信息通道的键。订阅方使用密钥来标识希望在其上接收发布信息的信息通道。</p>\n<p>主题名称是UTF-encoded 的字符串。主题名称的长度不超过32767个字符。</p>\n<h3 id=\"payload\">Payload</h3>\n<h4 id=\"connect\">CONNECT</h4>\n<p>Payload 包含一个或多个 UTF-8 encoded\n的字符串。它们为客户端指定一个唯一的标识符、一个Will主题和消息以及要使用的用户名和密码。除了第一个变量外，其他的都是可选的，它们的存在取决于变量头中的标志。</p>\n<h4 id=\"subscribe\">SUBSCRIBE</h4>\n<p>Payload 包含客户端可以订阅的主题名称列表和QoS级别。这些字符串是\nUTF-encoded。</p>\n<h4 id=\"suback\">SUBACK</h4>\n<p>Payload 包含授予的 QoS level 的列表。\n这些是服务端的管理员允许客户端订阅特定 Topic Name 的 QoS level。 授予的\nQoS 级别的列出顺序与对应的\n<code>SUBSCRIBE</code>消息中的主题名称相同。</p>\n<hr />\n<p><code>PUBLISH</code> 消息的 Payload\n部分只包含特定于应用程序的数据。没有对数据的性质或内容做任何假设，消息的这一部分被视为\nBLOB。</p>\n<h3 id=\"message-identifiers\">Message identifiers</h3>\n<p>消息类型：<code>PUBLISH</code>,<code>PUBACK</code>,<code>PUBREC</code>,<code>PUBREL</code>,<code>PUBCOMP</code>,<code>SUBSCRIBE</code>,<code>SUBACK</code>,<code>UNSUBSCRIBE</code>,<code>UNSUBACK</code></p>\n<p>只有 QoS level 为 1 或 2 的消息才会有 Message ID。</p>\n<p>Message ID 是一个 16\n位无符号整数，在特定通信方向的“正在传输”消息集合中必须是唯一的。</p>\n<p>注：客户端将维护它自己的 Message IDs 列表，与它所连接的服务器使用的\nMessage IDs 分开。客户端可以发送一个 Message ID 为 1 的\n<code>PUBLISH</code>，同时接收 Message ID 为 1\n的<code>PUBLISH</code>。</p>\n<p>Message Identifier 的两个字节顺序是 MSB，然后是 LSB(大端序)。</p>\n<p><img src=\"/img/mqtt/Message_ID.PNG\" /></p>\n<h3 id=\"mqtt-and-utf-8\">MQTT and UTF-8</h3>\n<p>在MQTT中，字符串的前缀是两个字节，以表示长度，如下表所示。</p>\n<p><img src=\"/img/mqtt/MQTT_string.PNG\" /></p>\n<p>字符串长度是编码字符串的字节数，而不是字符数。例如，字符串OTWP使用UTF-8编码，如下表所示。</p>\n<p><img src=\"/img/mqtt/string_length.PNG\" /></p>\n<h2 id=\"命令报文\">命令报文</h2>\n<h3 id=\"connect---客户端向服务器提交连接请求\">CONNECT -\n客户端向服务器提交连接请求</h3>\n<p>当建立从客户机到服务器的 TCP/IP 套接字连接时，必须使用\n<code>CONNECT</code> 流创建一个协议级别的会话。</p>\n<h4 id=\"fixed-header-1\">Fixed header</h4>\n<p><img src=\"/img/mqtt/CONNECT_fixed_header.PNG\" /></p>\n<p>Remaining Length 是可变报头的长度(12字节) 和 Payload\n的长度。这可以是一个多字节字段。</p>\n<h4 id=\"variable-header-1\">Variable header</h4>\n<p><img src=\"/img/mqtt/CONNECT_variable_header_1.PNG\" /></p>\n<p><img src=\"/img/mqtt/CONNECT_variable_header_2.PNG\" /></p>\n<h4 id=\"payload-1\">Payload</h4>\n<p><code>CONNECT</code> 消息的 payload\n包含一个或多个UTF-8编码的字符串，基于 variable header\n中的标志。如果存在字符串，则必须按以下顺序出现:</p>\n<h5 id=\"client-identifier\">Client Identifier</h5>\n<p>UTF-encoded 字符串，长度在 1 - 23\n个字符之间，在所有连接到服务器的客户端中，ID 必须是唯一的。如果 ID\n字符超过 23 个，服务器将返回错误代码 2：Identifier Rejected.</p>\n<h5 id=\"will-topic\">Will Topic</h5>\n<p>(如果 Will Flag 设置)第 2 个 UTF-8 encoding 字符串为 Will Topic。Will\nMessage 将被发布到 Will Topic。</p>\n<h5 id=\"will-message\">Will Message</h5>\n<p>(如果 Will Flag 设置)第 3 个 UTF-8 encoding 字符串为 Will\nMessage。Will Message 定义了在客户端意外断开连接时发布到 Will Topic\n的消息的内容。这可能是一个零长度的消息。</p>\n<h5 id=\"user-name\">User Name</h5>\n<p>(如果 User Name Flag 设置)第 4 个 UTF-8 encoding 字符串为 User\nName。User Name 用于标识正在连接的用户的名称，用于认证。User Name\n的长度建议不超过12个字符。</p>\n<h5 id=\"password\">Password</h5>\n<p>(如果 Password Flag 设置)第 5 个 UTF-8 encoding 字符串为\nPassword。连接用户对应的密码，可用于认证。建议密码长度不超过12个字符。</p>\n<h4 id=\"response\">Response</h4>\n<p>服务器发送 <code>CONNACK</code> 消息来响应来自客户端的\n<code>CONNECT</code> 消息。</p>\n<p>如果在 TCP/IP\n连接建立后，服务器在合理的时间内没有收到CONNECT消息，服务器应该关闭连接。</p>\n<p>如果客户端在合理的时间内没有收到来自服务器的 <code>CONNACK</code>\n消息，客户端应该关闭TCP/IP\n套接字连接，并通过打开一个新的套接字到服务器并发出 <code>CONNECT</code>\n消息来重新启动会话。</p>\n<p>如果具有相同客户端 ID 的客户端已经连接到服务器，在完成新客户端的\n<code>CONNECT</code> 流之前，服务器必须断开“旧的”客户端。</p>\n<h3 id=\"connack---确认连接请求\">CONNACK - 确认连接请求</h3>\n<p><code>CONNACK</code> 消息是服务器响应客户端 <code>CONNECT</code>\n请求而发送的消息。</p>\n<h4 id=\"fiexed-header\">Fiexed header</h4>\n<p><img src=\"/img/mqtt/CONNACK_fixed_header.PNG\" /></p>\n<h4 id=\"variable-header-2\">Variable header</h4>\n<p><img src=\"/img/mqtt/CONNACK_variable_header_1.PNG\" /></p>\n<p><img src=\"/img/mqtt/CONNACK_variable_header_2.PNG\" /></p>\n<h4 id=\"payload-2\">Payload</h4>\n<p>无</p>\n<h3 id=\"publish---发布消息\">PUBLISH - 发布消息</h3>\n<p><code>PUBLISH</code>\n消息由客户机发送到服务器，分发给感兴趣的订阅者。每个\n<code>PUBLISH</code>\n消息都与一个主题名称(也称为主题或通道)相对应。发布到特定主题名称的消息将传递给该主题的连接订阅者。</p>\n<h4 id=\"fixed-header-2\">Fixed header</h4>\n<p><img src=\"/img/mqtt/PUBLISH_fixed_header.PNG\" /></p>\n<h4 id=\"variable-header-3\">Variable header</h4>\n<h5 id=\"topic-name-1\">Topic name</h5>\n<p>一个 UTF-encoding 字符串。<font color='red'>不能包含 Topic\n通配符。</font>当使用通配符订阅的客户端接收到此字符串时，此字符串将是原始发布者指定的绝对主题，而不是客户端使用的订阅字符串。</p>\n<h5 id=\"message-id\">Message ID</h5>\n<p><font color='geen'>用于具有 QoS level 1 和 QoS level 2\n的消息。</font></p>\n<p>下表显示了 <code>PUBLISH</code> 消息的一个示例 Variable header。</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th style=\"text-align: left;\">Field</th>\n<th style=\"text-align: center;\">Value</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td style=\"text-align: left;\">Topic Name:</td>\n<td style=\"text-align: center;\">\"a/b\"</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: left;\">QoS level</td>\n<td style=\"text-align: center;\">1</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: left;\">Message ID:</td>\n<td style=\"text-align: center;\">10</td>\n</tr>\n</tbody>\n</table>\n<p>本例中 Variable header 的格式如下表所示。</p>\n<p><img src=\"/img/mqtt/PUBLISH_example.PNG\" /></p>\n<h4 id=\"payload-3\">Payload</h4>\n<p>包含要发布的数据。数据的内容和格式是应用程序特有的。</p>\n<h4 id=\"response-1\">Response</h4>\n<p>对 <code>PUBLISH</code> 消息的响应取决于 QoS\nlevel。下表显示了预期的响应。</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th style=\"text-align: left;\">QoS Level</th>\n<th>Expected response</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td style=\"text-align: left;\">QoS 0</td>\n<td>None</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: left;\">QoS 1</td>\n<td>PUBACK</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: left;\">QoS 2</td>\n<td>PUBREC</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"puback---发布确认\">PUBACK - 发布确认</h3>\n<p><code>PUBACK</code> 消息是对 QoS level 1 的 <code>PUBLISH</code>\n消息的响应。服务器发送 <code>PUBACK</code> 消息以响应来自发布客户机的\n<code>PUBLISH</code> 消息，订阅者发送 <code>PUBACK</code>\n消息以响应来自服务器的<code>PUBLISH</code> 消息。</p>\n<h4 id=\"fixed-header-3\">Fixed header</h4>\n<p><img src=\"/img/mqtt/PUBACK_fixed_header.PNG\" /></p>\n<h4 id=\"variable-header-4\">Variable header</h4>\n<p>包含正在被确认的 <code>PUBLISH</code> 消息的消息标识符(Message\nID)。下表显示了变量头文件的格式。</p>\n<p><img src=\"/img/mqtt/PUBACK_variable_header.PNG\" /></p>\n<h4 id=\"payload-4\">Payload</h4>\n<p>无</p>\n<h4 id=\"actions\">Actions</h4>\n<p>当客户端接收到 <code>PUBACK</code>\n消息时，它会丢弃原始消息，因为它也被服务器接收(并记录)。</p>\n<h3 id=\"pubrec---确认发布被接受\">PUBREC - 确认发布被接受</h3>\n<p><code>PUBREC</code> 消息是对具有 QoS level 2 的 <code>PUBLISH</code>\n消息的响应。它是 QoS level 2 协议流的第二条消息。<code>PUBREC</code>\n消息由服务器发送，以响应来自发布客户机的 <code>PUBLISH</code>\n消息，或者由订阅方发送，以响应来自服务器的 <code>PUBLISH</code>\n消息。</p>\n<h4 id=\"fixed-header-4\">Fixed header</h4>\n<p><img src=\"/img/mqtt/PUBREC_fixed_header.PNG\" /></p>\n<h4 id=\"variable-header-5\">Variable header</h4>\n<p>Variable header 包含已确认的 <code>PUBLISH</code> 的 Message\nID。下表显示了变量头文件的格式。</p>\n<p><img src=\"/img/mqtt/PUBREC_variable_header.PNG\" /></p>\n<h4 id=\"payload-5\">Payload</h4>\n<p>无</p>\n<h4 id=\"actions-1\">Actions</h4>\n<p>当接收到 <code>PUBREC</code> 消息时，接收方向发送方发送\n<code>PUBREL</code> 消息， Message ID 与 <code>PUBREC</code>\n消息相同。</p>\n<h3 id=\"pubrel---确认发布\">PUBREL - 确认发布</h3>\n<p><code>PUBREL</code> 消息是发布方对来自服务器的 <code>PUBREC</code>\n消息的响应，或服务器对来自订阅方的<code>PUBREC</code> 消息的响应。它是\nQoS 2 协议流中的第三条消息。</p>\n<h4 id=\"fixed-header-5\">Fixed header</h4>\n<p><img src=\"/img/mqtt/PUBREL_fixed_header.PNG\" /></p>\n<h4 id=\"variable-header-6\">Variable header</h4>\n<p>Variable header 包含与被确认的 <code>PUBREC</code> 消息相同的 Message\nID。下表显示了变量头文件的格式。</p>\n<p><img src=\"/img/mqtt/PUBREL_variable_header.PNG\" /></p>\n<h4 id=\"payload-6\">Payload</h4>\n<p>无</p>\n<h4 id=\"actions-2\">Actions</h4>\n<p>当服务器接收到来自发布方的 <code>PUBREL</code>\n消息时，服务器使原始消息对感兴趣的订阅者可用，并向发布者发送具有相同\nMessage ID 的<code>PUBCOMP</code>\n消息。当订阅者从服务器接收到<code>PUBREL</code>\n消息时，订阅者使该消息对订阅应用程序可用，并向服务器发送\n<code>PUBCOMP</code> 消息。</p>\n<h3 id=\"pubcomp---确认发布完成\">PUBCOMP - 确认发布完成</h3>\n<p>此消息要么是服务器对发布者的 <code>PUBREL</code>\n消息的响应，要么是订阅者对服务器的 <code>PUBREL</code> 消息的响应。它是\nQoS 2 协议流中的第四个也是最后一个消息。</p>\n<h4 id=\"fixed-header-6\">Fixed header</h4>\n<p><img src=\"/img/mqtt/PUBCOMP_fixed_header_1.PNG\" /></p>\n<p><img src=\"/img/mqtt/PUBCOMP_fixed_header_2.PNG\" /></p>\n<h4 id=\"variable-header-7\">Variable header</h4>\n<p>Variable header 包含与确认的 <code>PUBREL</code> 消息相同的 Message\nID。</p>\n<p><img src=\"/img/mqtt/PUBCOMP_variable_header.PNG\" /></p>\n<h4 id=\"payload-7\">Payload</h4>\n<p>无</p>\n<h4 id=\"actions-3\">Actions</h4>\n<p>当客户端接收到 <code>PUBCOMP</code>\n消息时，它会丢弃原始消息，因为它已经被传递给服务器(仅一次)。</p>\n<h3 id=\"subscribe---订阅命名主题\">SUBSCRIBE - 订阅命名主题</h3>\n<p><code>SUBSCRIBE</code>\n消息允许客户端向服务器注册对一个或多个主题名称。发布到这些主题的消息作为\n<code>PUBLISH</code>\n消息从服务器传递到客户端。订阅消息还指定订阅者希望在其上接收发布消息的\nQoS level。</p>\n<h4 id=\"fixed-header-7\">Fixed header</h4>\n<p><img src=\"/img/mqtt/SUBSCRIBE_fixed_header.PNG\" /></p>\n<h4 id=\"variable-header-8\">Variable header</h4>\n<p><img src=\"/img/mqtt/SUBSCRIBE_variable_header.PNG\" /></p>\n<h4 id=\"payload-8\">Payload</h4>\n<p><font color='blue'><code>SUBSCRIBE</code>\n消息的有效负载包含客户端希望订阅的主题名称列表，以及客户端希望接收消息的\nQoS级别。</font></p>\n<p>字符串是 UTF-encoded\n编码的，QoS级别占用单个字节的2位。主题字符串可以包含特殊的topic\n通配符来表示一组主题。 这些 topic/QoS 对是连续打包的，如下表中的示例\npayload 所示。</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th style=\"text-align: left;\">Topic name</th>\n<th>\"a/b\"</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td style=\"text-align: left;\">Requested QoS</td>\n<td>1</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: left;\">Topic name</td>\n<td>\"c/d\"</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: left;\">Requested QoS</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<p><code>SUBSCRIBE</code> 消息中的主题名称没有被压缩。示例 payload\n的格式如下表所示。</p>\n<p><img src=\"/img/mqtt/SUBSCRIBE_payload.PNG\" /></p>\n<p>假设请求的 QoS 级别被授权，客户端接收到的 <code>PUBLISH</code>\n消息小于或等于这个级别，这取决于来自发布者的原始消息的 QoS 级别。</p>\n<p><font color='pink'>例如，如果客户端对特定主题有 QoS leve 1\n的订阅，那么将以 QoS level 0 向客户端发送到该主题的 QoS level 0\n<code>PUBLISH</code> 消息。发送到同一主题的 QoS level 2\n<code>PUBLISH</code> 消息被降级为 QoS level 1\n以交付给客户端。</font></p>\n<p>这意味着发布者负责确定消息可以传递的最大QoS，但订阅者可以将QoS降级为更适合其使用的QoS。消息的QoS从不升级。</p>\n<p><font color='red'>一个同时设置了两个 QoS\n级别位的请求应该被认为是一个无效的数据包，并且连接被关闭。</font></p>\n<h4 id=\"response-2\">Response</h4>\n<p>当它从客户端接收到一个 <code>SUBSCRIBE</code> 消息时，服务器用一个\n<code>SUBACK</code> 消息响应。</p>\n<p>服务器可以在客户端接收到 <code>SUBACK</code>\n消息之前开始发送由于订阅而产生的 <code>PUBLISH</code> 消息。</p>\n<h3 id=\"suback---订阅确认\">SUBACK - 订阅确认</h3>\n<p>服务器向客户端发送 <code>SUBACK</code> 消息以确认接收到\n<code>SUBSCRIBE</code> 消息。</p>\n<p><code>SUBACK</code> 消息包含授权的 QoS\n级别的列表。<code>SUBACK</code> 消息中授予的 QoS 级别的顺序与相应的\n<code>SUBSCRIBE</code> 消息中的主题名称的顺序匹配。</p>\n<h4 id=\"fixed-header-8\">Fixed header</h4>\n<p><img src=\"/img/mqtt/SUBACK_fixed_header.PNG\" /></p>\n<h4 id=\"variable-header-9\">Variable header</h4>\n<p>Variable header 包含被确认的订阅消息的 Message\nID。下表显示了变量头文件的格式。</p>\n<p><img src=\"/img/mqtt/PUBCOMP_variable_header.PNG\" /></p>\n<h4 id=\"payload-9\">Payload</h4>\n<p>Payload 包含一个已授权的 QoS 级别向量。每个级别对应于相应的\n<code>SUBSCRIBE</code> 消息中的主题名称。<code>SUBACK</code> 消息中的\nQoS 级别的顺序与 <code>SUBSCRIBE</code> 消息中主题名称和请求的QoS\n对的顺序匹配。Variable header 中的 Message ID 使能够进行匹配\n<code>SUBACK</code> 消息与相应的 <code>SUBSCRIBE</code> 消息。</p>\n<h3 id=\"unsubscribe---取消订阅主题\">UNSUBSCRIBE - 取消订阅主题</h3>\n<p>客户端向服务器发送 <code>UNSUBSCRIBE</code>\n消息以取消对指定主题的订阅。</p>\n<h4 id=\"fixed-header-9\">Fixed header</h4>\n<p><img src=\"/img/mqtt/UNSUBSCRIBE_fixed_header.PNG\" /></p>\n<h4 id=\"variable-header-10\">Variable header</h4>\n<p>Variable header 包含一个 Message ID，因为 <code>UNSUBSCRIBE</code>\n消息的 QoS级别为 1。</p>\n<p><img src=\"/img/mqtt/UNSUBSCRIBE_variable_header.PNG\" /></p>\n<h4 id=\"payload-10\">Payload</h4>\n<p>客户端的 payload 中是取消订阅的主题列表。字符串是\nUTF-encoded，并且连续打包。<code>UNSUBSCRIBE</code>\n消息中的主题名称没有被压缩。下表显示了一个示例 payload。</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th>Topic Name</th>\n<th>\"a/b\"</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>Topic Name</td>\n<td>\"c/d\"</td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"/img/mqtt/UNSUBSCRIBE_payload.PNG\" /></p>\n<h4 id=\"response-3\">Response</h4>\n<p>服务器发送 <code>UNSUBACK</code> 到客户端响应\n<code>UNSUBSCRIBE</code> 消息。</p>\n<h3 id=\"unsuback---取消订阅确认\">UNSUBACK - 取消订阅确认</h3>\n<p><code>UNSUBACK</code> 消息由服务器发送给客户端，以确认接收到\n<code>UNSUBSCRIBE</code> 消息。</p>\n<h4 id=\"fixed-header-10\">Fixed header</h4>\n<p><img src=\"/img/mqtt/UNSUBACK_fixed_header.PNG\" /></p>\n<h4 id=\"variable-header-11\">Variable header</h4>\n<p><img src=\"/img/mqtt/PUBCOMP_variable_header.PNG\" /></p>\n<h4 id=\"payload-11\">Payload</h4>\n<p>无</p>\n<h3 id=\"pingreq\">PINGREQ</h3>\n<p><code>PINGREQ</code>\n消息是从已连接的客户端发送到服务器的“心跳”消息。</p>\n<h4 id=\"fixed-header-11\">Fixed header</h4>\n<p><img src=\"/img/mqtt/PINGREQ_fixed_header.PNG\" /></p>\n<h4 id=\"variable-header-12\">Variable header</h4>\n<p>无</p>\n<h4 id=\"payload-12\">Payload</h4>\n<p>无</p>\n<h4 id=\"response-4\">Response</h4>\n<p>对 <code>PINGREQ</code> 消息的响应是 <code>PINGRESP</code> 消息。</p>\n<h3 id=\"pingresp---ping-响应\">PINGRESP - PING 响应</h3>\n<h4 id=\"fixed-header-12\">Fixed header</h4>\n<p><img src=\"/img/mqtt/PINGRESP_fixed_header_1.PNG\" /></p>\n<p><img src=\"/img/mqtt/PINGRESP_fixed_header_2.PNG\" /></p>\n<h4 id=\"variable-header-13\">Variable header</h4>\n<p>无</p>\n<h4 id=\"payload-13\">Payload</h4>\n<p>无</p>\n<h3 id=\"disconnect\">DISCONNECT</h3>\n<p>客户端向服务器发送 <code>DISCONNECT</code> 消息，表示它即将关闭\nTCP/IP 连接。这允许干净的断开连接，而不是仅仅删除线路。</p>\n<p>如果客户端连接了 clean\n会话标志集，那么之前维护的关于客户端的所有信息将被丢弃。</p>\n<h4 id=\"fixed-header-13\">Fixed header</h4>\n<p><img src=\"/img/mqtt/DISCONNECT_fixed_header.PNG\" /></p>\n<h4 id=\"variable-header-14\">Variable header</h4>\n<p>无</p>\n<h4 id=\"payload-14\">Payload</h4>\n<p>无</p>\n<hr />\n<p>QoS level 1：</p>\n<p><img src=\"/img/mqtt/QoS 1 flow.png\" style=\"zoom:25%;\" /></p>\n<p>QoS level 2：</p>\n<p><img src=\"/img/mqtt/QoS 2 flow.png\" style=\"zoom:25%;\" /></p>\n","text":"消息格式 每个 MQTT 消息可能包含三个部分： Fixed header(全部消息类型) Variable header(部分消息类型) Payload(部分消息类型) Fixed header 每个 MQTT 消息类型都必须包含 fixed header. fixed hea...","link":"","photos":[],"count_time":{"symbolsCount":"8.8k","symbolsTime":"8 mins."},"categories":[{"name":"通信协议","slug":"通信协议","count":2,"path":"api/categories/通信协议.json"}],"tags":[{"name":"MQTT","slug":"MQTT","count":1,"path":"api/tags/MQTT.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B6%88%E6%81%AF%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">消息格式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#fixed-header\"><span class=\"toc-text\">Fixed header</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#message-type%E6%B6%88%E6%81%AF%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">Message Type(消息类型)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#flags%E6%A0%87%E5%BF%97%E4%BD%8D\"><span class=\"toc-text\">Flags(标志位)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#dup\"><span class=\"toc-text\">DUP</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#qos\"><span class=\"toc-text\">QoS</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#retain\"><span class=\"toc-text\">RETAIN</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#remaining-length\"><span class=\"toc-text\">Remaining Length</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#variable-header\"><span class=\"toc-text\">Variable header</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#protocol-name\"><span class=\"toc-text\">Protocol name</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#protocol-version\"><span class=\"toc-text\">Protocol version</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#connect-flags\"><span class=\"toc-text\">Connect flags</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#clean-session-flag\"><span class=\"toc-text\">Clean session flag</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#will-flag\"><span class=\"toc-text\">Will flag</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#will-qos\"><span class=\"toc-text\">Will QoS</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#will-retain\"><span class=\"toc-text\">Will Retain</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#user-name-and-password-flags\"><span class=\"toc-text\">User name and password flags</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#keep-alive-timer\"><span class=\"toc-text\">Keep Alive timer</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#connect-return-code\"><span class=\"toc-text\">Connect return code</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#topic-name\"><span class=\"toc-text\">Topic name</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#payload\"><span class=\"toc-text\">Payload</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#connect\"><span class=\"toc-text\">CONNECT</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#subscribe\"><span class=\"toc-text\">SUBSCRIBE</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#suback\"><span class=\"toc-text\">SUBACK</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#message-identifiers\"><span class=\"toc-text\">Message identifiers</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mqtt-and-utf-8\"><span class=\"toc-text\">MQTT and UTF-8</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%91%BD%E4%BB%A4%E6%8A%A5%E6%96%87\"><span class=\"toc-text\">命令报文</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#connect---%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%90%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8F%90%E4%BA%A4%E8%BF%9E%E6%8E%A5%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">CONNECT -\n客户端向服务器提交连接请求</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#fixed-header-1\"><span class=\"toc-text\">Fixed header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#variable-header-1\"><span class=\"toc-text\">Variable header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#payload-1\"><span class=\"toc-text\">Payload</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#client-identifier\"><span class=\"toc-text\">Client Identifier</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#will-topic\"><span class=\"toc-text\">Will Topic</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#will-message\"><span class=\"toc-text\">Will Message</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#user-name\"><span class=\"toc-text\">User Name</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#password\"><span class=\"toc-text\">Password</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#response\"><span class=\"toc-text\">Response</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#connack---%E7%A1%AE%E8%AE%A4%E8%BF%9E%E6%8E%A5%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">CONNACK - 确认连接请求</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#fiexed-header\"><span class=\"toc-text\">Fiexed header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#variable-header-2\"><span class=\"toc-text\">Variable header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#payload-2\"><span class=\"toc-text\">Payload</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#publish---%E5%8F%91%E5%B8%83%E6%B6%88%E6%81%AF\"><span class=\"toc-text\">PUBLISH - 发布消息</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#fixed-header-2\"><span class=\"toc-text\">Fixed header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#variable-header-3\"><span class=\"toc-text\">Variable header</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#topic-name-1\"><span class=\"toc-text\">Topic name</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#message-id\"><span class=\"toc-text\">Message ID</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#payload-3\"><span class=\"toc-text\">Payload</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#response-1\"><span class=\"toc-text\">Response</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#puback---%E5%8F%91%E5%B8%83%E7%A1%AE%E8%AE%A4\"><span class=\"toc-text\">PUBACK - 发布确认</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#fixed-header-3\"><span class=\"toc-text\">Fixed header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#variable-header-4\"><span class=\"toc-text\">Variable header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#payload-4\"><span class=\"toc-text\">Payload</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#actions\"><span class=\"toc-text\">Actions</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#pubrec---%E7%A1%AE%E8%AE%A4%E5%8F%91%E5%B8%83%E8%A2%AB%E6%8E%A5%E5%8F%97\"><span class=\"toc-text\">PUBREC - 确认发布被接受</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#fixed-header-4\"><span class=\"toc-text\">Fixed header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#variable-header-5\"><span class=\"toc-text\">Variable header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#payload-5\"><span class=\"toc-text\">Payload</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#actions-1\"><span class=\"toc-text\">Actions</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#pubrel---%E7%A1%AE%E8%AE%A4%E5%8F%91%E5%B8%83\"><span class=\"toc-text\">PUBREL - 确认发布</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#fixed-header-5\"><span class=\"toc-text\">Fixed header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#variable-header-6\"><span class=\"toc-text\">Variable header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#payload-6\"><span class=\"toc-text\">Payload</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#actions-2\"><span class=\"toc-text\">Actions</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#pubcomp---%E7%A1%AE%E8%AE%A4%E5%8F%91%E5%B8%83%E5%AE%8C%E6%88%90\"><span class=\"toc-text\">PUBCOMP - 确认发布完成</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#fixed-header-6\"><span class=\"toc-text\">Fixed header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#variable-header-7\"><span class=\"toc-text\">Variable header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#payload-7\"><span class=\"toc-text\">Payload</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#actions-3\"><span class=\"toc-text\">Actions</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#subscribe---%E8%AE%A2%E9%98%85%E5%91%BD%E5%90%8D%E4%B8%BB%E9%A2%98\"><span class=\"toc-text\">SUBSCRIBE - 订阅命名主题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#fixed-header-7\"><span class=\"toc-text\">Fixed header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#variable-header-8\"><span class=\"toc-text\">Variable header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#payload-8\"><span class=\"toc-text\">Payload</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#response-2\"><span class=\"toc-text\">Response</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#suback---%E8%AE%A2%E9%98%85%E7%A1%AE%E8%AE%A4\"><span class=\"toc-text\">SUBACK - 订阅确认</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#fixed-header-8\"><span class=\"toc-text\">Fixed header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#variable-header-9\"><span class=\"toc-text\">Variable header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#payload-9\"><span class=\"toc-text\">Payload</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#unsubscribe---%E5%8F%96%E6%B6%88%E8%AE%A2%E9%98%85%E4%B8%BB%E9%A2%98\"><span class=\"toc-text\">UNSUBSCRIBE - 取消订阅主题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#fixed-header-9\"><span class=\"toc-text\">Fixed header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#variable-header-10\"><span class=\"toc-text\">Variable header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#payload-10\"><span class=\"toc-text\">Payload</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#response-3\"><span class=\"toc-text\">Response</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#unsuback---%E5%8F%96%E6%B6%88%E8%AE%A2%E9%98%85%E7%A1%AE%E8%AE%A4\"><span class=\"toc-text\">UNSUBACK - 取消订阅确认</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#fixed-header-10\"><span class=\"toc-text\">Fixed header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#variable-header-11\"><span class=\"toc-text\">Variable header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#payload-11\"><span class=\"toc-text\">Payload</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#pingreq\"><span class=\"toc-text\">PINGREQ</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#fixed-header-11\"><span class=\"toc-text\">Fixed header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#variable-header-12\"><span class=\"toc-text\">Variable header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#payload-12\"><span class=\"toc-text\">Payload</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#response-4\"><span class=\"toc-text\">Response</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#pingresp---ping-%E5%93%8D%E5%BA%94\"><span class=\"toc-text\">PINGRESP - PING 响应</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#fixed-header-12\"><span class=\"toc-text\">Fixed header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#variable-header-13\"><span class=\"toc-text\">Variable header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#payload-13\"><span class=\"toc-text\">Payload</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#disconnect\"><span class=\"toc-text\">DISCONNECT</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#fixed-header-13\"><span class=\"toc-text\">Fixed header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#variable-header-14\"><span class=\"toc-text\">Variable header</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#payload-14\"><span class=\"toc-text\">Payload</span></a></li></ol></li></ol></li></ol>","author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Latex数学公式","uid":"409671003844af96bee509bb7a2097ee","slug":"Math/Latex_formula","date":"2022-06-20T02:24:00.000Z","updated":"2023-04-17T07:51:59.163Z","comments":true,"path":"api/articles/Math/Latex_formula.json","keywords":null,"cover":"/img/bg/math.jpg","text":"数学公式的插入 类型 环境名称 行内公式 $...$ 独行公式 $$...$$ 希腊字母 命令 大写 小写 alpha gamma epsilon eta iota lambda nu xi rho tau phi psi beta delta zeta theta kappa ...","link":"","photos":[],"count_time":{"symbolsCount":"6.8k","symbolsTime":"6 mins."},"categories":[{"name":"数学","slug":"数学","count":3,"path":"api/categories/数学.json"}],"tags":[{"name":"Latex 公式","slug":"Latex-公式","count":1,"path":"api/tags/Latex-公式.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Linux 服务","uid":"d8ed3ff70bac5529479cf8a31499ebd5","slug":"Linux/service","date":"2022-05-04T04:05:00.000Z","updated":"2023-06-17T13:02:22.172Z","comments":true,"path":"api/articles/Linux/service.json","keywords":null,"cover":"/img/bg/Linux.png","text":"Linux 服务 daemon与服务 系统为了某些功能必须要提供一些服务（系统本身或者网络方面），这个服务就称为service。service 的提供需要程序来运行，完成这个 service 的程序就称之为 daemon。 服务的名称被建立之后，在 Linux 中使用时，通常在服...","link":"","photos":[],"count_time":{"symbolsCount":"8k","symbolsTime":"7 mins."},"categories":[{"name":"Linux","slug":"Linux","count":3,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux 服务","slug":"Linux-服务","count":1,"path":"api/tags/Linux-服务.json"}],"author":{"name":"爱慢跑的乌龟","slug":"blog-author","avatar":"/img/avatar1.jpg","link":"/","description":"求知若饥，虚心若愚！","socials":{"github":"https://github.com/ansonxu1998","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}